// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gamepb/gamepb.proto

#include "gamepb/gamepb.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace gamepb {
constexpr KickPush::KickPush(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : reason_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct KickPushDefaultTypeInternal {
  constexpr KickPushDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~KickPushDefaultTypeInternal() {}
  union {
    KickPush _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT KickPushDefaultTypeInternal _KickPush_default_instance_;
constexpr LoginRequest::LoginRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : openid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , nickname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , avatar_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , platformregistertime_(int64_t{0})
  , time_(0){}
struct LoginRequestDefaultTypeInternal {
  constexpr LoginRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LoginRequestDefaultTypeInternal() {}
  union {
    LoginRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
constexpr LoginResponse::LoginResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : userid_(int64_t{0})
  , coin_(int64_t{0})
  , score_(int64_t{0})
  , medal_(int64_t{0})
  , diamond_(int64_t{0})
  , servertime_(int64_t{0})
  , level_(int64_t{0})
  , gold_(int64_t{0})
  , code_(0){}
struct LoginResponseDefaultTypeInternal {
  constexpr LoginResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LoginResponseDefaultTypeInternal() {}
  union {
    LoginResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
constexpr RoundShareRequest::RoundShareRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct RoundShareRequestDefaultTypeInternal {
  constexpr RoundShareRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoundShareRequestDefaultTypeInternal() {}
  union {
    RoundShareRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoundShareRequestDefaultTypeInternal _RoundShareRequest_default_instance_;
constexpr RoundShareResponse::RoundShareResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct RoundShareResponseDefaultTypeInternal {
  constexpr RoundShareResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoundShareResponseDefaultTypeInternal() {}
  union {
    RoundShareResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoundShareResponseDefaultTypeInternal _RoundShareResponse_default_instance_;
constexpr RoundStartRequest::RoundStartRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct RoundStartRequestDefaultTypeInternal {
  constexpr RoundStartRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoundStartRequestDefaultTypeInternal() {}
  union {
    RoundStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoundStartRequestDefaultTypeInternal _RoundStartRequest_default_instance_;
constexpr RoundStartResponse::RoundStartResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct RoundStartResponseDefaultTypeInternal {
  constexpr RoundStartResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoundStartResponseDefaultTypeInternal() {}
  union {
    RoundStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoundStartResponseDefaultTypeInternal _RoundStartResponse_default_instance_;
constexpr RoundResultRequest::RoundResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : score_(int64_t{0})
  , medal_(int64_t{0}){}
struct RoundResultRequestDefaultTypeInternal {
  constexpr RoundResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoundResultRequestDefaultTypeInternal() {}
  union {
    RoundResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoundResultRequestDefaultTypeInternal _RoundResultRequest_default_instance_;
constexpr RoundResultResponse::RoundResultResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct RoundResultResponseDefaultTypeInternal {
  constexpr RoundResultResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoundResultResponseDefaultTypeInternal() {}
  union {
    RoundResultResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoundResultResponseDefaultTypeInternal _RoundResultResponse_default_instance_;
constexpr RankUser::RankUser(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : openid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , nickname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , avatar_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , score_(int64_t{0}){}
struct RankUserDefaultTypeInternal {
  constexpr RankUserDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RankUserDefaultTypeInternal() {}
  union {
    RankUser _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RankUserDefaultTypeInternal _RankUser_default_instance_;
constexpr GetLevelRankRequest::GetLevelRankRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : type_(0){}
struct GetLevelRankRequestDefaultTypeInternal {
  constexpr GetLevelRankRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetLevelRankRequestDefaultTypeInternal() {}
  union {
    GetLevelRankRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetLevelRankRequestDefaultTypeInternal _GetLevelRankRequest_default_instance_;
constexpr GetLevelRankResponse::GetLevelRankResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : users_()
  , code_(0)
  , rank_(0)
  , score_(int64_t{0}){}
struct GetLevelRankResponseDefaultTypeInternal {
  constexpr GetLevelRankResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetLevelRankResponseDefaultTypeInternal() {}
  union {
    GetLevelRankResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetLevelRankResponseDefaultTypeInternal _GetLevelRankResponse_default_instance_;
constexpr GetScoreRankRequest::GetScoreRankRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : type_(0){}
struct GetScoreRankRequestDefaultTypeInternal {
  constexpr GetScoreRankRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetScoreRankRequestDefaultTypeInternal() {}
  union {
    GetScoreRankRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetScoreRankRequestDefaultTypeInternal _GetScoreRankRequest_default_instance_;
constexpr GetScoreRankResponse::GetScoreRankResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : users_()
  , code_(0)
  , rank_(0)
  , score_(int64_t{0}){}
struct GetScoreRankResponseDefaultTypeInternal {
  constexpr GetScoreRankResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetScoreRankResponseDefaultTypeInternal() {}
  union {
    GetScoreRankResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetScoreRankResponseDefaultTypeInternal _GetScoreRankResponse_default_instance_;
constexpr GetMedalRankRequest::GetMedalRankRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : type_(0){}
struct GetMedalRankRequestDefaultTypeInternal {
  constexpr GetMedalRankRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetMedalRankRequestDefaultTypeInternal() {}
  union {
    GetMedalRankRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetMedalRankRequestDefaultTypeInternal _GetMedalRankRequest_default_instance_;
constexpr GetMedalRankResponse::GetMedalRankResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : users_()
  , code_(0)
  , rank_(0)
  , score_(int64_t{0}){}
struct GetMedalRankResponseDefaultTypeInternal {
  constexpr GetMedalRankResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetMedalRankResponseDefaultTypeInternal() {}
  union {
    GetMedalRankResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetMedalRankResponseDefaultTypeInternal _GetMedalRankResponse_default_instance_;
constexpr DaxiguaGetDataRequest::DaxiguaGetDataRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct DaxiguaGetDataRequestDefaultTypeInternal {
  constexpr DaxiguaGetDataRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DaxiguaGetDataRequestDefaultTypeInternal() {}
  union {
    DaxiguaGetDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DaxiguaGetDataRequestDefaultTypeInternal _DaxiguaGetDataRequest_default_instance_;
constexpr DaxiguaGetDataResponse::DaxiguaGetDataResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : userid_(int64_t{0})
  , code_(0)
  , gameid_(0){}
struct DaxiguaGetDataResponseDefaultTypeInternal {
  constexpr DaxiguaGetDataResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DaxiguaGetDataResponseDefaultTypeInternal() {}
  union {
    DaxiguaGetDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DaxiguaGetDataResponseDefaultTypeInternal _DaxiguaGetDataResponse_default_instance_;
constexpr DaxiguaStartRequest::DaxiguaStartRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct DaxiguaStartRequestDefaultTypeInternal {
  constexpr DaxiguaStartRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DaxiguaStartRequestDefaultTypeInternal() {}
  union {
    DaxiguaStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DaxiguaStartRequestDefaultTypeInternal _DaxiguaStartRequest_default_instance_;
constexpr DaxiguaStartResponse::DaxiguaStartResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct DaxiguaStartResponseDefaultTypeInternal {
  constexpr DaxiguaStartResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DaxiguaStartResponseDefaultTypeInternal() {}
  union {
    DaxiguaStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DaxiguaStartResponseDefaultTypeInternal _DaxiguaStartResponse_default_instance_;
constexpr DaxiguaResultRequest::DaxiguaResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : score_(int64_t{0})
  , medal_(int64_t{0}){}
struct DaxiguaResultRequestDefaultTypeInternal {
  constexpr DaxiguaResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DaxiguaResultRequestDefaultTypeInternal() {}
  union {
    DaxiguaResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DaxiguaResultRequestDefaultTypeInternal _DaxiguaResultRequest_default_instance_;
constexpr DaxiguaResultResponse::DaxiguaResultResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct DaxiguaResultResponseDefaultTypeInternal {
  constexpr DaxiguaResultResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DaxiguaResultResponseDefaultTypeInternal() {}
  union {
    DaxiguaResultResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DaxiguaResultResponseDefaultTypeInternal _DaxiguaResultResponse_default_instance_;
constexpr BpbxqGetDataRequest::BpbxqGetDataRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct BpbxqGetDataRequestDefaultTypeInternal {
  constexpr BpbxqGetDataRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqGetDataRequestDefaultTypeInternal() {}
  union {
    BpbxqGetDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqGetDataRequestDefaultTypeInternal _BpbxqGetDataRequest_default_instance_;
constexpr BpbxqGetDataResponse::BpbxqGetDataResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : skinarr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , userid_(int64_t{0})
  , code_(0)
  , skin_(0)
  , lastsigntime_(int64_t{0})
  , signtimes_(int64_t{0})
  , signtimenow_(int64_t{0})
  , gameid_(0){}
struct BpbxqGetDataResponseDefaultTypeInternal {
  constexpr BpbxqGetDataResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqGetDataResponseDefaultTypeInternal() {}
  union {
    BpbxqGetDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqGetDataResponseDefaultTypeInternal _BpbxqGetDataResponse_default_instance_;
constexpr BpbxqDaySignRequest::BpbxqDaySignRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct BpbxqDaySignRequestDefaultTypeInternal {
  constexpr BpbxqDaySignRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqDaySignRequestDefaultTypeInternal() {}
  union {
    BpbxqDaySignRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqDaySignRequestDefaultTypeInternal _BpbxqDaySignRequest_default_instance_;
constexpr BpbxqDaySignResponse::BpbxqDaySignResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , lastsigntime_(int64_t{0})
  , signtimes_(int64_t{0})
  , signtimenow_(int64_t{0})
  , code_(0){}
struct BpbxqDaySignResponseDefaultTypeInternal {
  constexpr BpbxqDaySignResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqDaySignResponseDefaultTypeInternal() {}
  union {
    BpbxqDaySignResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqDaySignResponseDefaultTypeInternal _BpbxqDaySignResponse_default_instance_;
constexpr BpbxqBuySkinRequest::BpbxqBuySkinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : skinid_(0){}
struct BpbxqBuySkinRequestDefaultTypeInternal {
  constexpr BpbxqBuySkinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqBuySkinRequestDefaultTypeInternal() {}
  union {
    BpbxqBuySkinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqBuySkinRequestDefaultTypeInternal _BpbxqBuySkinRequest_default_instance_;
constexpr BpbxqBuySkinResponse::BpbxqBuySkinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , skinid_(0)
  , coin_(int64_t{0}){}
struct BpbxqBuySkinResponseDefaultTypeInternal {
  constexpr BpbxqBuySkinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqBuySkinResponseDefaultTypeInternal() {}
  union {
    BpbxqBuySkinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqBuySkinResponseDefaultTypeInternal _BpbxqBuySkinResponse_default_instance_;
constexpr BpbxqUseSkinRequest::BpbxqUseSkinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : skinid_(0){}
struct BpbxqUseSkinRequestDefaultTypeInternal {
  constexpr BpbxqUseSkinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqUseSkinRequestDefaultTypeInternal() {}
  union {
    BpbxqUseSkinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqUseSkinRequestDefaultTypeInternal _BpbxqUseSkinRequest_default_instance_;
constexpr BpbxqUseSkinResponse::BpbxqUseSkinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , skinid_(0){}
struct BpbxqUseSkinResponseDefaultTypeInternal {
  constexpr BpbxqUseSkinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqUseSkinResponseDefaultTypeInternal() {}
  union {
    BpbxqUseSkinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqUseSkinResponseDefaultTypeInternal _BpbxqUseSkinResponse_default_instance_;
constexpr BpbxqPickCoinRequest::BpbxqPickCoinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0}){}
struct BpbxqPickCoinRequestDefaultTypeInternal {
  constexpr BpbxqPickCoinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqPickCoinRequestDefaultTypeInternal() {}
  union {
    BpbxqPickCoinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqPickCoinRequestDefaultTypeInternal _BpbxqPickCoinRequest_default_instance_;
constexpr BpbxqPickCoinResponse::BpbxqPickCoinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , code_(0){}
struct BpbxqPickCoinResponseDefaultTypeInternal {
  constexpr BpbxqPickCoinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqPickCoinResponseDefaultTypeInternal() {}
  union {
    BpbxqPickCoinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqPickCoinResponseDefaultTypeInternal _BpbxqPickCoinResponse_default_instance_;
constexpr BpbxqReviveRequest::BpbxqReviveRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct BpbxqReviveRequestDefaultTypeInternal {
  constexpr BpbxqReviveRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqReviveRequestDefaultTypeInternal() {}
  union {
    BpbxqReviveRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqReviveRequestDefaultTypeInternal _BpbxqReviveRequest_default_instance_;
constexpr BpbxqReviveResponse::BpbxqReviveResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , code_(0){}
struct BpbxqReviveResponseDefaultTypeInternal {
  constexpr BpbxqReviveResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqReviveResponseDefaultTypeInternal() {}
  union {
    BpbxqReviveResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqReviveResponseDefaultTypeInternal _BpbxqReviveResponse_default_instance_;
constexpr BpbxqDieflyRequest::BpbxqDieflyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct BpbxqDieflyRequestDefaultTypeInternal {
  constexpr BpbxqDieflyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqDieflyRequestDefaultTypeInternal() {}
  union {
    BpbxqDieflyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqDieflyRequestDefaultTypeInternal _BpbxqDieflyRequest_default_instance_;
constexpr BpbxqDieflyResponse::BpbxqDieflyResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , code_(0){}
struct BpbxqDieflyResponseDefaultTypeInternal {
  constexpr BpbxqDieflyResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqDieflyResponseDefaultTypeInternal() {}
  union {
    BpbxqDieflyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqDieflyResponseDefaultTypeInternal _BpbxqDieflyResponse_default_instance_;
constexpr BpbxqRewardRequest::BpbxqRewardRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct BpbxqRewardRequestDefaultTypeInternal {
  constexpr BpbxqRewardRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqRewardRequestDefaultTypeInternal() {}
  union {
    BpbxqRewardRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqRewardRequestDefaultTypeInternal _BpbxqRewardRequest_default_instance_;
constexpr BpbxqRewardResponse::BpbxqRewardResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , code_(0){}
struct BpbxqRewardResponseDefaultTypeInternal {
  constexpr BpbxqRewardResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqRewardResponseDefaultTypeInternal() {}
  union {
    BpbxqRewardResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqRewardResponseDefaultTypeInternal _BpbxqRewardResponse_default_instance_;
constexpr BpbxqStartRequest::BpbxqStartRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct BpbxqStartRequestDefaultTypeInternal {
  constexpr BpbxqStartRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqStartRequestDefaultTypeInternal() {}
  union {
    BpbxqStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqStartRequestDefaultTypeInternal _BpbxqStartRequest_default_instance_;
constexpr BpbxqStartResponse::BpbxqStartResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct BpbxqStartResponseDefaultTypeInternal {
  constexpr BpbxqStartResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqStartResponseDefaultTypeInternal() {}
  union {
    BpbxqStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqStartResponseDefaultTypeInternal _BpbxqStartResponse_default_instance_;
constexpr BpbxqResultRequest::BpbxqResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : score_(int64_t{0}){}
struct BpbxqResultRequestDefaultTypeInternal {
  constexpr BpbxqResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqResultRequestDefaultTypeInternal() {}
  union {
    BpbxqResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqResultRequestDefaultTypeInternal _BpbxqResultRequest_default_instance_;
constexpr BpbxqResultResponse::BpbxqResultResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct BpbxqResultResponseDefaultTypeInternal {
  constexpr BpbxqResultResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BpbxqResultResponseDefaultTypeInternal() {}
  union {
    BpbxqResultResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BpbxqResultResponseDefaultTypeInternal _BpbxqResultResponse_default_instance_;
constexpr CaichengyuGetDataRequest::CaichengyuGetDataRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CaichengyuGetDataRequestDefaultTypeInternal {
  constexpr CaichengyuGetDataRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuGetDataRequestDefaultTypeInternal() {}
  union {
    CaichengyuGetDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuGetDataRequestDefaultTypeInternal _CaichengyuGetDataRequest_default_instance_;
constexpr CaichengyuGetDataResponse::CaichengyuGetDataResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : gethpday_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , userid_(int64_t{0})
  , code_(0)
  , rolelevel_(0)
  , level_(int64_t{0})
  , buildlevel_(0)
  , leveltype_(0)
  , leveltip_(0)
  , hp_(0)
  , hpdate_(int64_t{0})
  , gethpcount_(0)
  , gameid_(0){}
struct CaichengyuGetDataResponseDefaultTypeInternal {
  constexpr CaichengyuGetDataResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuGetDataResponseDefaultTypeInternal() {}
  union {
    CaichengyuGetDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuGetDataResponseDefaultTypeInternal _CaichengyuGetDataResponse_default_instance_;
constexpr CaichengyuStartRequest::CaichengyuStartRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CaichengyuStartRequestDefaultTypeInternal {
  constexpr CaichengyuStartRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuStartRequestDefaultTypeInternal() {}
  union {
    CaichengyuStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuStartRequestDefaultTypeInternal _CaichengyuStartRequest_default_instance_;
constexpr CaichengyuStartResponse::CaichengyuStartResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : user_(nullptr)
  , code_(0)
  , hp_(0)
  , leveltip_(0){}
struct CaichengyuStartResponseDefaultTypeInternal {
  constexpr CaichengyuStartResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuStartResponseDefaultTypeInternal() {}
  union {
    CaichengyuStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuStartResponseDefaultTypeInternal _CaichengyuStartResponse_default_instance_;
constexpr CaichengyuResultRequest::CaichengyuResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : answer_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CaichengyuResultRequestDefaultTypeInternal {
  constexpr CaichengyuResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuResultRequestDefaultTypeInternal() {}
  union {
    CaichengyuResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuResultRequestDefaultTypeInternal _CaichengyuResultRequest_default_instance_;
constexpr CaichengyuResultResponse::CaichengyuResultResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct CaichengyuResultResponseDefaultTypeInternal {
  constexpr CaichengyuResultResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuResultResponseDefaultTypeInternal() {}
  union {
    CaichengyuResultResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuResultResponseDefaultTypeInternal _CaichengyuResultResponse_default_instance_;
constexpr CaichengyuResetHpRequest::CaichengyuResetHpRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CaichengyuResetHpRequestDefaultTypeInternal {
  constexpr CaichengyuResetHpRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuResetHpRequestDefaultTypeInternal() {}
  union {
    CaichengyuResetHpRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuResetHpRequestDefaultTypeInternal _CaichengyuResetHpRequest_default_instance_;
constexpr CaichengyuResetHpResponse::CaichengyuResetHpResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , hp_(0)
  , hpdate_(int64_t{0}){}
struct CaichengyuResetHpResponseDefaultTypeInternal {
  constexpr CaichengyuResetHpResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuResetHpResponseDefaultTypeInternal() {}
  union {
    CaichengyuResetHpResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuResetHpResponseDefaultTypeInternal _CaichengyuResetHpResponse_default_instance_;
constexpr CaichengyuUpgradeRoleRequest::CaichengyuUpgradeRoleRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CaichengyuUpgradeRoleRequestDefaultTypeInternal {
  constexpr CaichengyuUpgradeRoleRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuUpgradeRoleRequestDefaultTypeInternal() {}
  union {
    CaichengyuUpgradeRoleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuUpgradeRoleRequestDefaultTypeInternal _CaichengyuUpgradeRoleRequest_default_instance_;
constexpr CaichengyuUpgradeRoleResponse::CaichengyuUpgradeRoleResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , rolelevel_(0){}
struct CaichengyuUpgradeRoleResponseDefaultTypeInternal {
  constexpr CaichengyuUpgradeRoleResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuUpgradeRoleResponseDefaultTypeInternal() {}
  union {
    CaichengyuUpgradeRoleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuUpgradeRoleResponseDefaultTypeInternal _CaichengyuUpgradeRoleResponse_default_instance_;
constexpr CaichengyuUpgradeBuildRequest::CaichengyuUpgradeBuildRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CaichengyuUpgradeBuildRequestDefaultTypeInternal {
  constexpr CaichengyuUpgradeBuildRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuUpgradeBuildRequestDefaultTypeInternal() {}
  union {
    CaichengyuUpgradeBuildRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuUpgradeBuildRequestDefaultTypeInternal _CaichengyuUpgradeBuildRequest_default_instance_;
constexpr CaichengyuUpgradeBuildResponse::CaichengyuUpgradeBuildResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , buildlevel_(0){}
struct CaichengyuUpgradeBuildResponseDefaultTypeInternal {
  constexpr CaichengyuUpgradeBuildResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuUpgradeBuildResponseDefaultTypeInternal() {}
  union {
    CaichengyuUpgradeBuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuUpgradeBuildResponseDefaultTypeInternal _CaichengyuUpgradeBuildResponse_default_instance_;
constexpr CaichengyuGetHpRequest::CaichengyuGetHpRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CaichengyuGetHpRequestDefaultTypeInternal {
  constexpr CaichengyuGetHpRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuGetHpRequestDefaultTypeInternal() {}
  union {
    CaichengyuGetHpRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuGetHpRequestDefaultTypeInternal _CaichengyuGetHpRequest_default_instance_;
constexpr CaichengyuGetHpResponse::CaichengyuGetHpResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , hp_(0){}
struct CaichengyuGetHpResponseDefaultTypeInternal {
  constexpr CaichengyuGetHpResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuGetHpResponseDefaultTypeInternal() {}
  union {
    CaichengyuGetHpResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuGetHpResponseDefaultTypeInternal _CaichengyuGetHpResponse_default_instance_;
constexpr CaichengyuTipRequest::CaichengyuTipRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CaichengyuTipRequestDefaultTypeInternal {
  constexpr CaichengyuTipRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuTipRequestDefaultTypeInternal() {}
  union {
    CaichengyuTipRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuTipRequestDefaultTypeInternal _CaichengyuTipRequest_default_instance_;
constexpr CaichengyuTipResponse::CaichengyuTipResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , leveltip_(0)
  , hp_(0){}
struct CaichengyuTipResponseDefaultTypeInternal {
  constexpr CaichengyuTipResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuTipResponseDefaultTypeInternal() {}
  union {
    CaichengyuTipResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuTipResponseDefaultTypeInternal _CaichengyuTipResponse_default_instance_;
constexpr CaichengyuGetTipRequest::CaichengyuGetTipRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CaichengyuGetTipRequestDefaultTypeInternal {
  constexpr CaichengyuGetTipRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuGetTipRequestDefaultTypeInternal() {}
  union {
    CaichengyuGetTipRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuGetTipRequestDefaultTypeInternal _CaichengyuGetTipRequest_default_instance_;
constexpr CaichengyuGetTipResponse::CaichengyuGetTipResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , hp_(0){}
struct CaichengyuGetTipResponseDefaultTypeInternal {
  constexpr CaichengyuGetTipResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CaichengyuGetTipResponseDefaultTypeInternal() {}
  union {
    CaichengyuGetTipResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CaichengyuGetTipResponseDefaultTypeInternal _CaichengyuGetTipResponse_default_instance_;
constexpr FangkuainiaoGetDataRequest::FangkuainiaoGetDataRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct FangkuainiaoGetDataRequestDefaultTypeInternal {
  constexpr FangkuainiaoGetDataRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoGetDataRequestDefaultTypeInternal() {}
  union {
    FangkuainiaoGetDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoGetDataRequestDefaultTypeInternal _FangkuainiaoGetDataRequest_default_instance_;
constexpr FangkuainiaoGetDataResponse::FangkuainiaoGetDataResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : birdarr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , userid_(int64_t{0})
  , code_(0)
  , birdid_(0)
  , signtime_(int64_t{0})
  , signday_(int64_t{0})
  , getgoldtime_(int64_t{0})
  , getgoldcount_(0)
  , gameid_(0)
  , level_(int64_t{0}){}
struct FangkuainiaoGetDataResponseDefaultTypeInternal {
  constexpr FangkuainiaoGetDataResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoGetDataResponseDefaultTypeInternal() {}
  union {
    FangkuainiaoGetDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoGetDataResponseDefaultTypeInternal _FangkuainiaoGetDataResponse_default_instance_;
constexpr FangkuainiaoBuySkinRequest::FangkuainiaoBuySkinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : birdid_(0){}
struct FangkuainiaoBuySkinRequestDefaultTypeInternal {
  constexpr FangkuainiaoBuySkinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoBuySkinRequestDefaultTypeInternal() {}
  union {
    FangkuainiaoBuySkinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoBuySkinRequestDefaultTypeInternal _FangkuainiaoBuySkinRequest_default_instance_;
constexpr FangkuainiaoBuySkinResponse::FangkuainiaoBuySkinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , birdid_(0)
  , coin_(int64_t{0}){}
struct FangkuainiaoBuySkinResponseDefaultTypeInternal {
  constexpr FangkuainiaoBuySkinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoBuySkinResponseDefaultTypeInternal() {}
  union {
    FangkuainiaoBuySkinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoBuySkinResponseDefaultTypeInternal _FangkuainiaoBuySkinResponse_default_instance_;
constexpr FangkuainiaoUseSkinRequest::FangkuainiaoUseSkinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : birdid_(0){}
struct FangkuainiaoUseSkinRequestDefaultTypeInternal {
  constexpr FangkuainiaoUseSkinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoUseSkinRequestDefaultTypeInternal() {}
  union {
    FangkuainiaoUseSkinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoUseSkinRequestDefaultTypeInternal _FangkuainiaoUseSkinRequest_default_instance_;
constexpr FangkuainiaoUseSkinResponse::FangkuainiaoUseSkinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , birdid_(0){}
struct FangkuainiaoUseSkinResponseDefaultTypeInternal {
  constexpr FangkuainiaoUseSkinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoUseSkinResponseDefaultTypeInternal() {}
  union {
    FangkuainiaoUseSkinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoUseSkinResponseDefaultTypeInternal _FangkuainiaoUseSkinResponse_default_instance_;
constexpr FangkuainiaoDaySignRequest::FangkuainiaoDaySignRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct FangkuainiaoDaySignRequestDefaultTypeInternal {
  constexpr FangkuainiaoDaySignRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoDaySignRequestDefaultTypeInternal() {}
  union {
    FangkuainiaoDaySignRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoDaySignRequestDefaultTypeInternal _FangkuainiaoDaySignRequest_default_instance_;
constexpr FangkuainiaoDaySignResponse::FangkuainiaoDaySignResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , signtime_(int64_t{0})
  , code_(0){}
struct FangkuainiaoDaySignResponseDefaultTypeInternal {
  constexpr FangkuainiaoDaySignResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoDaySignResponseDefaultTypeInternal() {}
  union {
    FangkuainiaoDaySignResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoDaySignResponseDefaultTypeInternal _FangkuainiaoDaySignResponse_default_instance_;
constexpr FangkuainiaoGetCoinRequest::FangkuainiaoGetCoinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct FangkuainiaoGetCoinRequestDefaultTypeInternal {
  constexpr FangkuainiaoGetCoinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoGetCoinRequestDefaultTypeInternal() {}
  union {
    FangkuainiaoGetCoinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoGetCoinRequestDefaultTypeInternal _FangkuainiaoGetCoinRequest_default_instance_;
constexpr FangkuainiaoGetCoinResponse::FangkuainiaoGetCoinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , code_(0){}
struct FangkuainiaoGetCoinResponseDefaultTypeInternal {
  constexpr FangkuainiaoGetCoinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoGetCoinResponseDefaultTypeInternal() {}
  union {
    FangkuainiaoGetCoinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoGetCoinResponseDefaultTypeInternal _FangkuainiaoGetCoinResponse_default_instance_;
constexpr FangkuainiaoGetInvincibleCoinRequest::FangkuainiaoGetInvincibleCoinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0}){}
struct FangkuainiaoGetInvincibleCoinRequestDefaultTypeInternal {
  constexpr FangkuainiaoGetInvincibleCoinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoGetInvincibleCoinRequestDefaultTypeInternal() {}
  union {
    FangkuainiaoGetInvincibleCoinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoGetInvincibleCoinRequestDefaultTypeInternal _FangkuainiaoGetInvincibleCoinRequest_default_instance_;
constexpr FangkuainiaoGetInvincibleCoinResponse::FangkuainiaoGetInvincibleCoinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , code_(0){}
struct FangkuainiaoGetInvincibleCoinResponseDefaultTypeInternal {
  constexpr FangkuainiaoGetInvincibleCoinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoGetInvincibleCoinResponseDefaultTypeInternal() {}
  union {
    FangkuainiaoGetInvincibleCoinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoGetInvincibleCoinResponseDefaultTypeInternal _FangkuainiaoGetInvincibleCoinResponse_default_instance_;
constexpr FangkuainiaoGetLevelCoinRequest::FangkuainiaoGetLevelCoinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0}){}
struct FangkuainiaoGetLevelCoinRequestDefaultTypeInternal {
  constexpr FangkuainiaoGetLevelCoinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoGetLevelCoinRequestDefaultTypeInternal() {}
  union {
    FangkuainiaoGetLevelCoinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoGetLevelCoinRequestDefaultTypeInternal _FangkuainiaoGetLevelCoinRequest_default_instance_;
constexpr FangkuainiaoGetLevelCoinResponse::FangkuainiaoGetLevelCoinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , code_(0){}
struct FangkuainiaoGetLevelCoinResponseDefaultTypeInternal {
  constexpr FangkuainiaoGetLevelCoinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoGetLevelCoinResponseDefaultTypeInternal() {}
  union {
    FangkuainiaoGetLevelCoinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoGetLevelCoinResponseDefaultTypeInternal _FangkuainiaoGetLevelCoinResponse_default_instance_;
constexpr FangkuainiaoStartRequest::FangkuainiaoStartRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct FangkuainiaoStartRequestDefaultTypeInternal {
  constexpr FangkuainiaoStartRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoStartRequestDefaultTypeInternal() {}
  union {
    FangkuainiaoStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoStartRequestDefaultTypeInternal _FangkuainiaoStartRequest_default_instance_;
constexpr FangkuainiaoStartResponse::FangkuainiaoStartResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct FangkuainiaoStartResponseDefaultTypeInternal {
  constexpr FangkuainiaoStartResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoStartResponseDefaultTypeInternal() {}
  union {
    FangkuainiaoStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoStartResponseDefaultTypeInternal _FangkuainiaoStartResponse_default_instance_;
constexpr FangkuainiaoResultRequest::FangkuainiaoResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0){}
struct FangkuainiaoResultRequestDefaultTypeInternal {
  constexpr FangkuainiaoResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoResultRequestDefaultTypeInternal() {}
  union {
    FangkuainiaoResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoResultRequestDefaultTypeInternal _FangkuainiaoResultRequest_default_instance_;
constexpr FangkuainiaoResultResponse::FangkuainiaoResultResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct FangkuainiaoResultResponseDefaultTypeInternal {
  constexpr FangkuainiaoResultResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FangkuainiaoResultResponseDefaultTypeInternal() {}
  union {
    FangkuainiaoResultResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FangkuainiaoResultResponseDefaultTypeInternal _FangkuainiaoResultResponse_default_instance_;
constexpr GongjianchuanshuGetDataRequest::GongjianchuanshuGetDataRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GongjianchuanshuGetDataRequestDefaultTypeInternal {
  constexpr GongjianchuanshuGetDataRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuGetDataRequestDefaultTypeInternal() {}
  union {
    GongjianchuanshuGetDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuGetDataRequestDefaultTypeInternal _GongjianchuanshuGetDataRequest_default_instance_;
constexpr GongjianchuanshuGetDataResponse::GongjianchuanshuGetDataResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : skinarr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , shoparr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , userid_(int64_t{0})
  , code_(0)
  , skinid_(0)
  , gameid_(0)
  , level_(int64_t{0}){}
struct GongjianchuanshuGetDataResponseDefaultTypeInternal {
  constexpr GongjianchuanshuGetDataResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuGetDataResponseDefaultTypeInternal() {}
  union {
    GongjianchuanshuGetDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuGetDataResponseDefaultTypeInternal _GongjianchuanshuGetDataResponse_default_instance_;
constexpr GongjianchuanshuAwardCoinRequest::GongjianchuanshuAwardCoinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0}){}
struct GongjianchuanshuAwardCoinRequestDefaultTypeInternal {
  constexpr GongjianchuanshuAwardCoinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuAwardCoinRequestDefaultTypeInternal() {}
  union {
    GongjianchuanshuAwardCoinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuAwardCoinRequestDefaultTypeInternal _GongjianchuanshuAwardCoinRequest_default_instance_;
constexpr GongjianchuanshuAwardCoinResponse::GongjianchuanshuAwardCoinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , code_(0){}
struct GongjianchuanshuAwardCoinResponseDefaultTypeInternal {
  constexpr GongjianchuanshuAwardCoinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuAwardCoinResponseDefaultTypeInternal() {}
  union {
    GongjianchuanshuAwardCoinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuAwardCoinResponseDefaultTypeInternal _GongjianchuanshuAwardCoinResponse_default_instance_;
constexpr GongjianchuanshuUnlockSkinRequest::GongjianchuanshuUnlockSkinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : shopindex_(0){}
struct GongjianchuanshuUnlockSkinRequestDefaultTypeInternal {
  constexpr GongjianchuanshuUnlockSkinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuUnlockSkinRequestDefaultTypeInternal() {}
  union {
    GongjianchuanshuUnlockSkinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuUnlockSkinRequestDefaultTypeInternal _GongjianchuanshuUnlockSkinRequest_default_instance_;
constexpr GongjianchuanshuUnlockSkinResponse::GongjianchuanshuUnlockSkinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , code_(0){}
struct GongjianchuanshuUnlockSkinResponseDefaultTypeInternal {
  constexpr GongjianchuanshuUnlockSkinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuUnlockSkinResponseDefaultTypeInternal() {}
  union {
    GongjianchuanshuUnlockSkinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuUnlockSkinResponseDefaultTypeInternal _GongjianchuanshuUnlockSkinResponse_default_instance_;
constexpr GongjianchuanshuUseSkinRequest::GongjianchuanshuUseSkinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : shopindex_(0){}
struct GongjianchuanshuUseSkinRequestDefaultTypeInternal {
  constexpr GongjianchuanshuUseSkinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuUseSkinRequestDefaultTypeInternal() {}
  union {
    GongjianchuanshuUseSkinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuUseSkinRequestDefaultTypeInternal _GongjianchuanshuUseSkinRequest_default_instance_;
constexpr GongjianchuanshuUseSkinResponse::GongjianchuanshuUseSkinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct GongjianchuanshuUseSkinResponseDefaultTypeInternal {
  constexpr GongjianchuanshuUseSkinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuUseSkinResponseDefaultTypeInternal() {}
  union {
    GongjianchuanshuUseSkinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuUseSkinResponseDefaultTypeInternal _GongjianchuanshuUseSkinResponse_default_instance_;
constexpr GongjianchuanshuStartRequest::GongjianchuanshuStartRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GongjianchuanshuStartRequestDefaultTypeInternal {
  constexpr GongjianchuanshuStartRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuStartRequestDefaultTypeInternal() {}
  union {
    GongjianchuanshuStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuStartRequestDefaultTypeInternal _GongjianchuanshuStartRequest_default_instance_;
constexpr GongjianchuanshuStartResponse::GongjianchuanshuStartResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct GongjianchuanshuStartResponseDefaultTypeInternal {
  constexpr GongjianchuanshuStartResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuStartResponseDefaultTypeInternal() {}
  union {
    GongjianchuanshuStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuStartResponseDefaultTypeInternal _GongjianchuanshuStartResponse_default_instance_;
constexpr GongjianchuanshuResultRequest::GongjianchuanshuResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : score_(int64_t{0}){}
struct GongjianchuanshuResultRequestDefaultTypeInternal {
  constexpr GongjianchuanshuResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuResultRequestDefaultTypeInternal() {}
  union {
    GongjianchuanshuResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuResultRequestDefaultTypeInternal _GongjianchuanshuResultRequest_default_instance_;
constexpr GongjianchuanshuResultResponse::GongjianchuanshuResultResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct GongjianchuanshuResultResponseDefaultTypeInternal {
  constexpr GongjianchuanshuResultResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuResultResponseDefaultTypeInternal() {}
  union {
    GongjianchuanshuResultResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuResultResponseDefaultTypeInternal _GongjianchuanshuResultResponse_default_instance_;
constexpr GongjianchuanshuLevelStartRequest::GongjianchuanshuLevelStartRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GongjianchuanshuLevelStartRequestDefaultTypeInternal {
  constexpr GongjianchuanshuLevelStartRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuLevelStartRequestDefaultTypeInternal() {}
  union {
    GongjianchuanshuLevelStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuLevelStartRequestDefaultTypeInternal _GongjianchuanshuLevelStartRequest_default_instance_;
constexpr GongjianchuanshuLevelStartResponse::GongjianchuanshuLevelStartResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct GongjianchuanshuLevelStartResponseDefaultTypeInternal {
  constexpr GongjianchuanshuLevelStartResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuLevelStartResponseDefaultTypeInternal() {}
  union {
    GongjianchuanshuLevelStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuLevelStartResponseDefaultTypeInternal _GongjianchuanshuLevelStartResponse_default_instance_;
constexpr GongjianchuanshuLevelResultRequest::GongjianchuanshuLevelResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : score_(int64_t{0}){}
struct GongjianchuanshuLevelResultRequestDefaultTypeInternal {
  constexpr GongjianchuanshuLevelResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuLevelResultRequestDefaultTypeInternal() {}
  union {
    GongjianchuanshuLevelResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuLevelResultRequestDefaultTypeInternal _GongjianchuanshuLevelResultRequest_default_instance_;
constexpr GongjianchuanshuLevelResultResponse::GongjianchuanshuLevelResultResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct GongjianchuanshuLevelResultResponseDefaultTypeInternal {
  constexpr GongjianchuanshuLevelResultResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuLevelResultResponseDefaultTypeInternal() {}
  union {
    GongjianchuanshuLevelResultResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuLevelResultResponseDefaultTypeInternal _GongjianchuanshuLevelResultResponse_default_instance_;
constexpr GongjianchuanshuLevelPassRequest::GongjianchuanshuLevelPassRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : level_(int64_t{0}){}
struct GongjianchuanshuLevelPassRequestDefaultTypeInternal {
  constexpr GongjianchuanshuLevelPassRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuLevelPassRequestDefaultTypeInternal() {}
  union {
    GongjianchuanshuLevelPassRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuLevelPassRequestDefaultTypeInternal _GongjianchuanshuLevelPassRequest_default_instance_;
constexpr GongjianchuanshuLevelPassResponse::GongjianchuanshuLevelPassResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct GongjianchuanshuLevelPassResponseDefaultTypeInternal {
  constexpr GongjianchuanshuLevelPassResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GongjianchuanshuLevelPassResponseDefaultTypeInternal() {}
  union {
    GongjianchuanshuLevelPassResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GongjianchuanshuLevelPassResponseDefaultTypeInternal _GongjianchuanshuLevelPassResponse_default_instance_;
constexpr PaopaolongGetDataRequest::PaopaolongGetDataRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct PaopaolongGetDataRequestDefaultTypeInternal {
  constexpr PaopaolongGetDataRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongGetDataRequestDefaultTypeInternal() {}
  union {
    PaopaolongGetDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongGetDataRequestDefaultTypeInternal _PaopaolongGetDataRequest_default_instance_;
constexpr PaopaolongLevel::PaopaolongLevel(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : level_(int64_t{0})
  , sec_(int64_t{0})
  , score_(int64_t{0})
  , lose_(0){}
struct PaopaolongLevelDefaultTypeInternal {
  constexpr PaopaolongLevelDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongLevelDefaultTypeInternal() {}
  union {
    PaopaolongLevel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongLevelDefaultTypeInternal _PaopaolongLevel_default_instance_;
constexpr PaopaolongGetDataResponse::PaopaolongGetDataResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : levelarr_()
  , itemarr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , userid_(int64_t{0})
  , level_(int64_t{0})
  , code_(0)
  , hp_(0)
  , freedrawtime_(int64_t{0})
  , shopfreediamondtime_(int64_t{0})
  , shopfreediamondtime2_(int64_t{0})
  , newpackredeemed_(0)
  , signedtime_(0)
  , lastsigntime_(int64_t{0})
  , firstsigntime_(int64_t{0})
  , gameid_(0){}
struct PaopaolongGetDataResponseDefaultTypeInternal {
  constexpr PaopaolongGetDataResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongGetDataResponseDefaultTypeInternal() {}
  union {
    PaopaolongGetDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongGetDataResponseDefaultTypeInternal _PaopaolongGetDataResponse_default_instance_;
constexpr PaopaolongUseItemRequest::PaopaolongUseItemRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : itemid_(0){}
struct PaopaolongUseItemRequestDefaultTypeInternal {
  constexpr PaopaolongUseItemRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongUseItemRequestDefaultTypeInternal() {}
  union {
    PaopaolongUseItemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongUseItemRequestDefaultTypeInternal _PaopaolongUseItemRequest_default_instance_;
constexpr PaopaolongUseItemResponse::PaopaolongUseItemResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , itemid_(0){}
struct PaopaolongUseItemResponseDefaultTypeInternal {
  constexpr PaopaolongUseItemResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongUseItemResponseDefaultTypeInternal() {}
  union {
    PaopaolongUseItemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongUseItemResponseDefaultTypeInternal _PaopaolongUseItemResponse_default_instance_;
constexpr PaopaolongStartRequest::PaopaolongStartRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : level_(int64_t{0}){}
struct PaopaolongStartRequestDefaultTypeInternal {
  constexpr PaopaolongStartRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongStartRequestDefaultTypeInternal() {}
  union {
    PaopaolongStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongStartRequestDefaultTypeInternal _PaopaolongStartRequest_default_instance_;
constexpr PaopaolongStartResponse::PaopaolongStartResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : level_(int64_t{0})
  , code_(0){}
struct PaopaolongStartResponseDefaultTypeInternal {
  constexpr PaopaolongStartResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongStartResponseDefaultTypeInternal() {}
  union {
    PaopaolongStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongStartResponseDefaultTypeInternal _PaopaolongStartResponse_default_instance_;
constexpr PaopaolongResultRequest::PaopaolongResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : level_(int64_t{0})
  , score_(int64_t{0})
  , sec_(int64_t{0})
  , star_(int64_t{0})
  , result_(0){}
struct PaopaolongResultRequestDefaultTypeInternal {
  constexpr PaopaolongResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongResultRequestDefaultTypeInternal() {}
  union {
    PaopaolongResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongResultRequestDefaultTypeInternal _PaopaolongResultRequest_default_instance_;
constexpr PaopaolongResultResponse::PaopaolongResultResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : level_(int64_t{0})
  , code_(0){}
struct PaopaolongResultResponseDefaultTypeInternal {
  constexpr PaopaolongResultResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongResultResponseDefaultTypeInternal() {}
  union {
    PaopaolongResultResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongResultResponseDefaultTypeInternal _PaopaolongResultResponse_default_instance_;
constexpr PaopaolongFreeDrawRequest::PaopaolongFreeDrawRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct PaopaolongFreeDrawRequestDefaultTypeInternal {
  constexpr PaopaolongFreeDrawRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongFreeDrawRequestDefaultTypeInternal() {}
  union {
    PaopaolongFreeDrawRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongFreeDrawRequestDefaultTypeInternal _PaopaolongFreeDrawRequest_default_instance_;
constexpr PaopaolongFreeDrawResponse::PaopaolongFreeDrawResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , luckyid_(0)
  , freedrawtime_(int64_t{0}){}
struct PaopaolongFreeDrawResponseDefaultTypeInternal {
  constexpr PaopaolongFreeDrawResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongFreeDrawResponseDefaultTypeInternal() {}
  union {
    PaopaolongFreeDrawResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongFreeDrawResponseDefaultTypeInternal _PaopaolongFreeDrawResponse_default_instance_;
constexpr PaopaolongCostDrawRequest::PaopaolongCostDrawRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct PaopaolongCostDrawRequestDefaultTypeInternal {
  constexpr PaopaolongCostDrawRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongCostDrawRequestDefaultTypeInternal() {}
  union {
    PaopaolongCostDrawRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongCostDrawRequestDefaultTypeInternal _PaopaolongCostDrawRequest_default_instance_;
constexpr PaopaolongCostDrawResponse::PaopaolongCostDrawResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , luckyid_(0)
  , coin_(int64_t{0}){}
struct PaopaolongCostDrawResponseDefaultTypeInternal {
  constexpr PaopaolongCostDrawResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongCostDrawResponseDefaultTypeInternal() {}
  union {
    PaopaolongCostDrawResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongCostDrawResponseDefaultTypeInternal _PaopaolongCostDrawResponse_default_instance_;
constexpr PaopaolongSignRequest::PaopaolongSignRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct PaopaolongSignRequestDefaultTypeInternal {
  constexpr PaopaolongSignRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongSignRequestDefaultTypeInternal() {}
  union {
    PaopaolongSignRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongSignRequestDefaultTypeInternal _PaopaolongSignRequest_default_instance_;
constexpr PaopaolongSignResponse::PaopaolongSignResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct PaopaolongSignResponseDefaultTypeInternal {
  constexpr PaopaolongSignResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongSignResponseDefaultTypeInternal() {}
  union {
    PaopaolongSignResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongSignResponseDefaultTypeInternal _PaopaolongSignResponse_default_instance_;
constexpr PaopaolongShopFreeCoinRequest::PaopaolongShopFreeCoinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct PaopaolongShopFreeCoinRequestDefaultTypeInternal {
  constexpr PaopaolongShopFreeCoinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongShopFreeCoinRequestDefaultTypeInternal() {}
  union {
    PaopaolongShopFreeCoinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongShopFreeCoinRequestDefaultTypeInternal _PaopaolongShopFreeCoinRequest_default_instance_;
constexpr PaopaolongShopFreeCoinResponse::PaopaolongShopFreeCoinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , code_(0){}
struct PaopaolongShopFreeCoinResponseDefaultTypeInternal {
  constexpr PaopaolongShopFreeCoinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongShopFreeCoinResponseDefaultTypeInternal() {}
  union {
    PaopaolongShopFreeCoinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongShopFreeCoinResponseDefaultTypeInternal _PaopaolongShopFreeCoinResponse_default_instance_;
constexpr PaopaolongShopFreeCoin2Request::PaopaolongShopFreeCoin2Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct PaopaolongShopFreeCoin2RequestDefaultTypeInternal {
  constexpr PaopaolongShopFreeCoin2RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongShopFreeCoin2RequestDefaultTypeInternal() {}
  union {
    PaopaolongShopFreeCoin2Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongShopFreeCoin2RequestDefaultTypeInternal _PaopaolongShopFreeCoin2Request_default_instance_;
constexpr PaopaolongShopFreeCoin2Response::PaopaolongShopFreeCoin2Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , code_(0){}
struct PaopaolongShopFreeCoin2ResponseDefaultTypeInternal {
  constexpr PaopaolongShopFreeCoin2ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongShopFreeCoin2ResponseDefaultTypeInternal() {}
  union {
    PaopaolongShopFreeCoin2Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongShopFreeCoin2ResponseDefaultTypeInternal _PaopaolongShopFreeCoin2Response_default_instance_;
constexpr PaopaolongShopBuyRequest::PaopaolongShopBuyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(0){}
struct PaopaolongShopBuyRequestDefaultTypeInternal {
  constexpr PaopaolongShopBuyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongShopBuyRequestDefaultTypeInternal() {}
  union {
    PaopaolongShopBuyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongShopBuyRequestDefaultTypeInternal _PaopaolongShopBuyRequest_default_instance_;
constexpr PaopaolongShopBuyResponse::PaopaolongShopBuyResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , code_(0)
  , id_(0){}
struct PaopaolongShopBuyResponseDefaultTypeInternal {
  constexpr PaopaolongShopBuyResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongShopBuyResponseDefaultTypeInternal() {}
  union {
    PaopaolongShopBuyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongShopBuyResponseDefaultTypeInternal _PaopaolongShopBuyResponse_default_instance_;
constexpr PaopaolongNewPackRequest::PaopaolongNewPackRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct PaopaolongNewPackRequestDefaultTypeInternal {
  constexpr PaopaolongNewPackRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongNewPackRequestDefaultTypeInternal() {}
  union {
    PaopaolongNewPackRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongNewPackRequestDefaultTypeInternal _PaopaolongNewPackRequest_default_instance_;
constexpr PaopaolongNewPackResponse::PaopaolongNewPackResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct PaopaolongNewPackResponseDefaultTypeInternal {
  constexpr PaopaolongNewPackResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PaopaolongNewPackResponseDefaultTypeInternal() {}
  union {
    PaopaolongNewPackResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PaopaolongNewPackResponseDefaultTypeInternal _PaopaolongNewPackResponse_default_instance_;
constexpr TanchishedazuozhanGetDataRequest::TanchishedazuozhanGetDataRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct TanchishedazuozhanGetDataRequestDefaultTypeInternal {
  constexpr TanchishedazuozhanGetDataRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TanchishedazuozhanGetDataRequestDefaultTypeInternal() {}
  union {
    TanchishedazuozhanGetDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TanchishedazuozhanGetDataRequestDefaultTypeInternal _TanchishedazuozhanGetDataRequest_default_instance_;
constexpr TanchishedazuozhanGetDataResponse::TanchishedazuozhanGetDataResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : skinarr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , userid_(int64_t{0})
  , code_(0)
  , skinid_(0)
  , gameid_(0){}
struct TanchishedazuozhanGetDataResponseDefaultTypeInternal {
  constexpr TanchishedazuozhanGetDataResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TanchishedazuozhanGetDataResponseDefaultTypeInternal() {}
  union {
    TanchishedazuozhanGetDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TanchishedazuozhanGetDataResponseDefaultTypeInternal _TanchishedazuozhanGetDataResponse_default_instance_;
constexpr TanchishedazuozhanStartRequest::TanchishedazuozhanStartRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mode_(0){}
struct TanchishedazuozhanStartRequestDefaultTypeInternal {
  constexpr TanchishedazuozhanStartRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TanchishedazuozhanStartRequestDefaultTypeInternal() {}
  union {
    TanchishedazuozhanStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TanchishedazuozhanStartRequestDefaultTypeInternal _TanchishedazuozhanStartRequest_default_instance_;
constexpr TanchishedazuozhanStartResponse::TanchishedazuozhanStartResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct TanchishedazuozhanStartResponseDefaultTypeInternal {
  constexpr TanchishedazuozhanStartResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TanchishedazuozhanStartResponseDefaultTypeInternal() {}
  union {
    TanchishedazuozhanStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TanchishedazuozhanStartResponseDefaultTypeInternal _TanchishedazuozhanStartResponse_default_instance_;
constexpr TanchishedazuozhanResultRequest::TanchishedazuozhanResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
  , mode_(0)
  , score_(int64_t{0}){}
struct TanchishedazuozhanResultRequestDefaultTypeInternal {
  constexpr TanchishedazuozhanResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TanchishedazuozhanResultRequestDefaultTypeInternal() {}
  union {
    TanchishedazuozhanResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TanchishedazuozhanResultRequestDefaultTypeInternal _TanchishedazuozhanResultRequest_default_instance_;
constexpr TanchishedazuozhanResultResponse::TanchishedazuozhanResultResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct TanchishedazuozhanResultResponseDefaultTypeInternal {
  constexpr TanchishedazuozhanResultResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TanchishedazuozhanResultResponseDefaultTypeInternal() {}
  union {
    TanchishedazuozhanResultResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TanchishedazuozhanResultResponseDefaultTypeInternal _TanchishedazuozhanResultResponse_default_instance_;
constexpr TanchishedazuozhanBuySkinRequest::TanchishedazuozhanBuySkinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : skinid_(0){}
struct TanchishedazuozhanBuySkinRequestDefaultTypeInternal {
  constexpr TanchishedazuozhanBuySkinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TanchishedazuozhanBuySkinRequestDefaultTypeInternal() {}
  union {
    TanchishedazuozhanBuySkinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TanchishedazuozhanBuySkinRequestDefaultTypeInternal _TanchishedazuozhanBuySkinRequest_default_instance_;
constexpr TanchishedazuozhanBuySkinResponse::TanchishedazuozhanBuySkinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , skinid_(0)
  , coin_(int64_t{0})
  , diamond_(int64_t{0}){}
struct TanchishedazuozhanBuySkinResponseDefaultTypeInternal {
  constexpr TanchishedazuozhanBuySkinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TanchishedazuozhanBuySkinResponseDefaultTypeInternal() {}
  union {
    TanchishedazuozhanBuySkinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TanchishedazuozhanBuySkinResponseDefaultTypeInternal _TanchishedazuozhanBuySkinResponse_default_instance_;
constexpr TanchishedazuozhanUseSkinRequest::TanchishedazuozhanUseSkinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : skinid_(0){}
struct TanchishedazuozhanUseSkinRequestDefaultTypeInternal {
  constexpr TanchishedazuozhanUseSkinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TanchishedazuozhanUseSkinRequestDefaultTypeInternal() {}
  union {
    TanchishedazuozhanUseSkinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TanchishedazuozhanUseSkinRequestDefaultTypeInternal _TanchishedazuozhanUseSkinRequest_default_instance_;
constexpr TanchishedazuozhanUseSkinResponse::TanchishedazuozhanUseSkinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , skinid_(0){}
struct TanchishedazuozhanUseSkinResponseDefaultTypeInternal {
  constexpr TanchishedazuozhanUseSkinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TanchishedazuozhanUseSkinResponseDefaultTypeInternal() {}
  union {
    TanchishedazuozhanUseSkinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TanchishedazuozhanUseSkinResponseDefaultTypeInternal _TanchishedazuozhanUseSkinResponse_default_instance_;
constexpr TanchishedazuozhanGetCoinRequest::TanchishedazuozhanGetCoinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0}){}
struct TanchishedazuozhanGetCoinRequestDefaultTypeInternal {
  constexpr TanchishedazuozhanGetCoinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TanchishedazuozhanGetCoinRequestDefaultTypeInternal() {}
  union {
    TanchishedazuozhanGetCoinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TanchishedazuozhanGetCoinRequestDefaultTypeInternal _TanchishedazuozhanGetCoinRequest_default_instance_;
constexpr TanchishedazuozhanGetCoinResponse::TanchishedazuozhanGetCoinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , code_(0){}
struct TanchishedazuozhanGetCoinResponseDefaultTypeInternal {
  constexpr TanchishedazuozhanGetCoinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TanchishedazuozhanGetCoinResponseDefaultTypeInternal() {}
  union {
    TanchishedazuozhanGetCoinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TanchishedazuozhanGetCoinResponseDefaultTypeInternal _TanchishedazuozhanGetCoinResponse_default_instance_;
constexpr TiantianpaokuGetDataRequest::TiantianpaokuGetDataRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct TiantianpaokuGetDataRequestDefaultTypeInternal {
  constexpr TiantianpaokuGetDataRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TiantianpaokuGetDataRequestDefaultTypeInternal() {}
  union {
    TiantianpaokuGetDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TiantianpaokuGetDataRequestDefaultTypeInternal _TiantianpaokuGetDataRequest_default_instance_;
constexpr TiantianpaokuGetDataResponse::TiantianpaokuGetDataResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : skinarr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , userid_(int64_t{0})
  , code_(0)
  , skinid_(0)
  , gameid_(0){}
struct TiantianpaokuGetDataResponseDefaultTypeInternal {
  constexpr TiantianpaokuGetDataResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TiantianpaokuGetDataResponseDefaultTypeInternal() {}
  union {
    TiantianpaokuGetDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TiantianpaokuGetDataResponseDefaultTypeInternal _TiantianpaokuGetDataResponse_default_instance_;
constexpr TiantianpaokuGetCoinRequest::TiantianpaokuGetCoinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0}){}
struct TiantianpaokuGetCoinRequestDefaultTypeInternal {
  constexpr TiantianpaokuGetCoinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TiantianpaokuGetCoinRequestDefaultTypeInternal() {}
  union {
    TiantianpaokuGetCoinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TiantianpaokuGetCoinRequestDefaultTypeInternal _TiantianpaokuGetCoinRequest_default_instance_;
constexpr TiantianpaokuGetCoinResponse::TiantianpaokuGetCoinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0})
  , code_(0){}
struct TiantianpaokuGetCoinResponseDefaultTypeInternal {
  constexpr TiantianpaokuGetCoinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TiantianpaokuGetCoinResponseDefaultTypeInternal() {}
  union {
    TiantianpaokuGetCoinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TiantianpaokuGetCoinResponseDefaultTypeInternal _TiantianpaokuGetCoinResponse_default_instance_;
constexpr TiantianpaokuBuySkinRequest::TiantianpaokuBuySkinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : skinid_(0){}
struct TiantianpaokuBuySkinRequestDefaultTypeInternal {
  constexpr TiantianpaokuBuySkinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TiantianpaokuBuySkinRequestDefaultTypeInternal() {}
  union {
    TiantianpaokuBuySkinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TiantianpaokuBuySkinRequestDefaultTypeInternal _TiantianpaokuBuySkinRequest_default_instance_;
constexpr TiantianpaokuBuySkinResponse::TiantianpaokuBuySkinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , skinid_(0)
  , coin_(int64_t{0}){}
struct TiantianpaokuBuySkinResponseDefaultTypeInternal {
  constexpr TiantianpaokuBuySkinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TiantianpaokuBuySkinResponseDefaultTypeInternal() {}
  union {
    TiantianpaokuBuySkinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TiantianpaokuBuySkinResponseDefaultTypeInternal _TiantianpaokuBuySkinResponse_default_instance_;
constexpr TiantianpaokuUseSkinRequest::TiantianpaokuUseSkinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : skinid_(0){}
struct TiantianpaokuUseSkinRequestDefaultTypeInternal {
  constexpr TiantianpaokuUseSkinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TiantianpaokuUseSkinRequestDefaultTypeInternal() {}
  union {
    TiantianpaokuUseSkinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TiantianpaokuUseSkinRequestDefaultTypeInternal _TiantianpaokuUseSkinRequest_default_instance_;
constexpr TiantianpaokuUseSkinResponse::TiantianpaokuUseSkinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , skinid_(0){}
struct TiantianpaokuUseSkinResponseDefaultTypeInternal {
  constexpr TiantianpaokuUseSkinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TiantianpaokuUseSkinResponseDefaultTypeInternal() {}
  union {
    TiantianpaokuUseSkinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TiantianpaokuUseSkinResponseDefaultTypeInternal _TiantianpaokuUseSkinResponse_default_instance_;
constexpr TiantianpaokuStartRequest::TiantianpaokuStartRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct TiantianpaokuStartRequestDefaultTypeInternal {
  constexpr TiantianpaokuStartRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TiantianpaokuStartRequestDefaultTypeInternal() {}
  union {
    TiantianpaokuStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TiantianpaokuStartRequestDefaultTypeInternal _TiantianpaokuStartRequest_default_instance_;
constexpr TiantianpaokuStartResponse::TiantianpaokuStartResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct TiantianpaokuStartResponseDefaultTypeInternal {
  constexpr TiantianpaokuStartResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TiantianpaokuStartResponseDefaultTypeInternal() {}
  union {
    TiantianpaokuStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TiantianpaokuStartResponseDefaultTypeInternal _TiantianpaokuStartResponse_default_instance_;
constexpr TiantianpaokuResultRequest::TiantianpaokuResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : score_(int64_t{0}){}
struct TiantianpaokuResultRequestDefaultTypeInternal {
  constexpr TiantianpaokuResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TiantianpaokuResultRequestDefaultTypeInternal() {}
  union {
    TiantianpaokuResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TiantianpaokuResultRequestDefaultTypeInternal _TiantianpaokuResultRequest_default_instance_;
constexpr TiantianpaokuResultResponse::TiantianpaokuResultResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct TiantianpaokuResultResponseDefaultTypeInternal {
  constexpr TiantianpaokuResultResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TiantianpaokuResultResponseDefaultTypeInternal() {}
  union {
    TiantianpaokuResultResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TiantianpaokuResultResponseDefaultTypeInternal _TiantianpaokuResultResponse_default_instance_;
constexpr HuanlemaomibeiGetDataRequest::HuanlemaomibeiGetDataRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct HuanlemaomibeiGetDataRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiGetDataRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiGetDataRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiGetDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiGetDataRequestDefaultTypeInternal _HuanlemaomibeiGetDataRequest_default_instance_;
constexpr HuanlemaomibeiLevel::HuanlemaomibeiLevel(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : section_(0)
  , level_(0)
  , unlock_(0)
  , star_(0)
  , coin_(int64_t{0}){}
struct HuanlemaomibeiLevelDefaultTypeInternal {
  constexpr HuanlemaomibeiLevelDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiLevelDefaultTypeInternal() {}
  union {
    HuanlemaomibeiLevel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiLevelDefaultTypeInternal _HuanlemaomibeiLevel_default_instance_;
constexpr HuanlemaomibeiGetDataResponse::HuanlemaomibeiGetDataResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : levelarr_()
  , inkarr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cuparr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , userid_(int64_t{0})
  , freedrawtime_(int64_t{0})
  , code_(0)
  , inkid_(0)
  , offlinetime_(int64_t{0})
  , cupid_(0)
  , gameid_(0)
  , hp_(0){}
struct HuanlemaomibeiGetDataResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiGetDataResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiGetDataResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiGetDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiGetDataResponseDefaultTypeInternal _HuanlemaomibeiGetDataResponse_default_instance_;
constexpr HuanlemaomibeiSignQueryRequest::HuanlemaomibeiSignQueryRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct HuanlemaomibeiSignQueryRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiSignQueryRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiSignQueryRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiSignQueryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiSignQueryRequestDefaultTypeInternal _HuanlemaomibeiSignQueryRequest_default_instance_;
constexpr HuanlemaomibeiSignQueryResponse::HuanlemaomibeiSignQueryResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , signtoday_(0)
  , signday_(0){}
struct HuanlemaomibeiSignQueryResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiSignQueryResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiSignQueryResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiSignQueryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiSignQueryResponseDefaultTypeInternal _HuanlemaomibeiSignQueryResponse_default_instance_;
constexpr HuanlemaomibeiSignRequest::HuanlemaomibeiSignRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct HuanlemaomibeiSignRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiSignRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiSignRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiSignRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiSignRequestDefaultTypeInternal _HuanlemaomibeiSignRequest_default_instance_;
constexpr HuanlemaomibeiSignResponse::HuanlemaomibeiSignResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct HuanlemaomibeiSignResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiSignResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiSignResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiSignResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiSignResponseDefaultTypeInternal _HuanlemaomibeiSignResponse_default_instance_;
constexpr HuanlemaomibeiFreeDrawQueryRequest::HuanlemaomibeiFreeDrawQueryRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct HuanlemaomibeiFreeDrawQueryRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiFreeDrawQueryRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiFreeDrawQueryRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiFreeDrawQueryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiFreeDrawQueryRequestDefaultTypeInternal _HuanlemaomibeiFreeDrawQueryRequest_default_instance_;
constexpr HuanlemaomibeiFreeDrawQueryResponse::HuanlemaomibeiFreeDrawQueryResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : freedrawcount_(int64_t{0})
  , code_(0){}
struct HuanlemaomibeiFreeDrawQueryResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiFreeDrawQueryResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiFreeDrawQueryResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiFreeDrawQueryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiFreeDrawQueryResponseDefaultTypeInternal _HuanlemaomibeiFreeDrawQueryResponse_default_instance_;
constexpr HuanlemaomibeiFreeDrawRequest::HuanlemaomibeiFreeDrawRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct HuanlemaomibeiFreeDrawRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiFreeDrawRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiFreeDrawRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiFreeDrawRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiFreeDrawRequestDefaultTypeInternal _HuanlemaomibeiFreeDrawRequest_default_instance_;
constexpr HuanlemaomibeiFreeDrawResponse::HuanlemaomibeiFreeDrawResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , giftindex_(0)
  , freedrawtime_(int64_t{0}){}
struct HuanlemaomibeiFreeDrawResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiFreeDrawResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiFreeDrawResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiFreeDrawResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiFreeDrawResponseDefaultTypeInternal _HuanlemaomibeiFreeDrawResponse_default_instance_;
constexpr HuanlemaomibeiFlyQueryRequest::HuanlemaomibeiFlyQueryRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct HuanlemaomibeiFlyQueryRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiFlyQueryRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiFlyQueryRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiFlyQueryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiFlyQueryRequestDefaultTypeInternal _HuanlemaomibeiFlyQueryRequest_default_instance_;
constexpr HuanlemaomibeiFlyQueryResponse::HuanlemaomibeiFlyQueryResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : flycount_(int64_t{0})
  , code_(0){}
struct HuanlemaomibeiFlyQueryResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiFlyQueryResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiFlyQueryResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiFlyQueryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiFlyQueryResponseDefaultTypeInternal _HuanlemaomibeiFlyQueryResponse_default_instance_;
constexpr HuanlemaomibeiFlyRequest::HuanlemaomibeiFlyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct HuanlemaomibeiFlyRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiFlyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiFlyRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiFlyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiFlyRequestDefaultTypeInternal _HuanlemaomibeiFlyRequest_default_instance_;
constexpr HuanlemaomibeiFlyResponse::HuanlemaomibeiFlyResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , giftindex_(0)
  , flytime_(int64_t{0}){}
struct HuanlemaomibeiFlyResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiFlyResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiFlyResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiFlyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiFlyResponseDefaultTypeInternal _HuanlemaomibeiFlyResponse_default_instance_;
constexpr HuanlemaomibeiOfflineCoinRequest::HuanlemaomibeiOfflineCoinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct HuanlemaomibeiOfflineCoinRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiOfflineCoinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiOfflineCoinRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiOfflineCoinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiOfflineCoinRequestDefaultTypeInternal _HuanlemaomibeiOfflineCoinRequest_default_instance_;
constexpr HuanlemaomibeiOfflineCoinResponse::HuanlemaomibeiOfflineCoinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : offlinetime_(int64_t{0})
  , coin_(int64_t{0})
  , code_(0){}
struct HuanlemaomibeiOfflineCoinResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiOfflineCoinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiOfflineCoinResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiOfflineCoinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiOfflineCoinResponseDefaultTypeInternal _HuanlemaomibeiOfflineCoinResponse_default_instance_;
constexpr HuanlemaomibeiBuySkinRequest::HuanlemaomibeiBuySkinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : inkid_(0)
  , cupid_(0){}
struct HuanlemaomibeiBuySkinRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiBuySkinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiBuySkinRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiBuySkinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiBuySkinRequestDefaultTypeInternal _HuanlemaomibeiBuySkinRequest_default_instance_;
constexpr HuanlemaomibeiBuySkinResponse::HuanlemaomibeiBuySkinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , inkid_(0)
  , coin_(int64_t{0})
  , cupid_(0){}
struct HuanlemaomibeiBuySkinResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiBuySkinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiBuySkinResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiBuySkinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiBuySkinResponseDefaultTypeInternal _HuanlemaomibeiBuySkinResponse_default_instance_;
constexpr HuanlemaomibeiUseSkinRequest::HuanlemaomibeiUseSkinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : inkid_(0)
  , cupid_(0){}
struct HuanlemaomibeiUseSkinRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiUseSkinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiUseSkinRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiUseSkinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiUseSkinRequestDefaultTypeInternal _HuanlemaomibeiUseSkinRequest_default_instance_;
constexpr HuanlemaomibeiUseSkinResponse::HuanlemaomibeiUseSkinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , inkid_(0)
  , cupid_(0){}
struct HuanlemaomibeiUseSkinResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiUseSkinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiUseSkinResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiUseSkinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiUseSkinResponseDefaultTypeInternal _HuanlemaomibeiUseSkinResponse_default_instance_;
constexpr HuanlemaomibeiStartRequest::HuanlemaomibeiStartRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : section_(0)
  , level_(0){}
struct HuanlemaomibeiStartRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiStartRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiStartRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiStartRequestDefaultTypeInternal _HuanlemaomibeiStartRequest_default_instance_;
constexpr HuanlemaomibeiStartResponse::HuanlemaomibeiStartResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , section_(0)
  , level_(0){}
struct HuanlemaomibeiStartResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiStartResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiStartResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiStartResponseDefaultTypeInternal _HuanlemaomibeiStartResponse_default_instance_;
constexpr HuanlemaomibeiResultRequest::HuanlemaomibeiResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : section_(0)
  , level_(0)
  , star_(0){}
struct HuanlemaomibeiResultRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiResultRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiResultRequestDefaultTypeInternal _HuanlemaomibeiResultRequest_default_instance_;
constexpr HuanlemaomibeiResultResponse::HuanlemaomibeiResultResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , section_(0)
  , level_(0){}
struct HuanlemaomibeiResultResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiResultResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiResultResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiResultResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiResultResponseDefaultTypeInternal _HuanlemaomibeiResultResponse_default_instance_;
constexpr HuanlemaomibeiLevelCoinRequest::HuanlemaomibeiLevelCoinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : section_(0)
  , level_(0){}
struct HuanlemaomibeiLevelCoinRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiLevelCoinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiLevelCoinRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiLevelCoinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiLevelCoinRequestDefaultTypeInternal _HuanlemaomibeiLevelCoinRequest_default_instance_;
constexpr HuanlemaomibeiLevelCoinResponse::HuanlemaomibeiLevelCoinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , section_(0)
  , coin_(int64_t{0})
  , level_(0){}
struct HuanlemaomibeiLevelCoinResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiLevelCoinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiLevelCoinResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiLevelCoinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiLevelCoinResponseDefaultTypeInternal _HuanlemaomibeiLevelCoinResponse_default_instance_;
constexpr HuanlemaomibeiLevelUnlockRequest::HuanlemaomibeiLevelUnlockRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : section_(0)
  , level_(0){}
struct HuanlemaomibeiLevelUnlockRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiLevelUnlockRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiLevelUnlockRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiLevelUnlockRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiLevelUnlockRequestDefaultTypeInternal _HuanlemaomibeiLevelUnlockRequest_default_instance_;
constexpr HuanlemaomibeiLevelUnlockResponse::HuanlemaomibeiLevelUnlockResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , section_(0)
  , coin_(int64_t{0})
  , level_(0){}
struct HuanlemaomibeiLevelUnlockResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiLevelUnlockResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiLevelUnlockResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiLevelUnlockResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiLevelUnlockResponseDefaultTypeInternal _HuanlemaomibeiLevelUnlockResponse_default_instance_;
constexpr HuanlemaomibeiAddHpRequest::HuanlemaomibeiAddHpRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hp_(0){}
struct HuanlemaomibeiAddHpRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiAddHpRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiAddHpRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiAddHpRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiAddHpRequestDefaultTypeInternal _HuanlemaomibeiAddHpRequest_default_instance_;
constexpr HuanlemaomibeiAddHpResponse::HuanlemaomibeiAddHpResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , hp_(0){}
struct HuanlemaomibeiAddHpResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiAddHpResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiAddHpResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiAddHpResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiAddHpResponseDefaultTypeInternal _HuanlemaomibeiAddHpResponse_default_instance_;
constexpr HuanlemaomibeiLevelStartRequest::HuanlemaomibeiLevelStartRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct HuanlemaomibeiLevelStartRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiLevelStartRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiLevelStartRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiLevelStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiLevelStartRequestDefaultTypeInternal _HuanlemaomibeiLevelStartRequest_default_instance_;
constexpr HuanlemaomibeiLevelStartResponse::HuanlemaomibeiLevelStartResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct HuanlemaomibeiLevelStartResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiLevelStartResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiLevelStartResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiLevelStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiLevelStartResponseDefaultTypeInternal _HuanlemaomibeiLevelStartResponse_default_instance_;
constexpr HuanlemaomibeiLevelResultRequest::HuanlemaomibeiLevelResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : score_(int64_t{0}){}
struct HuanlemaomibeiLevelResultRequestDefaultTypeInternal {
  constexpr HuanlemaomibeiLevelResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiLevelResultRequestDefaultTypeInternal() {}
  union {
    HuanlemaomibeiLevelResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiLevelResultRequestDefaultTypeInternal _HuanlemaomibeiLevelResultRequest_default_instance_;
constexpr HuanlemaomibeiLevelResultResponse::HuanlemaomibeiLevelResultResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct HuanlemaomibeiLevelResultResponseDefaultTypeInternal {
  constexpr HuanlemaomibeiLevelResultResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HuanlemaomibeiLevelResultResponseDefaultTypeInternal() {}
  union {
    HuanlemaomibeiLevelResultResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HuanlemaomibeiLevelResultResponseDefaultTypeInternal _HuanlemaomibeiLevelResultResponse_default_instance_;
constexpr YangzhunongchangItem::YangzhunongchangItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(0)
  , num_(0){}
struct YangzhunongchangItemDefaultTypeInternal {
  constexpr YangzhunongchangItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangItemDefaultTypeInternal() {}
  union {
    YangzhunongchangItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangItemDefaultTypeInternal _YangzhunongchangItem_default_instance_;
constexpr YangzhunongchangPig::YangzhunongchangPig(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , createtime_(int64_t{0}){}
struct YangzhunongchangPigDefaultTypeInternal {
  constexpr YangzhunongchangPigDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangPigDefaultTypeInternal() {}
  union {
    YangzhunongchangPig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangPigDefaultTypeInternal _YangzhunongchangPig_default_instance_;
constexpr YangzhunongchangBreedPig::YangzhunongchangBreedPig(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct YangzhunongchangBreedPigDefaultTypeInternal {
  constexpr YangzhunongchangBreedPigDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangBreedPigDefaultTypeInternal() {}
  union {
    YangzhunongchangBreedPig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangBreedPigDefaultTypeInternal _YangzhunongchangBreedPig_default_instance_;
constexpr YangzhunongchangUsu::YangzhunongchangUsu(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(0){}
struct YangzhunongchangUsuDefaultTypeInternal {
  constexpr YangzhunongchangUsuDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangUsuDefaultTypeInternal() {}
  union {
    YangzhunongchangUsu _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangUsuDefaultTypeInternal _YangzhunongchangUsu_default_instance_;
constexpr YangzhunongchangFood::YangzhunongchangFood(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct YangzhunongchangFoodDefaultTypeInternal {
  constexpr YangzhunongchangFoodDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangFoodDefaultTypeInternal() {}
  union {
    YangzhunongchangFood _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangFoodDefaultTypeInternal _YangzhunongchangFood_default_instance_;
constexpr YangzhunongchangTask::YangzhunongchangTask(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , count_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , index_(0){}
struct YangzhunongchangTaskDefaultTypeInternal {
  constexpr YangzhunongchangTaskDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangTaskDefaultTypeInternal() {}
  union {
    YangzhunongchangTask _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangTaskDefaultTypeInternal _YangzhunongchangTask_default_instance_;
constexpr YangzhunongchangGetDataRequest::YangzhunongchangGetDataRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct YangzhunongchangGetDataRequestDefaultTypeInternal {
  constexpr YangzhunongchangGetDataRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangGetDataRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangGetDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangGetDataRequestDefaultTypeInternal _YangzhunongchangGetDataRequest_default_instance_;
constexpr YangzhunongchangGetDataResponse::YangzhunongchangGetDataResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : itemarr_()
  , pigarr_()
  , breedpigarr_()
  , usuarr_()
  , foodarr_()
  , taskarr_()
  , farmlvname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , userid_(int64_t{0})
  , code_(0)
  , farmlv_(0)
  , farmlvexp_(0)
  , farmlvexpcur_(0)
  , awardnum_(0)
  , gameid_(0){}
struct YangzhunongchangGetDataResponseDefaultTypeInternal {
  constexpr YangzhunongchangGetDataResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangGetDataResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangGetDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangGetDataResponseDefaultTypeInternal _YangzhunongchangGetDataResponse_default_instance_;
constexpr YangzhunongchangAddExpRequest::YangzhunongchangAddExpRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : exp_(0){}
struct YangzhunongchangAddExpRequestDefaultTypeInternal {
  constexpr YangzhunongchangAddExpRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddExpRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangAddExpRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddExpRequestDefaultTypeInternal _YangzhunongchangAddExpRequest_default_instance_;
constexpr YangzhunongchangAddExpResponse::YangzhunongchangAddExpResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangAddExpResponseDefaultTypeInternal {
  constexpr YangzhunongchangAddExpResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddExpResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangAddExpResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddExpResponseDefaultTypeInternal _YangzhunongchangAddExpResponse_default_instance_;
constexpr YangzhunongchangAddLevelRequest::YangzhunongchangAddLevelRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : farmlvname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , farmlv_(0)
  , farmlvexpcur_(0){}
struct YangzhunongchangAddLevelRequestDefaultTypeInternal {
  constexpr YangzhunongchangAddLevelRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddLevelRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangAddLevelRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddLevelRequestDefaultTypeInternal _YangzhunongchangAddLevelRequest_default_instance_;
constexpr YangzhunongchangAddLevelResponse::YangzhunongchangAddLevelResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangAddLevelResponseDefaultTypeInternal {
  constexpr YangzhunongchangAddLevelResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddLevelResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangAddLevelResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddLevelResponseDefaultTypeInternal _YangzhunongchangAddLevelResponse_default_instance_;
constexpr YangzhunongchangAddCoinRequest::YangzhunongchangAddCoinRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coin_(int64_t{0}){}
struct YangzhunongchangAddCoinRequestDefaultTypeInternal {
  constexpr YangzhunongchangAddCoinRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddCoinRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangAddCoinRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddCoinRequestDefaultTypeInternal _YangzhunongchangAddCoinRequest_default_instance_;
constexpr YangzhunongchangAddCoinResponse::YangzhunongchangAddCoinResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangAddCoinResponseDefaultTypeInternal {
  constexpr YangzhunongchangAddCoinResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddCoinResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangAddCoinResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddCoinResponseDefaultTypeInternal _YangzhunongchangAddCoinResponse_default_instance_;
constexpr YangzhunongchangAddDiamondRequest::YangzhunongchangAddDiamondRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : diamond_(int64_t{0}){}
struct YangzhunongchangAddDiamondRequestDefaultTypeInternal {
  constexpr YangzhunongchangAddDiamondRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddDiamondRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangAddDiamondRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddDiamondRequestDefaultTypeInternal _YangzhunongchangAddDiamondRequest_default_instance_;
constexpr YangzhunongchangAddDiamondResponse::YangzhunongchangAddDiamondResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangAddDiamondResponseDefaultTypeInternal {
  constexpr YangzhunongchangAddDiamondResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddDiamondResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangAddDiamondResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddDiamondResponseDefaultTypeInternal _YangzhunongchangAddDiamondResponse_default_instance_;
constexpr YangzhunongchangAddItemRequest::YangzhunongchangAddItemRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(0)
  , num_(0){}
struct YangzhunongchangAddItemRequestDefaultTypeInternal {
  constexpr YangzhunongchangAddItemRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddItemRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangAddItemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddItemRequestDefaultTypeInternal _YangzhunongchangAddItemRequest_default_instance_;
constexpr YangzhunongchangAddItemResponse::YangzhunongchangAddItemResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangAddItemResponseDefaultTypeInternal {
  constexpr YangzhunongchangAddItemResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddItemResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangAddItemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddItemResponseDefaultTypeInternal _YangzhunongchangAddItemResponse_default_instance_;
constexpr YangzhunongchangAddPigRequest::YangzhunongchangAddPigRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct YangzhunongchangAddPigRequestDefaultTypeInternal {
  constexpr YangzhunongchangAddPigRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddPigRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangAddPigRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddPigRequestDefaultTypeInternal _YangzhunongchangAddPigRequest_default_instance_;
constexpr YangzhunongchangAddPigResponse::YangzhunongchangAddPigResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangAddPigResponseDefaultTypeInternal {
  constexpr YangzhunongchangAddPigResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddPigResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangAddPigResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddPigResponseDefaultTypeInternal _YangzhunongchangAddPigResponse_default_instance_;
constexpr YangzhunongchangDelPigRequest::YangzhunongchangDelPigRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct YangzhunongchangDelPigRequestDefaultTypeInternal {
  constexpr YangzhunongchangDelPigRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangDelPigRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangDelPigRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangDelPigRequestDefaultTypeInternal _YangzhunongchangDelPigRequest_default_instance_;
constexpr YangzhunongchangDelPigResponse::YangzhunongchangDelPigResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangDelPigResponseDefaultTypeInternal {
  constexpr YangzhunongchangDelPigResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangDelPigResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangDelPigResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangDelPigResponseDefaultTypeInternal _YangzhunongchangDelPigResponse_default_instance_;
constexpr YangzhunongchangAddBreedPigRequest::YangzhunongchangAddBreedPigRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct YangzhunongchangAddBreedPigRequestDefaultTypeInternal {
  constexpr YangzhunongchangAddBreedPigRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddBreedPigRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangAddBreedPigRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddBreedPigRequestDefaultTypeInternal _YangzhunongchangAddBreedPigRequest_default_instance_;
constexpr YangzhunongchangAddBreedPigResponse::YangzhunongchangAddBreedPigResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangAddBreedPigResponseDefaultTypeInternal {
  constexpr YangzhunongchangAddBreedPigResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddBreedPigResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangAddBreedPigResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddBreedPigResponseDefaultTypeInternal _YangzhunongchangAddBreedPigResponse_default_instance_;
constexpr YangzhunongchangDelBreedPigRequest::YangzhunongchangDelBreedPigRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct YangzhunongchangDelBreedPigRequestDefaultTypeInternal {
  constexpr YangzhunongchangDelBreedPigRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangDelBreedPigRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangDelBreedPigRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangDelBreedPigRequestDefaultTypeInternal _YangzhunongchangDelBreedPigRequest_default_instance_;
constexpr YangzhunongchangDelBreedPigResponse::YangzhunongchangDelBreedPigResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangDelBreedPigResponseDefaultTypeInternal {
  constexpr YangzhunongchangDelBreedPigResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangDelBreedPigResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangDelBreedPigResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangDelBreedPigResponseDefaultTypeInternal _YangzhunongchangDelBreedPigResponse_default_instance_;
constexpr YangzhunongchangAddUsuRequest::YangzhunongchangAddUsuRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(0){}
struct YangzhunongchangAddUsuRequestDefaultTypeInternal {
  constexpr YangzhunongchangAddUsuRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddUsuRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangAddUsuRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddUsuRequestDefaultTypeInternal _YangzhunongchangAddUsuRequest_default_instance_;
constexpr YangzhunongchangAddUsuResponse::YangzhunongchangAddUsuResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangAddUsuResponseDefaultTypeInternal {
  constexpr YangzhunongchangAddUsuResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddUsuResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangAddUsuResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddUsuResponseDefaultTypeInternal _YangzhunongchangAddUsuResponse_default_instance_;
constexpr YangzhunongchangAddFoodRequest::YangzhunongchangAddFoodRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct YangzhunongchangAddFoodRequestDefaultTypeInternal {
  constexpr YangzhunongchangAddFoodRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddFoodRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangAddFoodRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddFoodRequestDefaultTypeInternal _YangzhunongchangAddFoodRequest_default_instance_;
constexpr YangzhunongchangAddFoodResponse::YangzhunongchangAddFoodResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangAddFoodResponseDefaultTypeInternal {
  constexpr YangzhunongchangAddFoodResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddFoodResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangAddFoodResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddFoodResponseDefaultTypeInternal _YangzhunongchangAddFoodResponse_default_instance_;
constexpr YangzhunongchangDelFoodRequest::YangzhunongchangDelFoodRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct YangzhunongchangDelFoodRequestDefaultTypeInternal {
  constexpr YangzhunongchangDelFoodRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangDelFoodRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangDelFoodRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangDelFoodRequestDefaultTypeInternal _YangzhunongchangDelFoodRequest_default_instance_;
constexpr YangzhunongchangDelFoodResponse::YangzhunongchangDelFoodResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangDelFoodResponseDefaultTypeInternal {
  constexpr YangzhunongchangDelFoodResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangDelFoodResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangDelFoodResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangDelFoodResponseDefaultTypeInternal _YangzhunongchangDelFoodResponse_default_instance_;
constexpr YangzhunongchangAddTaskRequest::YangzhunongchangAddTaskRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , count_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , index_(0){}
struct YangzhunongchangAddTaskRequestDefaultTypeInternal {
  constexpr YangzhunongchangAddTaskRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddTaskRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangAddTaskRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddTaskRequestDefaultTypeInternal _YangzhunongchangAddTaskRequest_default_instance_;
constexpr YangzhunongchangAddTaskResponse::YangzhunongchangAddTaskResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangAddTaskResponseDefaultTypeInternal {
  constexpr YangzhunongchangAddTaskResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAddTaskResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangAddTaskResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAddTaskResponseDefaultTypeInternal _YangzhunongchangAddTaskResponse_default_instance_;
constexpr YangzhunongchangAwardRequest::YangzhunongchangAwardRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct YangzhunongchangAwardRequestDefaultTypeInternal {
  constexpr YangzhunongchangAwardRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAwardRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangAwardRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAwardRequestDefaultTypeInternal _YangzhunongchangAwardRequest_default_instance_;
constexpr YangzhunongchangAwardResponse::YangzhunongchangAwardResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangAwardResponseDefaultTypeInternal {
  constexpr YangzhunongchangAwardResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangAwardResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangAwardResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangAwardResponseDefaultTypeInternal _YangzhunongchangAwardResponse_default_instance_;
constexpr YangzhunongchangStartRequest::YangzhunongchangStartRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct YangzhunongchangStartRequestDefaultTypeInternal {
  constexpr YangzhunongchangStartRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangStartRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangStartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangStartRequestDefaultTypeInternal _YangzhunongchangStartRequest_default_instance_;
constexpr YangzhunongchangStartResponse::YangzhunongchangStartResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangStartResponseDefaultTypeInternal {
  constexpr YangzhunongchangStartResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangStartResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangStartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangStartResponseDefaultTypeInternal _YangzhunongchangStartResponse_default_instance_;
constexpr YangzhunongchangResultRequest::YangzhunongchangResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0){}
struct YangzhunongchangResultRequestDefaultTypeInternal {
  constexpr YangzhunongchangResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangResultRequestDefaultTypeInternal() {}
  union {
    YangzhunongchangResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangResultRequestDefaultTypeInternal _YangzhunongchangResultRequest_default_instance_;
constexpr YangzhunongchangResultResponse::YangzhunongchangResultResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0){}
struct YangzhunongchangResultResponseDefaultTypeInternal {
  constexpr YangzhunongchangResultResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~YangzhunongchangResultResponseDefaultTypeInternal() {}
  union {
    YangzhunongchangResultResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT YangzhunongchangResultResponseDefaultTypeInternal _YangzhunongchangResultResponse_default_instance_;
}  // namespace gamepb
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_gamepb_2fgamepb_2eproto[218];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_gamepb_2fgamepb_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_gamepb_2fgamepb_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_gamepb_2fgamepb_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::KickPush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::KickPush, reason_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginRequest, openid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginRequest, nickname_),
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginRequest, avatar_),
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginRequest, token_),
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginRequest, time_),
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginRequest, platformregistertime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginResponse, userid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginResponse, coin_),
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginResponse, score_),
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginResponse, medal_),
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginResponse, diamond_),
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginResponse, servertime_),
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginResponse, level_),
  PROTOBUF_FIELD_OFFSET(::gamepb::LoginResponse, gold_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::RoundShareRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::RoundShareResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::RoundShareResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::RoundStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::RoundStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::RoundStartResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::RoundResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::RoundResultRequest, score_),
  PROTOBUF_FIELD_OFFSET(::gamepb::RoundResultRequest, medal_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::RoundResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::RoundResultResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::RankUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::RankUser, openid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::RankUser, nickname_),
  PROTOBUF_FIELD_OFFSET(::gamepb::RankUser, avatar_),
  PROTOBUF_FIELD_OFFSET(::gamepb::RankUser, score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GetLevelRankRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GetLevelRankRequest, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GetLevelRankResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GetLevelRankResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GetLevelRankResponse, users_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GetLevelRankResponse, rank_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GetLevelRankResponse, score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GetScoreRankRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GetScoreRankRequest, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GetScoreRankResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GetScoreRankResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GetScoreRankResponse, users_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GetScoreRankResponse, rank_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GetScoreRankResponse, score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GetMedalRankRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GetMedalRankRequest, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GetMedalRankResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GetMedalRankResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GetMedalRankResponse, users_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GetMedalRankResponse, rank_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GetMedalRankResponse, score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::DaxiguaGetDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::DaxiguaGetDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::DaxiguaGetDataResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::DaxiguaGetDataResponse, userid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::DaxiguaGetDataResponse, gameid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::DaxiguaStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::DaxiguaStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::DaxiguaStartResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::DaxiguaResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::DaxiguaResultRequest, score_),
  PROTOBUF_FIELD_OFFSET(::gamepb::DaxiguaResultRequest, medal_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::DaxiguaResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::DaxiguaResultResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqGetDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqGetDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqGetDataResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqGetDataResponse, userid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqGetDataResponse, skin_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqGetDataResponse, skinarr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqGetDataResponse, lastsigntime_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqGetDataResponse, signtimes_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqGetDataResponse, signtimenow_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqGetDataResponse, gameid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqDaySignRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqDaySignResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqDaySignResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqDaySignResponse, coin_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqDaySignResponse, lastsigntime_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqDaySignResponse, signtimes_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqDaySignResponse, signtimenow_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqBuySkinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqBuySkinRequest, skinid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqBuySkinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqBuySkinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqBuySkinResponse, skinid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqBuySkinResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqUseSkinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqUseSkinRequest, skinid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqUseSkinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqUseSkinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqUseSkinResponse, skinid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqPickCoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqPickCoinRequest, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqPickCoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqPickCoinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqPickCoinResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqReviveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqReviveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqReviveResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqReviveResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqDieflyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqDieflyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqDieflyResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqDieflyResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqRewardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqRewardResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqRewardResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqRewardResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqStartResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqResultRequest, score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::BpbxqResultResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetDataResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetDataResponse, userid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetDataResponse, rolelevel_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetDataResponse, buildlevel_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetDataResponse, level_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetDataResponse, leveltype_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetDataResponse, leveltip_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetDataResponse, hp_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetDataResponse, hpdate_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetDataResponse, gethpcount_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetDataResponse, gethpday_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetDataResponse, gameid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuStartResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuStartResponse, hp_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuStartResponse, leveltip_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuStartResponse, user_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuResultRequest, answer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuResultResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuResetHpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuResetHpResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuResetHpResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuResetHpResponse, hp_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuResetHpResponse, hpdate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuUpgradeRoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuUpgradeRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuUpgradeRoleResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuUpgradeRoleResponse, rolelevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuUpgradeBuildRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuUpgradeBuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuUpgradeBuildResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuUpgradeBuildResponse, buildlevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetHpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetHpResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetHpResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetHpResponse, hp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuTipRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuTipResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuTipResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuTipResponse, leveltip_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuTipResponse, hp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetTipRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetTipResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetTipResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::CaichengyuGetTipResponse, hp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetDataResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetDataResponse, userid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetDataResponse, birdid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetDataResponse, birdarr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetDataResponse, signtime_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetDataResponse, signday_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetDataResponse, getgoldcount_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetDataResponse, getgoldtime_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetDataResponse, level_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetDataResponse, gameid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoBuySkinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoBuySkinRequest, birdid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoBuySkinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoBuySkinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoBuySkinResponse, birdid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoBuySkinResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoUseSkinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoUseSkinRequest, birdid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoUseSkinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoUseSkinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoUseSkinResponse, birdid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoDaySignRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoDaySignResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoDaySignResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoDaySignResponse, coin_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoDaySignResponse, signtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetCoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetCoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetCoinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetCoinResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetInvincibleCoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetInvincibleCoinRequest, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetInvincibleCoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetInvincibleCoinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetInvincibleCoinResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetLevelCoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetLevelCoinRequest, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetLevelCoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetLevelCoinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoGetLevelCoinResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoStartResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoResultRequest, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::FangkuainiaoResultResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuGetDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuGetDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuGetDataResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuGetDataResponse, userid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuGetDataResponse, skinid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuGetDataResponse, skinarr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuGetDataResponse, shoparr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuGetDataResponse, level_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuGetDataResponse, gameid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuAwardCoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuAwardCoinRequest, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuAwardCoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuAwardCoinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuAwardCoinResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuUnlockSkinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuUnlockSkinRequest, shopindex_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuUnlockSkinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuUnlockSkinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuUnlockSkinResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuUseSkinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuUseSkinRequest, shopindex_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuUseSkinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuUseSkinResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuStartResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuResultRequest, score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuResultResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuLevelStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuLevelStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuLevelStartResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuLevelResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuLevelResultRequest, score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuLevelResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuLevelResultResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuLevelPassRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuLevelPassRequest, level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuLevelPassResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::GongjianchuanshuLevelPassResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongLevel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongLevel, level_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongLevel, sec_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongLevel, lose_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongLevel, score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataResponse, userid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataResponse, level_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataResponse, itemarr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataResponse, hp_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataResponse, freedrawtime_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataResponse, newpackredeemed_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataResponse, shopfreediamondtime_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataResponse, shopfreediamondtime2_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataResponse, lastsigntime_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataResponse, signedtime_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataResponse, firstsigntime_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataResponse, levelarr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongGetDataResponse, gameid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongUseItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongUseItemRequest, itemid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongUseItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongUseItemResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongUseItemResponse, itemid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongStartRequest, level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongStartResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongStartResponse, level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongResultRequest, result_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongResultRequest, level_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongResultRequest, score_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongResultRequest, sec_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongResultRequest, star_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongResultResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongResultResponse, level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongFreeDrawRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongFreeDrawResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongFreeDrawResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongFreeDrawResponse, luckyid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongFreeDrawResponse, freedrawtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongCostDrawRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongCostDrawResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongCostDrawResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongCostDrawResponse, luckyid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongCostDrawResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongSignRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongSignResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongSignResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongShopFreeCoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongShopFreeCoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongShopFreeCoinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongShopFreeCoinResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongShopFreeCoin2Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongShopFreeCoin2Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongShopFreeCoin2Response, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongShopFreeCoin2Response, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongShopBuyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongShopBuyRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongShopBuyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongShopBuyResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongShopBuyResponse, coin_),
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongShopBuyResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongNewPackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongNewPackResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::PaopaolongNewPackResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanGetDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanGetDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanGetDataResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanGetDataResponse, userid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanGetDataResponse, skinid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanGetDataResponse, skinarr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanGetDataResponse, gameid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanStartRequest, mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanStartResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanResultRequest, result_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanResultRequest, mode_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanResultRequest, score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanResultResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanBuySkinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanBuySkinRequest, skinid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanBuySkinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanBuySkinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanBuySkinResponse, skinid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanBuySkinResponse, coin_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanBuySkinResponse, diamond_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanUseSkinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanUseSkinRequest, skinid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanUseSkinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanUseSkinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanUseSkinResponse, skinid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanGetCoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanGetCoinRequest, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanGetCoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanGetCoinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TanchishedazuozhanGetCoinResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuGetDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuGetDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuGetDataResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuGetDataResponse, userid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuGetDataResponse, skinid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuGetDataResponse, skinarr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuGetDataResponse, gameid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuGetCoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuGetCoinRequest, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuGetCoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuGetCoinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuGetCoinResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuBuySkinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuBuySkinRequest, skinid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuBuySkinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuBuySkinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuBuySkinResponse, skinid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuBuySkinResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuUseSkinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuUseSkinRequest, skinid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuUseSkinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuUseSkinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuUseSkinResponse, skinid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuStartResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuResultRequest, score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::TiantianpaokuResultResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiGetDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevel, section_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevel, level_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevel, unlock_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevel, star_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevel, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiGetDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiGetDataResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiGetDataResponse, userid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiGetDataResponse, freedrawtime_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiGetDataResponse, inkarr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiGetDataResponse, cuparr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiGetDataResponse, inkid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiGetDataResponse, cupid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiGetDataResponse, offlinetime_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiGetDataResponse, gameid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiGetDataResponse, levelarr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiGetDataResponse, hp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiSignQueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiSignQueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiSignQueryResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiSignQueryResponse, signtoday_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiSignQueryResponse, signday_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiSignRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiSignResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiSignResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFreeDrawQueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFreeDrawQueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFreeDrawQueryResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFreeDrawQueryResponse, freedrawcount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFreeDrawRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFreeDrawResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFreeDrawResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFreeDrawResponse, giftindex_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFreeDrawResponse, freedrawtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFlyQueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFlyQueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFlyQueryResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFlyQueryResponse, flycount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFlyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFlyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFlyResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFlyResponse, giftindex_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiFlyResponse, flytime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiOfflineCoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiOfflineCoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiOfflineCoinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiOfflineCoinResponse, offlinetime_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiOfflineCoinResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiBuySkinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiBuySkinRequest, inkid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiBuySkinRequest, cupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiBuySkinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiBuySkinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiBuySkinResponse, inkid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiBuySkinResponse, cupid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiBuySkinResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiUseSkinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiUseSkinRequest, inkid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiUseSkinRequest, cupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiUseSkinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiUseSkinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiUseSkinResponse, inkid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiUseSkinResponse, cupid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiStartRequest, section_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiStartRequest, level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiStartResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiStartResponse, section_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiStartResponse, level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiResultRequest, section_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiResultRequest, level_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiResultRequest, star_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiResultResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiResultResponse, section_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiResultResponse, level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelCoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelCoinRequest, section_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelCoinRequest, level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelCoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelCoinResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelCoinResponse, section_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelCoinResponse, level_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelCoinResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelUnlockRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelUnlockRequest, section_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelUnlockRequest, level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelUnlockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelUnlockResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelUnlockResponse, section_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelUnlockResponse, level_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelUnlockResponse, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiAddHpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiAddHpRequest, hp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiAddHpResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiAddHpResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiAddHpResponse, hp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelStartResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelResultRequest, score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::HuanlemaomibeiLevelResultResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangItem, id_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangItem, num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangPig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangPig, id_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangPig, data_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangPig, createtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangBreedPig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangBreedPig, id_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangBreedPig, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangUsu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangUsu, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangFood, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangFood, id_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangFood, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangTask, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangTask, id_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangTask, index_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangTask, count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataResponse, code_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataResponse, userid_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataResponse, itemarr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataResponse, farmlv_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataResponse, farmlvname_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataResponse, farmlvexp_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataResponse, farmlvexpcur_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataResponse, awardnum_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataResponse, pigarr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataResponse, breedpigarr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataResponse, usuarr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataResponse, foodarr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataResponse, taskarr_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangGetDataResponse, gameid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddExpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddExpRequest, exp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddExpResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddExpResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddLevelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddLevelRequest, farmlv_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddLevelRequest, farmlvname_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddLevelRequest, farmlvexpcur_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddLevelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddLevelResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddCoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddCoinRequest, coin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddCoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddCoinResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddDiamondRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddDiamondRequest, diamond_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddDiamondResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddDiamondResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddItemRequest, id_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddItemRequest, num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddItemResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddPigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddPigRequest, id_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddPigRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddPigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddPigResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangDelPigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangDelPigRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangDelPigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangDelPigResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddBreedPigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddBreedPigRequest, id_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddBreedPigRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddBreedPigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddBreedPigResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangDelBreedPigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangDelBreedPigRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangDelBreedPigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangDelBreedPigResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddUsuRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddUsuRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddUsuResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddUsuResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddFoodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddFoodRequest, id_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddFoodRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddFoodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddFoodResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangDelFoodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangDelFoodRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangDelFoodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangDelFoodResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddTaskRequest, id_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddTaskRequest, index_),
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddTaskRequest, count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddTaskResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAddTaskResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAwardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAwardResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangAwardResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangStartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangStartResponse, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangResultRequest, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gamepb::YangzhunongchangResultResponse, code_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gamepb::KickPush)},
  { 6, -1, sizeof(::gamepb::LoginRequest)},
  { 17, -1, sizeof(::gamepb::LoginResponse)},
  { 31, -1, sizeof(::gamepb::RoundShareRequest)},
  { 36, -1, sizeof(::gamepb::RoundShareResponse)},
  { 42, -1, sizeof(::gamepb::RoundStartRequest)},
  { 47, -1, sizeof(::gamepb::RoundStartResponse)},
  { 53, -1, sizeof(::gamepb::RoundResultRequest)},
  { 60, -1, sizeof(::gamepb::RoundResultResponse)},
  { 66, -1, sizeof(::gamepb::RankUser)},
  { 75, -1, sizeof(::gamepb::GetLevelRankRequest)},
  { 81, -1, sizeof(::gamepb::GetLevelRankResponse)},
  { 90, -1, sizeof(::gamepb::GetScoreRankRequest)},
  { 96, -1, sizeof(::gamepb::GetScoreRankResponse)},
  { 105, -1, sizeof(::gamepb::GetMedalRankRequest)},
  { 111, -1, sizeof(::gamepb::GetMedalRankResponse)},
  { 120, -1, sizeof(::gamepb::DaxiguaGetDataRequest)},
  { 125, -1, sizeof(::gamepb::DaxiguaGetDataResponse)},
  { 133, -1, sizeof(::gamepb::DaxiguaStartRequest)},
  { 138, -1, sizeof(::gamepb::DaxiguaStartResponse)},
  { 144, -1, sizeof(::gamepb::DaxiguaResultRequest)},
  { 151, -1, sizeof(::gamepb::DaxiguaResultResponse)},
  { 157, -1, sizeof(::gamepb::BpbxqGetDataRequest)},
  { 162, -1, sizeof(::gamepb::BpbxqGetDataResponse)},
  { 175, -1, sizeof(::gamepb::BpbxqDaySignRequest)},
  { 180, -1, sizeof(::gamepb::BpbxqDaySignResponse)},
  { 190, -1, sizeof(::gamepb::BpbxqBuySkinRequest)},
  { 196, -1, sizeof(::gamepb::BpbxqBuySkinResponse)},
  { 204, -1, sizeof(::gamepb::BpbxqUseSkinRequest)},
  { 210, -1, sizeof(::gamepb::BpbxqUseSkinResponse)},
  { 217, -1, sizeof(::gamepb::BpbxqPickCoinRequest)},
  { 223, -1, sizeof(::gamepb::BpbxqPickCoinResponse)},
  { 230, -1, sizeof(::gamepb::BpbxqReviveRequest)},
  { 235, -1, sizeof(::gamepb::BpbxqReviveResponse)},
  { 242, -1, sizeof(::gamepb::BpbxqDieflyRequest)},
  { 247, -1, sizeof(::gamepb::BpbxqDieflyResponse)},
  { 254, -1, sizeof(::gamepb::BpbxqRewardRequest)},
  { 259, -1, sizeof(::gamepb::BpbxqRewardResponse)},
  { 266, -1, sizeof(::gamepb::BpbxqStartRequest)},
  { 271, -1, sizeof(::gamepb::BpbxqStartResponse)},
  { 277, -1, sizeof(::gamepb::BpbxqResultRequest)},
  { 283, -1, sizeof(::gamepb::BpbxqResultResponse)},
  { 289, -1, sizeof(::gamepb::CaichengyuGetDataRequest)},
  { 294, -1, sizeof(::gamepb::CaichengyuGetDataResponse)},
  { 311, -1, sizeof(::gamepb::CaichengyuStartRequest)},
  { 316, -1, sizeof(::gamepb::CaichengyuStartResponse)},
  { 325, -1, sizeof(::gamepb::CaichengyuResultRequest)},
  { 331, -1, sizeof(::gamepb::CaichengyuResultResponse)},
  { 337, -1, sizeof(::gamepb::CaichengyuResetHpRequest)},
  { 342, -1, sizeof(::gamepb::CaichengyuResetHpResponse)},
  { 350, -1, sizeof(::gamepb::CaichengyuUpgradeRoleRequest)},
  { 355, -1, sizeof(::gamepb::CaichengyuUpgradeRoleResponse)},
  { 362, -1, sizeof(::gamepb::CaichengyuUpgradeBuildRequest)},
  { 367, -1, sizeof(::gamepb::CaichengyuUpgradeBuildResponse)},
  { 374, -1, sizeof(::gamepb::CaichengyuGetHpRequest)},
  { 379, -1, sizeof(::gamepb::CaichengyuGetHpResponse)},
  { 386, -1, sizeof(::gamepb::CaichengyuTipRequest)},
  { 391, -1, sizeof(::gamepb::CaichengyuTipResponse)},
  { 399, -1, sizeof(::gamepb::CaichengyuGetTipRequest)},
  { 404, -1, sizeof(::gamepb::CaichengyuGetTipResponse)},
  { 411, -1, sizeof(::gamepb::FangkuainiaoGetDataRequest)},
  { 416, -1, sizeof(::gamepb::FangkuainiaoGetDataResponse)},
  { 431, -1, sizeof(::gamepb::FangkuainiaoBuySkinRequest)},
  { 437, -1, sizeof(::gamepb::FangkuainiaoBuySkinResponse)},
  { 445, -1, sizeof(::gamepb::FangkuainiaoUseSkinRequest)},
  { 451, -1, sizeof(::gamepb::FangkuainiaoUseSkinResponse)},
  { 458, -1, sizeof(::gamepb::FangkuainiaoDaySignRequest)},
  { 463, -1, sizeof(::gamepb::FangkuainiaoDaySignResponse)},
  { 471, -1, sizeof(::gamepb::FangkuainiaoGetCoinRequest)},
  { 476, -1, sizeof(::gamepb::FangkuainiaoGetCoinResponse)},
  { 483, -1, sizeof(::gamepb::FangkuainiaoGetInvincibleCoinRequest)},
  { 489, -1, sizeof(::gamepb::FangkuainiaoGetInvincibleCoinResponse)},
  { 496, -1, sizeof(::gamepb::FangkuainiaoGetLevelCoinRequest)},
  { 502, -1, sizeof(::gamepb::FangkuainiaoGetLevelCoinResponse)},
  { 509, -1, sizeof(::gamepb::FangkuainiaoStartRequest)},
  { 514, -1, sizeof(::gamepb::FangkuainiaoStartResponse)},
  { 520, -1, sizeof(::gamepb::FangkuainiaoResultRequest)},
  { 526, -1, sizeof(::gamepb::FangkuainiaoResultResponse)},
  { 532, -1, sizeof(::gamepb::GongjianchuanshuGetDataRequest)},
  { 537, -1, sizeof(::gamepb::GongjianchuanshuGetDataResponse)},
  { 549, -1, sizeof(::gamepb::GongjianchuanshuAwardCoinRequest)},
  { 555, -1, sizeof(::gamepb::GongjianchuanshuAwardCoinResponse)},
  { 562, -1, sizeof(::gamepb::GongjianchuanshuUnlockSkinRequest)},
  { 568, -1, sizeof(::gamepb::GongjianchuanshuUnlockSkinResponse)},
  { 575, -1, sizeof(::gamepb::GongjianchuanshuUseSkinRequest)},
  { 581, -1, sizeof(::gamepb::GongjianchuanshuUseSkinResponse)},
  { 587, -1, sizeof(::gamepb::GongjianchuanshuStartRequest)},
  { 592, -1, sizeof(::gamepb::GongjianchuanshuStartResponse)},
  { 598, -1, sizeof(::gamepb::GongjianchuanshuResultRequest)},
  { 604, -1, sizeof(::gamepb::GongjianchuanshuResultResponse)},
  { 610, -1, sizeof(::gamepb::GongjianchuanshuLevelStartRequest)},
  { 615, -1, sizeof(::gamepb::GongjianchuanshuLevelStartResponse)},
  { 621, -1, sizeof(::gamepb::GongjianchuanshuLevelResultRequest)},
  { 627, -1, sizeof(::gamepb::GongjianchuanshuLevelResultResponse)},
  { 633, -1, sizeof(::gamepb::GongjianchuanshuLevelPassRequest)},
  { 639, -1, sizeof(::gamepb::GongjianchuanshuLevelPassResponse)},
  { 645, -1, sizeof(::gamepb::PaopaolongGetDataRequest)},
  { 650, -1, sizeof(::gamepb::PaopaolongLevel)},
  { 659, -1, sizeof(::gamepb::PaopaolongGetDataResponse)},
  { 678, -1, sizeof(::gamepb::PaopaolongUseItemRequest)},
  { 684, -1, sizeof(::gamepb::PaopaolongUseItemResponse)},
  { 691, -1, sizeof(::gamepb::PaopaolongStartRequest)},
  { 697, -1, sizeof(::gamepb::PaopaolongStartResponse)},
  { 704, -1, sizeof(::gamepb::PaopaolongResultRequest)},
  { 714, -1, sizeof(::gamepb::PaopaolongResultResponse)},
  { 721, -1, sizeof(::gamepb::PaopaolongFreeDrawRequest)},
  { 726, -1, sizeof(::gamepb::PaopaolongFreeDrawResponse)},
  { 734, -1, sizeof(::gamepb::PaopaolongCostDrawRequest)},
  { 739, -1, sizeof(::gamepb::PaopaolongCostDrawResponse)},
  { 747, -1, sizeof(::gamepb::PaopaolongSignRequest)},
  { 752, -1, sizeof(::gamepb::PaopaolongSignResponse)},
  { 758, -1, sizeof(::gamepb::PaopaolongShopFreeCoinRequest)},
  { 763, -1, sizeof(::gamepb::PaopaolongShopFreeCoinResponse)},
  { 770, -1, sizeof(::gamepb::PaopaolongShopFreeCoin2Request)},
  { 775, -1, sizeof(::gamepb::PaopaolongShopFreeCoin2Response)},
  { 782, -1, sizeof(::gamepb::PaopaolongShopBuyRequest)},
  { 788, -1, sizeof(::gamepb::PaopaolongShopBuyResponse)},
  { 796, -1, sizeof(::gamepb::PaopaolongNewPackRequest)},
  { 801, -1, sizeof(::gamepb::PaopaolongNewPackResponse)},
  { 807, -1, sizeof(::gamepb::TanchishedazuozhanGetDataRequest)},
  { 812, -1, sizeof(::gamepb::TanchishedazuozhanGetDataResponse)},
  { 822, -1, sizeof(::gamepb::TanchishedazuozhanStartRequest)},
  { 828, -1, sizeof(::gamepb::TanchishedazuozhanStartResponse)},
  { 834, -1, sizeof(::gamepb::TanchishedazuozhanResultRequest)},
  { 842, -1, sizeof(::gamepb::TanchishedazuozhanResultResponse)},
  { 848, -1, sizeof(::gamepb::TanchishedazuozhanBuySkinRequest)},
  { 854, -1, sizeof(::gamepb::TanchishedazuozhanBuySkinResponse)},
  { 863, -1, sizeof(::gamepb::TanchishedazuozhanUseSkinRequest)},
  { 869, -1, sizeof(::gamepb::TanchishedazuozhanUseSkinResponse)},
  { 876, -1, sizeof(::gamepb::TanchishedazuozhanGetCoinRequest)},
  { 882, -1, sizeof(::gamepb::TanchishedazuozhanGetCoinResponse)},
  { 889, -1, sizeof(::gamepb::TiantianpaokuGetDataRequest)},
  { 894, -1, sizeof(::gamepb::TiantianpaokuGetDataResponse)},
  { 904, -1, sizeof(::gamepb::TiantianpaokuGetCoinRequest)},
  { 910, -1, sizeof(::gamepb::TiantianpaokuGetCoinResponse)},
  { 917, -1, sizeof(::gamepb::TiantianpaokuBuySkinRequest)},
  { 923, -1, sizeof(::gamepb::TiantianpaokuBuySkinResponse)},
  { 931, -1, sizeof(::gamepb::TiantianpaokuUseSkinRequest)},
  { 937, -1, sizeof(::gamepb::TiantianpaokuUseSkinResponse)},
  { 944, -1, sizeof(::gamepb::TiantianpaokuStartRequest)},
  { 949, -1, sizeof(::gamepb::TiantianpaokuStartResponse)},
  { 955, -1, sizeof(::gamepb::TiantianpaokuResultRequest)},
  { 961, -1, sizeof(::gamepb::TiantianpaokuResultResponse)},
  { 967, -1, sizeof(::gamepb::HuanlemaomibeiGetDataRequest)},
  { 972, -1, sizeof(::gamepb::HuanlemaomibeiLevel)},
  { 982, -1, sizeof(::gamepb::HuanlemaomibeiGetDataResponse)},
  { 998, -1, sizeof(::gamepb::HuanlemaomibeiSignQueryRequest)},
  { 1003, -1, sizeof(::gamepb::HuanlemaomibeiSignQueryResponse)},
  { 1011, -1, sizeof(::gamepb::HuanlemaomibeiSignRequest)},
  { 1016, -1, sizeof(::gamepb::HuanlemaomibeiSignResponse)},
  { 1022, -1, sizeof(::gamepb::HuanlemaomibeiFreeDrawQueryRequest)},
  { 1027, -1, sizeof(::gamepb::HuanlemaomibeiFreeDrawQueryResponse)},
  { 1034, -1, sizeof(::gamepb::HuanlemaomibeiFreeDrawRequest)},
  { 1039, -1, sizeof(::gamepb::HuanlemaomibeiFreeDrawResponse)},
  { 1047, -1, sizeof(::gamepb::HuanlemaomibeiFlyQueryRequest)},
  { 1052, -1, sizeof(::gamepb::HuanlemaomibeiFlyQueryResponse)},
  { 1059, -1, sizeof(::gamepb::HuanlemaomibeiFlyRequest)},
  { 1064, -1, sizeof(::gamepb::HuanlemaomibeiFlyResponse)},
  { 1072, -1, sizeof(::gamepb::HuanlemaomibeiOfflineCoinRequest)},
  { 1077, -1, sizeof(::gamepb::HuanlemaomibeiOfflineCoinResponse)},
  { 1085, -1, sizeof(::gamepb::HuanlemaomibeiBuySkinRequest)},
  { 1092, -1, sizeof(::gamepb::HuanlemaomibeiBuySkinResponse)},
  { 1101, -1, sizeof(::gamepb::HuanlemaomibeiUseSkinRequest)},
  { 1108, -1, sizeof(::gamepb::HuanlemaomibeiUseSkinResponse)},
  { 1116, -1, sizeof(::gamepb::HuanlemaomibeiStartRequest)},
  { 1123, -1, sizeof(::gamepb::HuanlemaomibeiStartResponse)},
  { 1131, -1, sizeof(::gamepb::HuanlemaomibeiResultRequest)},
  { 1139, -1, sizeof(::gamepb::HuanlemaomibeiResultResponse)},
  { 1147, -1, sizeof(::gamepb::HuanlemaomibeiLevelCoinRequest)},
  { 1154, -1, sizeof(::gamepb::HuanlemaomibeiLevelCoinResponse)},
  { 1163, -1, sizeof(::gamepb::HuanlemaomibeiLevelUnlockRequest)},
  { 1170, -1, sizeof(::gamepb::HuanlemaomibeiLevelUnlockResponse)},
  { 1179, -1, sizeof(::gamepb::HuanlemaomibeiAddHpRequest)},
  { 1185, -1, sizeof(::gamepb::HuanlemaomibeiAddHpResponse)},
  { 1192, -1, sizeof(::gamepb::HuanlemaomibeiLevelStartRequest)},
  { 1197, -1, sizeof(::gamepb::HuanlemaomibeiLevelStartResponse)},
  { 1203, -1, sizeof(::gamepb::HuanlemaomibeiLevelResultRequest)},
  { 1209, -1, sizeof(::gamepb::HuanlemaomibeiLevelResultResponse)},
  { 1215, -1, sizeof(::gamepb::YangzhunongchangItem)},
  { 1222, -1, sizeof(::gamepb::YangzhunongchangPig)},
  { 1230, -1, sizeof(::gamepb::YangzhunongchangBreedPig)},
  { 1237, -1, sizeof(::gamepb::YangzhunongchangUsu)},
  { 1243, -1, sizeof(::gamepb::YangzhunongchangFood)},
  { 1250, -1, sizeof(::gamepb::YangzhunongchangTask)},
  { 1258, -1, sizeof(::gamepb::YangzhunongchangGetDataRequest)},
  { 1263, -1, sizeof(::gamepb::YangzhunongchangGetDataResponse)},
  { 1282, -1, sizeof(::gamepb::YangzhunongchangAddExpRequest)},
  { 1288, -1, sizeof(::gamepb::YangzhunongchangAddExpResponse)},
  { 1294, -1, sizeof(::gamepb::YangzhunongchangAddLevelRequest)},
  { 1302, -1, sizeof(::gamepb::YangzhunongchangAddLevelResponse)},
  { 1308, -1, sizeof(::gamepb::YangzhunongchangAddCoinRequest)},
  { 1314, -1, sizeof(::gamepb::YangzhunongchangAddCoinResponse)},
  { 1320, -1, sizeof(::gamepb::YangzhunongchangAddDiamondRequest)},
  { 1326, -1, sizeof(::gamepb::YangzhunongchangAddDiamondResponse)},
  { 1332, -1, sizeof(::gamepb::YangzhunongchangAddItemRequest)},
  { 1339, -1, sizeof(::gamepb::YangzhunongchangAddItemResponse)},
  { 1345, -1, sizeof(::gamepb::YangzhunongchangAddPigRequest)},
  { 1352, -1, sizeof(::gamepb::YangzhunongchangAddPigResponse)},
  { 1358, -1, sizeof(::gamepb::YangzhunongchangDelPigRequest)},
  { 1364, -1, sizeof(::gamepb::YangzhunongchangDelPigResponse)},
  { 1370, -1, sizeof(::gamepb::YangzhunongchangAddBreedPigRequest)},
  { 1377, -1, sizeof(::gamepb::YangzhunongchangAddBreedPigResponse)},
  { 1383, -1, sizeof(::gamepb::YangzhunongchangDelBreedPigRequest)},
  { 1389, -1, sizeof(::gamepb::YangzhunongchangDelBreedPigResponse)},
  { 1395, -1, sizeof(::gamepb::YangzhunongchangAddUsuRequest)},
  { 1401, -1, sizeof(::gamepb::YangzhunongchangAddUsuResponse)},
  { 1407, -1, sizeof(::gamepb::YangzhunongchangAddFoodRequest)},
  { 1414, -1, sizeof(::gamepb::YangzhunongchangAddFoodResponse)},
  { 1420, -1, sizeof(::gamepb::YangzhunongchangDelFoodRequest)},
  { 1426, -1, sizeof(::gamepb::YangzhunongchangDelFoodResponse)},
  { 1432, -1, sizeof(::gamepb::YangzhunongchangAddTaskRequest)},
  { 1440, -1, sizeof(::gamepb::YangzhunongchangAddTaskResponse)},
  { 1446, -1, sizeof(::gamepb::YangzhunongchangAwardRequest)},
  { 1451, -1, sizeof(::gamepb::YangzhunongchangAwardResponse)},
  { 1457, -1, sizeof(::gamepb::YangzhunongchangStartRequest)},
  { 1462, -1, sizeof(::gamepb::YangzhunongchangStartResponse)},
  { 1468, -1, sizeof(::gamepb::YangzhunongchangResultRequest)},
  { 1474, -1, sizeof(::gamepb::YangzhunongchangResultResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_KickPush_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_LoginRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_LoginResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_RoundShareRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_RoundShareResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_RoundStartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_RoundStartResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_RoundResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_RoundResultResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_RankUser_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GetLevelRankRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GetLevelRankResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GetScoreRankRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GetScoreRankResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GetMedalRankRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GetMedalRankResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_DaxiguaGetDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_DaxiguaGetDataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_DaxiguaStartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_DaxiguaStartResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_DaxiguaResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_DaxiguaResultResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqGetDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqGetDataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqDaySignRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqDaySignResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqBuySkinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqBuySkinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqUseSkinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqUseSkinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqPickCoinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqPickCoinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqReviveRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqReviveResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqDieflyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqDieflyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqRewardRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqRewardResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqStartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqStartResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_BpbxqResultResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuGetDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuGetDataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuStartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuStartResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuResultResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuResetHpRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuResetHpResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuUpgradeRoleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuUpgradeRoleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuUpgradeBuildRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuUpgradeBuildResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuGetHpRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuGetHpResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuTipRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuTipResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuGetTipRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_CaichengyuGetTipResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoGetDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoGetDataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoBuySkinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoBuySkinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoUseSkinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoUseSkinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoDaySignRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoDaySignResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoGetCoinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoGetCoinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoGetInvincibleCoinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoGetInvincibleCoinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoGetLevelCoinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoGetLevelCoinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoStartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoStartResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_FangkuainiaoResultResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuGetDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuGetDataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuAwardCoinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuAwardCoinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuUnlockSkinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuUnlockSkinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuUseSkinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuUseSkinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuStartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuStartResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuResultResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuLevelStartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuLevelStartResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuLevelResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuLevelResultResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuLevelPassRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_GongjianchuanshuLevelPassResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongGetDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongLevel_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongGetDataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongUseItemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongUseItemResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongStartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongStartResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongResultResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongFreeDrawRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongFreeDrawResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongCostDrawRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongCostDrawResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongSignRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongSignResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongShopFreeCoinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongShopFreeCoinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongShopFreeCoin2Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongShopFreeCoin2Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongShopBuyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongShopBuyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongNewPackRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_PaopaolongNewPackResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TanchishedazuozhanGetDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TanchishedazuozhanGetDataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TanchishedazuozhanStartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TanchishedazuozhanStartResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TanchishedazuozhanResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TanchishedazuozhanResultResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TanchishedazuozhanBuySkinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TanchishedazuozhanBuySkinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TanchishedazuozhanUseSkinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TanchishedazuozhanUseSkinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TanchishedazuozhanGetCoinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TanchishedazuozhanGetCoinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TiantianpaokuGetDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TiantianpaokuGetDataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TiantianpaokuGetCoinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TiantianpaokuGetCoinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TiantianpaokuBuySkinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TiantianpaokuBuySkinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TiantianpaokuUseSkinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TiantianpaokuUseSkinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TiantianpaokuStartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TiantianpaokuStartResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TiantianpaokuResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_TiantianpaokuResultResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiGetDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiLevel_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiGetDataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiSignQueryRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiSignQueryResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiSignRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiSignResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiFreeDrawQueryRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiFreeDrawQueryResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiFreeDrawRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiFreeDrawResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiFlyQueryRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiFlyQueryResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiFlyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiFlyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiOfflineCoinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiOfflineCoinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiBuySkinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiBuySkinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiUseSkinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiUseSkinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiStartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiStartResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiResultResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiLevelCoinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiLevelCoinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiLevelUnlockRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiLevelUnlockResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiAddHpRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiAddHpResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiLevelStartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiLevelStartResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiLevelResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_HuanlemaomibeiLevelResultResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangPig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangBreedPig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangUsu_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangFood_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangTask_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangGetDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangGetDataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddExpRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddExpResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddLevelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddLevelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddCoinRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddCoinResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddDiamondRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddDiamondResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddItemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddItemResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddPigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddPigResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangDelPigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangDelPigResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddBreedPigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddBreedPigResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangDelBreedPigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangDelBreedPigResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddUsuRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddUsuResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddFoodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddFoodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangDelFoodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangDelFoodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddTaskRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAddTaskResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAwardRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangAwardResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangStartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangStartResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gamepb::_YangzhunongchangResultResponse_default_instance_),
};

const char descriptor_table_protodef_gamepb_2fgamepb_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023gamepb/gamepb.proto\022\006gamepb\"\032\n\010KickPus"
  "h\022\016\n\006Reason\030\001 \001(\t\"{\n\014LoginRequest\022\016\n\006Ope"
  "nid\030\001 \001(\t\022\020\n\010Nickname\030\002 \001(\t\022\016\n\006Avatar\030\003 "
  "\001(\t\022\r\n\005Token\030\004 \001(\t\022\014\n\004Time\030\005 \001(\005\022\034\n\024Plat"
  "formRegisterTime\030\006 \001(\003\"\233\001\n\rLoginResponse"
  "\022\014\n\004Code\030\001 \001(\005\022\016\n\006Userid\030\002 \001(\003\022\014\n\004Coin\030\003"
  " \001(\003\022\r\n\005Score\030\004 \001(\003\022\r\n\005Medal\030\005 \001(\003\022\017\n\007Di"
  "amond\030\006 \001(\003\022\022\n\nServerTime\030\007 \001(\003\022\r\n\005Level"
  "\030\010 \001(\003\022\014\n\004Gold\030\t \001(\003\"\023\n\021RoundShareReques"
  "t\"\"\n\022RoundShareResponse\022\014\n\004Code\030\001 \001(\005\"\023\n"
  "\021RoundStartRequest\"\"\n\022RoundStartResponse"
  "\022\014\n\004Code\030\001 \001(\005\"2\n\022RoundResultRequest\022\r\n\005"
  "Score\030\001 \001(\003\022\r\n\005Medal\030\002 \001(\003\"#\n\023RoundResul"
  "tResponse\022\014\n\004Code\030\001 \001(\005\"K\n\010RankUser\022\016\n\006O"
  "penid\030\001 \001(\t\022\020\n\010Nickname\030\002 \001(\t\022\016\n\006Avatar\030"
  "\003 \001(\t\022\r\n\005Score\030\004 \001(\003\"#\n\023GetLevelRankRequ"
  "est\022\014\n\004Type\030\001 \001(\005\"b\n\024GetLevelRankRespons"
  "e\022\014\n\004Code\030\001 \001(\005\022\037\n\005Users\030\002 \003(\0132\020.gamepb."
  "RankUser\022\014\n\004Rank\030\003 \001(\005\022\r\n\005Score\030\004 \001(\003\"#\n"
  "\023GetScoreRankRequest\022\014\n\004Type\030\001 \001(\005\"b\n\024Ge"
  "tScoreRankResponse\022\014\n\004Code\030\001 \001(\005\022\037\n\005User"
  "s\030\002 \003(\0132\020.gamepb.RankUser\022\014\n\004Rank\030\003 \001(\005\022"
  "\r\n\005Score\030\004 \001(\003\"#\n\023GetMedalRankRequest\022\014\n"
  "\004Type\030\001 \001(\005\"b\n\024GetMedalRankResponse\022\014\n\004C"
  "ode\030\001 \001(\005\022\037\n\005Users\030\002 \003(\0132\020.gamepb.RankUs"
  "er\022\014\n\004Rank\030\003 \001(\005\022\r\n\005Score\030\004 \001(\003\"\027\n\025Daxig"
  "uaGetDataRequest\"F\n\026DaxiguaGetDataRespon"
  "se\022\014\n\004Code\030\001 \001(\005\022\016\n\006Userid\030\002 \001(\003\022\016\n\006Game"
  "Id\030\003 \001(\005\"\025\n\023DaxiguaStartRequest\"$\n\024Daxig"
  "uaStartResponse\022\014\n\004Code\030\001 \001(\005\"4\n\024Daxigua"
  "ResultRequest\022\r\n\005Score\030\001 \001(\003\022\r\n\005Medal\030\002 "
  "\001(\003\"%\n\025DaxiguaResultResponse\022\014\n\004Code\030\001 \001"
  "(\005\"\025\n\023BpbxqGetDataRequest\"\241\001\n\024BpbxqGetDa"
  "taResponse\022\014\n\004Code\030\001 \001(\005\022\016\n\006Userid\030\002 \001(\003"
  "\022\014\n\004Skin\030\003 \001(\005\022\017\n\007SkinArr\030\004 \001(\t\022\024\n\014LastS"
  "ignTime\030\005 \001(\003\022\021\n\tSignTimes\030\006 \001(\003\022\023\n\013Sign"
  "TimeNow\030\007 \001(\003\022\016\n\006GameId\030\010 \001(\005\"\025\n\023BpbxqDa"
  "ySignRequest\"p\n\024BpbxqDaySignResponse\022\014\n\004"
  "Code\030\001 \001(\005\022\014\n\004Coin\030\002 \001(\003\022\024\n\014LastSignTime"
  "\030\003 \001(\003\022\021\n\tSignTimes\030\004 \001(\003\022\023\n\013SignTimeNow"
  "\030\005 \001(\003\"%\n\023BpbxqBuySkinRequest\022\016\n\006SkinId\030"
  "\001 \001(\005\"B\n\024BpbxqBuySkinResponse\022\014\n\004Code\030\001 "
  "\001(\005\022\016\n\006SkinId\030\002 \001(\005\022\014\n\004Coin\030\003 \001(\003\"%\n\023Bpb"
  "xqUseSkinRequest\022\016\n\006SkinId\030\001 \001(\005\"4\n\024Bpbx"
  "qUseSkinResponse\022\014\n\004Code\030\001 \001(\005\022\016\n\006SkinId"
  "\030\002 \001(\005\"$\n\024BpbxqPickCoinRequest\022\014\n\004Coin\030\001"
  " \001(\003\"3\n\025BpbxqPickCoinResponse\022\014\n\004Code\030\001 "
  "\001(\005\022\014\n\004Coin\030\002 \001(\003\"\024\n\022BpbxqReviveRequest\""
  "1\n\023BpbxqReviveResponse\022\014\n\004Code\030\001 \001(\005\022\014\n\004"
  "Coin\030\002 \001(\003\"\024\n\022BpbxqDieflyRequest\"1\n\023Bpbx"
  "qDieflyResponse\022\014\n\004Code\030\001 \001(\005\022\014\n\004Coin\030\002 "
  "\001(\003\"\024\n\022BpbxqRewardRequest\"1\n\023BpbxqReward"
  "Response\022\014\n\004Code\030\001 \001(\005\022\014\n\004Coin\030\002 \001(\003\"\023\n\021"
  "BpbxqStartRequest\"\"\n\022BpbxqStartResponse\022"
  "\014\n\004Code\030\001 \001(\005\"#\n\022BpbxqResultRequest\022\r\n\005S"
  "core\030\001 \001(\003\"#\n\023BpbxqResultResponse\022\014\n\004Cod"
  "e\030\001 \001(\005\"\032\n\030CaichengyuGetDataRequest\"\346\001\n\031"
  "CaichengyuGetDataResponse\022\014\n\004Code\030\001 \001(\005\022"
  "\016\n\006Userid\030\002 \001(\003\022\021\n\tRoleLevel\030\003 \001(\005\022\022\n\nBu"
  "ildLevel\030\004 \001(\005\022\r\n\005Level\030\005 \001(\003\022\021\n\tLevelTy"
  "pe\030\006 \001(\005\022\020\n\010LevelTip\030\007 \001(\005\022\n\n\002Hp\030\010 \001(\005\022\016"
  "\n\006HpDate\030\t \001(\003\022\022\n\nGetHpCount\030\n \001(\005\022\020\n\010Ge"
  "tHpDay\030\013 \001(\t\022\016\n\006GameId\030\014 \001(\005\"\030\n\026Caicheng"
  "yuStartRequest\"e\n\027CaichengyuStartRespons"
  "e\022\014\n\004Code\030\001 \001(\005\022\n\n\002Hp\030\002 \001(\005\022\020\n\010LevelTip\030"
  "\003 \001(\005\022\036\n\004User\030\004 \001(\0132\020.gamepb.RankUser\")\n"
  "\027CaichengyuResultRequest\022\016\n\006Answer\030\001 \001(\t"
  "\"(\n\030CaichengyuResultResponse\022\014\n\004Code\030\001 \001"
  "(\005\"\032\n\030CaichengyuResetHpRequest\"E\n\031Caiche"
  "ngyuResetHpResponse\022\014\n\004Code\030\001 \001(\005\022\n\n\002Hp\030"
  "\002 \001(\005\022\016\n\006HpDate\030\003 \001(\003\"\036\n\034CaichengyuUpgra"
  "deRoleRequest\"@\n\035CaichengyuUpgradeRoleRe"
  "sponse\022\014\n\004Code\030\001 \001(\005\022\021\n\tRoleLevel\030\002 \001(\005\""
  "\037\n\035CaichengyuUpgradeBuildRequest\"B\n\036Caic"
  "hengyuUpgradeBuildResponse\022\014\n\004Code\030\001 \001(\005"
  "\022\022\n\nBuildLevel\030\002 \001(\005\"\030\n\026CaichengyuGetHpR"
  "equest\"3\n\027CaichengyuGetHpResponse\022\014\n\004Cod"
  "e\030\001 \001(\005\022\n\n\002Hp\030\002 \001(\005\"\026\n\024CaichengyuTipRequ"
  "est\"C\n\025CaichengyuTipResponse\022\014\n\004Code\030\001 \001"
  "(\005\022\020\n\010LevelTip\030\002 \001(\005\022\n\n\002Hp\030\003 \001(\005\"\031\n\027Caic"
  "hengyuGetTipRequest\"4\n\030CaichengyuGetTipR"
  "esponse\022\014\n\004Code\030\001 \001(\005\022\n\n\002Hp\030\002 \001(\005\"\034\n\032Fan"
  "gkuainiaoGetDataRequest\"\311\001\n\033Fangkuainiao"
  "GetDataResponse\022\014\n\004Code\030\001 \001(\005\022\016\n\006Userid\030"
  "\002 \001(\003\022\016\n\006BirdId\030\003 \001(\005\022\017\n\007BirdArr\030\004 \001(\t\022\020"
  "\n\010SignTime\030\005 \001(\003\022\017\n\007SignDay\030\006 \001(\003\022\024\n\014Get"
  "GoldCount\030\007 \001(\005\022\023\n\013GetGoldTime\030\010 \001(\003\022\r\n\005"
  "Level\030\t \001(\003\022\016\n\006GameId\030\n \001(\005\",\n\032Fangkuain"
  "iaoBuySkinRequest\022\016\n\006BirdId\030\001 \001(\005\"I\n\033Fan"
  "gkuainiaoBuySkinResponse\022\014\n\004Code\030\001 \001(\005\022\016"
  "\n\006BirdId\030\002 \001(\005\022\014\n\004Coin\030\003 \001(\003\",\n\032Fangkuai"
  "niaoUseSkinRequest\022\016\n\006BirdId\030\001 \001(\005\";\n\033Fa"
  "ngkuainiaoUseSkinResponse\022\014\n\004Code\030\001 \001(\005\022"
  "\016\n\006BirdId\030\002 \001(\005\"\034\n\032FangkuainiaoDaySignRe"
  "quest\"K\n\033FangkuainiaoDaySignResponse\022\014\n\004"
  "Code\030\001 \001(\005\022\014\n\004Coin\030\002 \001(\003\022\020\n\010SignTime\030\004 \001"
  "(\003\"\034\n\032FangkuainiaoGetCoinRequest\"9\n\033Fang"
  "kuainiaoGetCoinResponse\022\014\n\004Code\030\001 \001(\005\022\014\n"
  "\004Coin\030\002 \001(\003\"4\n$FangkuainiaoGetInvincible"
  "CoinRequest\022\014\n\004Coin\030\001 \001(\003\"C\n%Fangkuainia"
  "oGetInvincibleCoinResponse\022\014\n\004Code\030\001 \001(\005"
  "\022\014\n\004Coin\030\002 \001(\003\"/\n\037FangkuainiaoGetLevelCo"
  "inRequest\022\014\n\004Coin\030\001 \001(\003\">\n FangkuainiaoG"
  "etLevelCoinResponse\022\014\n\004Code\030\001 \001(\005\022\014\n\004Coi"
  "n\030\002 \001(\003\"\032\n\030FangkuainiaoStartRequest\")\n\031F"
  "angkuainiaoStartResponse\022\014\n\004Code\030\001 \001(\005\"+"
  "\n\031FangkuainiaoResultRequest\022\016\n\006Result\030\001 "
  "\001(\005\"*\n\032FangkuainiaoResultResponse\022\014\n\004Cod"
  "e\030\001 \001(\005\" \n\036GongjianchuanshuGetDataReques"
  "t\"\220\001\n\037GongjianchuanshuGetDataResponse\022\014\n"
  "\004Code\030\001 \001(\005\022\016\n\006Userid\030\002 \001(\003\022\016\n\006SkinId\030\003 "
  "\001(\005\022\017\n\007SkinArr\030\004 \001(\t\022\017\n\007ShopArr\030\005 \001(\t\022\r\n"
  "\005Level\030\t \001(\003\022\016\n\006GameId\030\n \001(\005\"0\n Gongjian"
  "chuanshuAwardCoinRequest\022\014\n\004Coin\030\001 \001(\003\"\?"
  "\n!GongjianchuanshuAwardCoinResponse\022\014\n\004C"
  "ode\030\001 \001(\005\022\014\n\004Coin\030\002 \001(\003\"6\n!Gongjianchuan"
  "shuUnlockSkinRequest\022\021\n\tShopIndex\030\001 \001(\005\""
  "@\n\"GongjianchuanshuUnlockSkinResponse\022\014\n"
  "\004Code\030\001 \001(\005\022\014\n\004Coin\030\002 \001(\003\"3\n\036Gongjianchu"
  "anshuUseSkinRequest\022\021\n\tShopIndex\030\001 \001(\005\"/"
  "\n\037GongjianchuanshuUseSkinResponse\022\014\n\004Cod"
  "e\030\001 \001(\005\"\036\n\034GongjianchuanshuStartRequest\""
  "-\n\035GongjianchuanshuStartResponse\022\014\n\004Code"
  "\030\001 \001(\005\".\n\035GongjianchuanshuResultRequest\022"
  "\r\n\005Score\030\001 \001(\003\".\n\036GongjianchuanshuResult"
  "Response\022\014\n\004Code\030\001 \001(\005\"#\n!Gongjianchuans"
  "huLevelStartRequest\"2\n\"GongjianchuanshuL"
  "evelStartResponse\022\014\n\004Code\030\001 \001(\005\"3\n\"Gongj"
  "ianchuanshuLevelResultRequest\022\r\n\005Score\030\001"
  " \001(\003\"3\n#GongjianchuanshuLevelResultRespo"
  "nse\022\014\n\004Code\030\001 \001(\005\"1\n GongjianchuanshuLev"
  "elPassRequest\022\r\n\005Level\030\001 \001(\003\"1\n!Gongjian"
  "chuanshuLevelPassResponse\022\014\n\004Code\030\001 \001(\005\""
  "\032\n\030PaopaolongGetDataRequest\"J\n\017Paopaolon"
  "gLevel\022\r\n\005Level\030\001 \001(\003\022\013\n\003Sec\030\002 \001(\003\022\014\n\004Lo"
  "se\030\003 \001(\005\022\r\n\005Score\030\004 \001(\003\"\313\002\n\031PaopaolongGe"
  "tDataResponse\022\014\n\004Code\030\001 \001(\005\022\016\n\006Userid\030\002 "
  "\001(\003\022\r\n\005Level\030\003 \001(\003\022\017\n\007ItemArr\030\004 \001(\t\022\n\n\002H"
  "p\030\005 \001(\005\022\024\n\014FreedrawTime\030\006 \001(\003\022\027\n\017NewPack"
  "Redeemed\030\007 \001(\005\022\033\n\023ShopFreeDiamondTime\030\010 "
  "\001(\003\022\034\n\024ShopFreeDiamondTime2\030\t \001(\003\022\024\n\014Las"
  "tSignTime\030\n \001(\003\022\022\n\nSignedTime\030\013 \001(\005\022\025\n\rF"
  "irstSignTime\030\014 \001(\003\022)\n\010LevelArr\030\r \003(\0132\027.g"
  "amepb.PaopaolongLevel\022\016\n\006GameId\030\016 \001(\005\"*\n"
  "\030PaopaolongUseItemRequest\022\016\n\006ItemId\030\001 \001("
  "\005\"9\n\031PaopaolongUseItemResponse\022\014\n\004Code\030\001"
  " \001(\005\022\016\n\006ItemId\030\002 \001(\005\"\'\n\026PaopaolongStartR"
  "equest\022\r\n\005Level\030\001 \001(\003\"6\n\027PaopaolongStart"
  "Response\022\014\n\004Code\030\001 \001(\005\022\r\n\005Level\030\002 \001(\003\"b\n"
  "\027PaopaolongResultRequest\022\016\n\006Result\030\001 \001(\005"
  "\022\r\n\005Level\030\002 \001(\003\022\r\n\005Score\030\003 \001(\003\022\013\n\003Sec\030\004 "
  "\001(\003\022\014\n\004Star\030\005 \001(\003\"7\n\030PaopaolongResultRes"
  "ponse\022\014\n\004Code\030\001 \001(\005\022\r\n\005Level\030\002 \001(\003\"\033\n\031Pa"
  "opaolongFreeDrawRequest\"Q\n\032PaopaolongFre"
  "eDrawResponse\022\014\n\004Code\030\001 \001(\005\022\017\n\007LuckyId\030\002"
  " \001(\005\022\024\n\014FreedrawTime\030\003 \001(\003\"\033\n\031Paopaolong"
  "CostDrawRequest\"I\n\032PaopaolongCostDrawRes"
  "ponse\022\014\n\004Code\030\001 \001(\005\022\017\n\007LuckyId\030\002 \001(\005\022\014\n\004"
  "Coin\030\003 \001(\003\"\027\n\025PaopaolongSignRequest\"&\n\026P"
  "aopaolongSignResponse\022\014\n\004Code\030\001 \001(\005\"\037\n\035P"
  "aopaolongShopFreeCoinRequest\"<\n\036Paopaolo"
  "ngShopFreeCoinResponse\022\014\n\004Code\030\001 \001(\005\022\014\n\004"
  "Coin\030\002 \001(\003\" \n\036PaopaolongShopFreeCoin2Req"
  "uest\"=\n\037PaopaolongShopFreeCoin2Response\022"
  "\014\n\004Code\030\001 \001(\005\022\014\n\004Coin\030\002 \001(\003\"&\n\030Paopaolon"
  "gShopBuyRequest\022\n\n\002Id\030\001 \001(\005\"C\n\031Paopaolon"
  "gShopBuyResponse\022\014\n\004Code\030\001 \001(\005\022\014\n\004Coin\030\002"
  " \001(\003\022\n\n\002Id\030\003 \001(\005\"\032\n\030PaopaolongNewPackReq"
  "uest\")\n\031PaopaolongNewPackResponse\022\014\n\004Cod"
  "e\030\001 \001(\005\"\"\n TanchishedazuozhanGetDataRequ"
  "est\"r\n!TanchishedazuozhanGetDataResponse"
  "\022\014\n\004Code\030\001 \001(\005\022\016\n\006Userid\030\002 \001(\003\022\016\n\006SkinId"
  "\030\003 \001(\005\022\017\n\007SkinArr\030\004 \001(\t\022\016\n\006GameId\030\n \001(\005\""
  ".\n\036TanchishedazuozhanStartRequest\022\014\n\004Mod"
  "e\030\001 \001(\005\"/\n\037TanchishedazuozhanStartRespon"
  "se\022\014\n\004Code\030\001 \001(\005\"N\n\037TanchishedazuozhanRe"
  "sultRequest\022\016\n\006Result\030\001 \001(\005\022\014\n\004Mode\030\002 \001("
  "\005\022\r\n\005Score\030\003 \001(\003\"0\n TanchishedazuozhanRe"
  "sultResponse\022\014\n\004Code\030\001 \001(\005\"2\n Tanchished"
  "azuozhanBuySkinRequest\022\016\n\006SkinId\030\001 \001(\005\"`"
  "\n!TanchishedazuozhanBuySkinResponse\022\014\n\004C"
  "ode\030\001 \001(\005\022\016\n\006SkinId\030\002 \001(\005\022\014\n\004Coin\030\003 \001(\003\022"
  "\017\n\007Diamond\030\004 \001(\003\"2\n TanchishedazuozhanUs"
  "eSkinRequest\022\016\n\006SkinId\030\001 \001(\005\"A\n!Tanchish"
  "edazuozhanUseSkinResponse\022\014\n\004Code\030\001 \001(\005\022"
  "\016\n\006SkinId\030\002 \001(\005\"0\n TanchishedazuozhanGet"
  "CoinRequest\022\014\n\004Coin\030\001 \001(\003\"\?\n!Tanchisheda"
  "zuozhanGetCoinResponse\022\014\n\004Code\030\001 \001(\005\022\014\n\004"
  "Coin\030\002 \001(\003\"\035\n\033TiantianpaokuGetDataReques"
  "t\"m\n\034TiantianpaokuGetDataResponse\022\014\n\004Cod"
  "e\030\001 \001(\005\022\016\n\006Userid\030\002 \001(\003\022\016\n\006SkinId\030\003 \001(\005\022"
  "\017\n\007SkinArr\030\004 \001(\t\022\016\n\006GameId\030\n \001(\005\"+\n\033Tian"
  "tianpaokuGetCoinRequest\022\014\n\004Coin\030\001 \001(\003\":\n"
  "\034TiantianpaokuGetCoinResponse\022\014\n\004Code\030\001 "
  "\001(\005\022\014\n\004Coin\030\002 \001(\003\"-\n\033TiantianpaokuBuySki"
  "nRequest\022\016\n\006SkinId\030\001 \001(\005\"J\n\034Tiantianpaok"
  "uBuySkinResponse\022\014\n\004Code\030\001 \001(\005\022\016\n\006SkinId"
  "\030\002 \001(\005\022\014\n\004Coin\030\003 \001(\003\"-\n\033TiantianpaokuUse"
  "SkinRequest\022\016\n\006SkinId\030\001 \001(\005\"<\n\034Tiantianp"
  "aokuUseSkinResponse\022\014\n\004Code\030\001 \001(\005\022\016\n\006Ski"
  "nId\030\002 \001(\005\"\033\n\031TiantianpaokuStartRequest\"*"
  "\n\032TiantianpaokuStartResponse\022\014\n\004Code\030\001 \001"
  "(\005\"+\n\032TiantianpaokuResultRequest\022\r\n\005Scor"
  "e\030\001 \001(\003\"+\n\033TiantianpaokuResultResponse\022\014"
  "\n\004Code\030\001 \001(\005\"\036\n\034HuanlemaomibeiGetDataReq"
  "uest\"a\n\023HuanlemaomibeiLevel\022\017\n\007Section\030\001"
  " \001(\005\022\r\n\005Level\030\002 \001(\005\022\016\n\006Unlock\030\003 \001(\005\022\014\n\004S"
  "tar\030\004 \001(\005\022\014\n\004Coin\030\005 \001(\003\"\361\001\n\035Huanlemaomib"
  "eiGetDataResponse\022\014\n\004Code\030\001 \001(\005\022\016\n\006Useri"
  "d\030\002 \001(\003\022\024\n\014FreedrawTime\030\003 \001(\003\022\016\n\006InkArr\030"
  "\004 \001(\t\022\016\n\006CupArr\030\005 \001(\t\022\r\n\005InkId\030\006 \001(\005\022\r\n\005"
  "CupId\030\007 \001(\005\022\023\n\013OfflineTime\030\010 \001(\003\022\016\n\006Game"
  "Id\030\n \001(\005\022-\n\010LevelArr\030\013 \003(\0132\033.gamepb.Huan"
  "lemaomibeiLevel\022\n\n\002Hp\030\014 \001(\005\" \n\036Huanlemao"
  "mibeiSignQueryRequest\"S\n\037HuanlemaomibeiS"
  "ignQueryResponse\022\014\n\004Code\030\001 \001(\005\022\021\n\tSignTo"
  "day\030\002 \001(\005\022\017\n\007SignDay\030\003 \001(\005\"\033\n\031Huanlemaom"
  "ibeiSignRequest\"*\n\032HuanlemaomibeiSignRes"
  "ponse\022\014\n\004Code\030\001 \001(\005\"$\n\"HuanlemaomibeiFre"
  "eDrawQueryRequest\"J\n#HuanlemaomibeiFreeD"
  "rawQueryResponse\022\014\n\004Code\030\001 \001(\005\022\025\n\rFreedr"
  "awCount\030\002 \001(\003\"\037\n\035HuanlemaomibeiFreeDrawR"
  "equest\"W\n\036HuanlemaomibeiFreeDrawResponse"
  "\022\014\n\004Code\030\001 \001(\005\022\021\n\tGiftIndex\030\002 \001(\005\022\024\n\014Fre"
  "edrawTime\030\003 \001(\003\"\037\n\035HuanlemaomibeiFlyQuer"
  "yRequest\"@\n\036HuanlemaomibeiFlyQueryRespon"
  "se\022\014\n\004Code\030\001 \001(\005\022\020\n\010FlyCount\030\002 \001(\003\"\032\n\030Hu"
  "anlemaomibeiFlyRequest\"M\n\031Huanlemaomibei"
  "FlyResponse\022\014\n\004Code\030\001 \001(\005\022\021\n\tGiftIndex\030\002"
  " \001(\005\022\017\n\007FlyTime\030\003 \001(\003\"\"\n HuanlemaomibeiO"
  "fflineCoinRequest\"T\n!HuanlemaomibeiOffli"
  "neCoinResponse\022\014\n\004Code\030\001 \001(\005\022\023\n\013OfflineT"
  "ime\030\002 \001(\003\022\014\n\004Coin\030\003 \001(\003\"<\n\034Huanlemaomibe"
  "iBuySkinRequest\022\r\n\005InkId\030\001 \001(\005\022\r\n\005CupId\030"
  "\002 \001(\005\"Y\n\035HuanlemaomibeiBuySkinResponse\022\014"
  "\n\004Code\030\001 \001(\005\022\r\n\005InkId\030\002 \001(\005\022\r\n\005CupId\030\003 \001"
  "(\005\022\014\n\004Coin\030\004 \001(\003\"<\n\034HuanlemaomibeiUseSki"
  "nRequest\022\r\n\005InkId\030\001 \001(\005\022\r\n\005CupId\030\002 \001(\005\"K"
  "\n\035HuanlemaomibeiUseSkinResponse\022\014\n\004Code\030"
  "\001 \001(\005\022\r\n\005InkId\030\002 \001(\005\022\r\n\005CupId\030\003 \001(\005\"<\n\032H"
  "uanlemaomibeiStartRequest\022\017\n\007Section\030\001 \001"
  "(\005\022\r\n\005Level\030\002 \001(\005\"K\n\033HuanlemaomibeiStart"
  "Response\022\014\n\004Code\030\001 \001(\005\022\017\n\007Section\030\002 \001(\005\022"
  "\r\n\005Level\030\003 \001(\005\"K\n\033HuanlemaomibeiResultRe"
  "quest\022\017\n\007Section\030\001 \001(\005\022\r\n\005Level\030\002 \001(\005\022\014\n"
  "\004Star\030\003 \001(\005\"L\n\034HuanlemaomibeiResultRespo"
  "nse\022\014\n\004Code\030\001 \001(\005\022\017\n\007Section\030\002 \001(\005\022\r\n\005Le"
  "vel\030\003 \001(\005\"@\n\036HuanlemaomibeiLevelCoinRequ"
  "est\022\017\n\007Section\030\001 \001(\005\022\r\n\005Level\030\002 \001(\005\"]\n\037H"
  "uanlemaomibeiLevelCoinResponse\022\014\n\004Code\030\001"
  " \001(\005\022\017\n\007Section\030\002 \001(\005\022\r\n\005Level\030\003 \001(\005\022\014\n\004"
  "Coin\030\004 \001(\003\"B\n HuanlemaomibeiLevelUnlockR"
  "equest\022\017\n\007Section\030\001 \001(\005\022\r\n\005Level\030\002 \001(\005\"_"
  "\n!HuanlemaomibeiLevelUnlockResponse\022\014\n\004C"
  "ode\030\001 \001(\005\022\017\n\007Section\030\002 \001(\005\022\r\n\005Level\030\003 \001("
  "\005\022\014\n\004Coin\030\004 \001(\003\"(\n\032HuanlemaomibeiAddHpRe"
  "quest\022\n\n\002Hp\030\001 \001(\005\"7\n\033HuanlemaomibeiAddHp"
  "Response\022\014\n\004Code\030\001 \001(\005\022\n\n\002Hp\030\002 \001(\005\"!\n\037Hu"
  "anlemaomibeiLevelStartRequest\"0\n Huanlem"
  "aomibeiLevelStartResponse\022\014\n\004Code\030\001 \001(\005\""
  "1\n HuanlemaomibeiLevelResultRequest\022\r\n\005S"
  "core\030\001 \001(\003\"1\n!HuanlemaomibeiLevelResultR"
  "esponse\022\014\n\004Code\030\001 \001(\005\"/\n\024Yangzhunongchan"
  "gItem\022\n\n\002Id\030\001 \001(\005\022\013\n\003Num\030\002 \001(\005\"C\n\023Yangzh"
  "unongchangPig\022\n\n\002Id\030\001 \001(\t\022\014\n\004Data\030\002 \001(\t\022"
  "\022\n\nCreatetime\030\003 \001(\003\"4\n\030YangzhunongchangB"
  "reedPig\022\n\n\002Id\030\001 \001(\t\022\014\n\004Data\030\002 \001(\t\"!\n\023Yan"
  "gzhunongchangUsu\022\n\n\002Id\030\001 \001(\005\"0\n\024Yangzhun"
  "ongchangFood\022\n\n\002Id\030\001 \001(\t\022\014\n\004Data\030\002 \001(\t\"@"
  "\n\024YangzhunongchangTask\022\n\n\002Id\030\001 \001(\t\022\r\n\005In"
  "dex\030\002 \001(\005\022\r\n\005Count\030\003 \001(\t\" \n\036Yangzhunongc"
  "hangGetDataRequest\"\314\003\n\037YangzhunongchangG"
  "etDataResponse\022\014\n\004Code\030\001 \001(\005\022\016\n\006Userid\030\002"
  " \001(\003\022-\n\007ItemArr\030\003 \003(\0132\034.gamepb.Yangzhuno"
  "ngchangItem\022\016\n\006FarmLv\030\004 \001(\005\022\022\n\nFarmLvNam"
  "e\030\005 \001(\t\022\021\n\tFarmLvExp\030\006 \001(\005\022\024\n\014FarmLvExpC"
  "ur\030\007 \001(\005\022\020\n\010AwardNum\030\010 \001(\005\022+\n\006PigArr\030\t \003"
  "(\0132\033.gamepb.YangzhunongchangPig\0225\n\013Breed"
  "PigArr\030\n \003(\0132 .gamepb.YangzhunongchangBr"
  "eedPig\022+\n\006UsuArr\030\013 \003(\0132\033.gamepb.Yangzhun"
  "ongchangUsu\022-\n\007FoodArr\030\014 \003(\0132\034.gamepb.Ya"
  "ngzhunongchangFood\022-\n\007TaskArr\030\r \003(\0132\034.ga"
  "mepb.YangzhunongchangTask\022\016\n\006GameId\030\016 \001("
  "\005\",\n\035YangzhunongchangAddExpRequest\022\013\n\003Ex"
  "p\030\001 \001(\005\".\n\036YangzhunongchangAddExpRespons"
  "e\022\014\n\004Code\030\001 \001(\005\"[\n\037YangzhunongchangAddLe"
  "velRequest\022\016\n\006FarmLv\030\001 \001(\005\022\022\n\nFarmLvName"
  "\030\002 \001(\t\022\024\n\014FarmLvExpCur\030\003 \001(\005\"0\n Yangzhun"
  "ongchangAddLevelResponse\022\014\n\004Code\030\001 \001(\005\"."
  "\n\036YangzhunongchangAddCoinRequest\022\014\n\004Coin"
  "\030\001 \001(\003\"/\n\037YangzhunongchangAddCoinRespons"
  "e\022\014\n\004Code\030\001 \001(\005\"4\n!YangzhunongchangAddDi"
  "amondRequest\022\017\n\007Diamond\030\001 \001(\003\"2\n\"Yangzhu"
  "nongchangAddDiamondResponse\022\014\n\004Code\030\001 \001("
  "\005\"9\n\036YangzhunongchangAddItemRequest\022\n\n\002I"
  "d\030\001 \001(\005\022\013\n\003Num\030\002 \001(\005\"/\n\037Yangzhunongchang"
  "AddItemResponse\022\014\n\004Code\030\001 \001(\005\"9\n\035Yangzhu"
  "nongchangAddPigRequest\022\n\n\002Id\030\001 \001(\t\022\014\n\004Da"
  "ta\030\002 \001(\t\".\n\036YangzhunongchangAddPigRespon"
  "se\022\014\n\004Code\030\001 \001(\005\"+\n\035YangzhunongchangDelP"
  "igRequest\022\n\n\002Id\030\001 \001(\t\".\n\036Yangzhunongchan"
  "gDelPigResponse\022\014\n\004Code\030\001 \001(\005\">\n\"Yangzhu"
  "nongchangAddBreedPigRequest\022\n\n\002Id\030\001 \001(\t\022"
  "\014\n\004Data\030\002 \001(\t\"3\n#YangzhunongchangAddBree"
  "dPigResponse\022\014\n\004Code\030\001 \001(\005\"0\n\"Yangzhunon"
  "gchangDelBreedPigRequest\022\n\n\002Id\030\001 \001(\t\"3\n#"
  "YangzhunongchangDelBreedPigResponse\022\014\n\004C"
  "ode\030\001 \001(\005\"+\n\035YangzhunongchangAddUsuReque"
  "st\022\n\n\002Id\030\001 \001(\005\".\n\036YangzhunongchangAddUsu"
  "Response\022\014\n\004Code\030\001 \001(\005\":\n\036Yangzhunongcha"
  "ngAddFoodRequest\022\n\n\002Id\030\001 \001(\t\022\014\n\004Data\030\002 \001"
  "(\t\"/\n\037YangzhunongchangAddFoodResponse\022\014\n"
  "\004Code\030\001 \001(\005\",\n\036YangzhunongchangDelFoodRe"
  "quest\022\n\n\002Id\030\001 \001(\t\"/\n\037YangzhunongchangDel"
  "FoodResponse\022\014\n\004Code\030\001 \001(\005\"J\n\036Yangzhunon"
  "gchangAddTaskRequest\022\n\n\002Id\030\001 \001(\t\022\r\n\005Inde"
  "x\030\002 \001(\005\022\r\n\005Count\030\003 \001(\t\"/\n\037Yangzhunongcha"
  "ngAddTaskResponse\022\014\n\004Code\030\001 \001(\005\"\036\n\034Yangz"
  "hunongchangAwardRequest\"-\n\035Yangzhunongch"
  "angAwardResponse\022\014\n\004Code\030\001 \001(\005\"\036\n\034Yangzh"
  "unongchangStartRequest\"-\n\035Yangzhunongcha"
  "ngStartResponse\022\014\n\004Code\030\001 \001(\005\"/\n\035Yangzhu"
  "nongchangResultRequest\022\016\n\006Result\030\001 \001(\005\"."
  "\n\036YangzhunongchangResultResponse\022\014\n\004Code"
  "\030\001 \001(\005B\013Z\t./;gamepbb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_gamepb_2fgamepb_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gamepb_2fgamepb_2eproto = {
  false, false, 12987, descriptor_table_protodef_gamepb_2fgamepb_2eproto, "gamepb/gamepb.proto", 
  &descriptor_table_gamepb_2fgamepb_2eproto_once, nullptr, 0, 218,
  schemas, file_default_instances, TableStruct_gamepb_2fgamepb_2eproto::offsets,
  file_level_metadata_gamepb_2fgamepb_2eproto, file_level_enum_descriptors_gamepb_2fgamepb_2eproto, file_level_service_descriptors_gamepb_2fgamepb_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_gamepb_2fgamepb_2eproto_getter() {
  return &descriptor_table_gamepb_2fgamepb_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_gamepb_2fgamepb_2eproto(&descriptor_table_gamepb_2fgamepb_2eproto);
namespace gamepb {

// ===================================================================

class KickPush::_Internal {
 public:
};

KickPush::KickPush(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.KickPush)
}
KickPush::KickPush(const KickPush& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reason().empty()) {
    reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reason(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gamepb.KickPush)
}

void KickPush::SharedCtor() {
reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

KickPush::~KickPush() {
  // @@protoc_insertion_point(destructor:gamepb.KickPush)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void KickPush::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void KickPush::ArenaDtor(void* object) {
  KickPush* _this = reinterpret_cast< KickPush* >(object);
  (void)_this;
}
void KickPush::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void KickPush::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void KickPush::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.KickPush)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KickPush::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Reason = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.KickPush.Reason"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KickPush::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.KickPush)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Reason = 1;
  if (!this->reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.KickPush.Reason");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.KickPush)
  return target;
}

size_t KickPush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.KickPush)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Reason = 1;
  if (!this->reason().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reason());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KickPush::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.KickPush)
  GOOGLE_DCHECK_NE(&from, this);
  const KickPush* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KickPush>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.KickPush)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.KickPush)
    MergeFrom(*source);
  }
}

void KickPush::MergeFrom(const KickPush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.KickPush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.reason().empty()) {
    _internal_set_reason(from._internal_reason());
  }
}

void KickPush::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.KickPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KickPush::CopyFrom(const KickPush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.KickPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KickPush::IsInitialized() const {
  return true;
}

void KickPush::InternalSwap(KickPush* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &reason_, GetArenaForAllocation(),
      &other->reason_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata KickPush::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[0]);
}

// ===================================================================

class LoginRequest::_Internal {
 public:
};

LoginRequest::LoginRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  openid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_openid().empty()) {
    openid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_openid(), 
      GetArenaForAllocation());
  }
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nickname().empty()) {
    nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nickname(), 
      GetArenaForAllocation());
  }
  avatar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_avatar().empty()) {
    avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_avatar(), 
      GetArenaForAllocation());
  }
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token(), 
      GetArenaForAllocation());
  }
  ::memcpy(&platformregistertime_, &from.platformregistertime_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&platformregistertime_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:gamepb.LoginRequest)
}

void LoginRequest::SharedCtor() {
openid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
avatar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&platformregistertime_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&platformregistertime_)) + sizeof(time_));
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:gamepb.LoginRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoginRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  openid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::ArenaDtor(void* object) {
  LoginRequest* _this = reinterpret_cast< LoginRequest* >(object);
  (void)_this;
}
void LoginRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoginRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.LoginRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  openid_.ClearToEmpty();
  nickname_.ClearToEmpty();
  avatar_.ClearToEmpty();
  token_.ClearToEmpty();
  ::memset(&platformregistertime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&platformregistertime_)) + sizeof(time_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Openid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_openid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.LoginRequest.Openid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Nickname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_nickname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.LoginRequest.Nickname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Avatar = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_avatar();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.LoginRequest.Avatar"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Token = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.LoginRequest.Token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Time = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 PlatformRegisterTime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          platformregistertime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoginRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.LoginRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Openid = 1;
  if (!this->openid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_openid().data(), static_cast<int>(this->_internal_openid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.LoginRequest.Openid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_openid(), target);
  }

  // string Nickname = 2;
  if (!this->nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.LoginRequest.Nickname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nickname(), target);
  }

  // string Avatar = 3;
  if (!this->avatar().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar().data(), static_cast<int>(this->_internal_avatar().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.LoginRequest.Avatar");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_avatar(), target);
  }

  // string Token = 4;
  if (!this->token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.LoginRequest.Token");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_token(), target);
  }

  // int32 Time = 5;
  if (this->time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_time(), target);
  }

  // int64 PlatformRegisterTime = 6;
  if (this->platformregistertime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_platformregistertime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.LoginRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Openid = 1;
  if (!this->openid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_openid());
  }

  // string Nickname = 2;
  if (!this->nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // string Avatar = 3;
  if (!this->avatar().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar());
  }

  // string Token = 4;
  if (!this->token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // int64 PlatformRegisterTime = 6;
  if (this->platformregistertime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_platformregistertime());
  }

  // int32 Time = 5;
  if (this->time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_time());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoginRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.LoginRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.LoginRequest)
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.openid().empty()) {
    _internal_set_openid(from._internal_openid());
  }
  if (!from.nickname().empty()) {
    _internal_set_nickname(from._internal_nickname());
  }
  if (!from.avatar().empty()) {
    _internal_set_avatar(from._internal_avatar());
  }
  if (!from.token().empty()) {
    _internal_set_token(from._internal_token());
  }
  if (from.platformregistertime() != 0) {
    _internal_set_platformregistertime(from._internal_platformregistertime());
  }
  if (from.time() != 0) {
    _internal_set_time(from._internal_time());
  }
}

void LoginRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  return true;
}

void LoginRequest::InternalSwap(LoginRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &openid_, GetArenaForAllocation(),
      &other->openid_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &nickname_, GetArenaForAllocation(),
      &other->nickname_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &avatar_, GetArenaForAllocation(),
      &other->avatar_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &token_, GetArenaForAllocation(),
      &other->token_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoginRequest, time_)
      + sizeof(LoginRequest::time_)
      - PROTOBUF_FIELD_OFFSET(LoginRequest, platformregistertime_)>(
          reinterpret_cast<char*>(&platformregistertime_),
          reinterpret_cast<char*>(&other->platformregistertime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[1]);
}

// ===================================================================

class LoginResponse::_Internal {
 public:
};

LoginResponse::LoginResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.LoginResponse)
}
LoginResponse::LoginResponse(const LoginResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.LoginResponse)
}

void LoginResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&userid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(code_));
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:gamepb.LoginResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoginResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LoginResponse::ArenaDtor(void* object) {
  LoginResponse* _this = reinterpret_cast< LoginResponse* >(object);
  (void)_this;
}
void LoginResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoginResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.LoginResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Userid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Score = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Medal = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          medal_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Diamond = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          diamond_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 ServerTime = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          servertime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Level = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Gold = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          gold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoginResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.LoginResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_userid(), target);
  }

  // int64 Coin = 3;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_coin(), target);
  }

  // int64 Score = 4;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_score(), target);
  }

  // int64 Medal = 5;
  if (this->medal() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_medal(), target);
  }

  // int64 Diamond = 6;
  if (this->diamond() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_diamond(), target);
  }

  // int64 ServerTime = 7;
  if (this->servertime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_servertime(), target);
  }

  // int64 Level = 8;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_level(), target);
  }

  // int64 Gold = 9;
  if (this->gold() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(9, this->_internal_gold(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.LoginResponse)
  return target;
}

size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.LoginResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_userid());
  }

  // int64 Coin = 3;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int64 Score = 4;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  // int64 Medal = 5;
  if (this->medal() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_medal());
  }

  // int64 Diamond = 6;
  if (this->diamond() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_diamond());
  }

  // int64 ServerTime = 7;
  if (this->servertime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_servertime());
  }

  // int64 Level = 8;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_level());
  }

  // int64 Gold = 9;
  if (this->gold() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_gold());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoginResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.LoginResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.LoginResponse)
    MergeFrom(*source);
  }
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
  if (from.medal() != 0) {
    _internal_set_medal(from._internal_medal());
  }
  if (from.diamond() != 0) {
    _internal_set_diamond(from._internal_diamond());
  }
  if (from.servertime() != 0) {
    _internal_set_servertime(from._internal_servertime());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.gold() != 0) {
    _internal_set_gold(from._internal_gold());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void LoginResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse::IsInitialized() const {
  return true;
}

void LoginResponse::InternalSwap(LoginResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoginResponse, code_)
      + sizeof(LoginResponse::code_)
      - PROTOBUF_FIELD_OFFSET(LoginResponse, userid_)>(
          reinterpret_cast<char*>(&userid_),
          reinterpret_cast<char*>(&other->userid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[2]);
}

// ===================================================================

class RoundShareRequest::_Internal {
 public:
};

RoundShareRequest::RoundShareRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.RoundShareRequest)
}
RoundShareRequest::RoundShareRequest(const RoundShareRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.RoundShareRequest)
}

void RoundShareRequest::SharedCtor() {
}

RoundShareRequest::~RoundShareRequest() {
  // @@protoc_insertion_point(destructor:gamepb.RoundShareRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RoundShareRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RoundShareRequest::ArenaDtor(void* object) {
  RoundShareRequest* _this = reinterpret_cast< RoundShareRequest* >(object);
  (void)_this;
}
void RoundShareRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoundShareRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoundShareRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.RoundShareRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoundShareRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoundShareRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.RoundShareRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.RoundShareRequest)
  return target;
}

size_t RoundShareRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.RoundShareRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoundShareRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.RoundShareRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RoundShareRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RoundShareRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.RoundShareRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.RoundShareRequest)
    MergeFrom(*source);
  }
}

void RoundShareRequest::MergeFrom(const RoundShareRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.RoundShareRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RoundShareRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.RoundShareRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoundShareRequest::CopyFrom(const RoundShareRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.RoundShareRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoundShareRequest::IsInitialized() const {
  return true;
}

void RoundShareRequest::InternalSwap(RoundShareRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoundShareRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[3]);
}

// ===================================================================

class RoundShareResponse::_Internal {
 public:
};

RoundShareResponse::RoundShareResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.RoundShareResponse)
}
RoundShareResponse::RoundShareResponse(const RoundShareResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.RoundShareResponse)
}

void RoundShareResponse::SharedCtor() {
code_ = 0;
}

RoundShareResponse::~RoundShareResponse() {
  // @@protoc_insertion_point(destructor:gamepb.RoundShareResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RoundShareResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RoundShareResponse::ArenaDtor(void* object) {
  RoundShareResponse* _this = reinterpret_cast< RoundShareResponse* >(object);
  (void)_this;
}
void RoundShareResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoundShareResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoundShareResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.RoundShareResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoundShareResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoundShareResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.RoundShareResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.RoundShareResponse)
  return target;
}

size_t RoundShareResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.RoundShareResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoundShareResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.RoundShareResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RoundShareResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RoundShareResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.RoundShareResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.RoundShareResponse)
    MergeFrom(*source);
  }
}

void RoundShareResponse::MergeFrom(const RoundShareResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.RoundShareResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void RoundShareResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.RoundShareResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoundShareResponse::CopyFrom(const RoundShareResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.RoundShareResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoundShareResponse::IsInitialized() const {
  return true;
}

void RoundShareResponse::InternalSwap(RoundShareResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoundShareResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[4]);
}

// ===================================================================

class RoundStartRequest::_Internal {
 public:
};

RoundStartRequest::RoundStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.RoundStartRequest)
}
RoundStartRequest::RoundStartRequest(const RoundStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.RoundStartRequest)
}

void RoundStartRequest::SharedCtor() {
}

RoundStartRequest::~RoundStartRequest() {
  // @@protoc_insertion_point(destructor:gamepb.RoundStartRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RoundStartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RoundStartRequest::ArenaDtor(void* object) {
  RoundStartRequest* _this = reinterpret_cast< RoundStartRequest* >(object);
  (void)_this;
}
void RoundStartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoundStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoundStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.RoundStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoundStartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoundStartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.RoundStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.RoundStartRequest)
  return target;
}

size_t RoundStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.RoundStartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoundStartRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.RoundStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RoundStartRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RoundStartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.RoundStartRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.RoundStartRequest)
    MergeFrom(*source);
  }
}

void RoundStartRequest::MergeFrom(const RoundStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.RoundStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RoundStartRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.RoundStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoundStartRequest::CopyFrom(const RoundStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.RoundStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoundStartRequest::IsInitialized() const {
  return true;
}

void RoundStartRequest::InternalSwap(RoundStartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoundStartRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[5]);
}

// ===================================================================

class RoundStartResponse::_Internal {
 public:
};

RoundStartResponse::RoundStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.RoundStartResponse)
}
RoundStartResponse::RoundStartResponse(const RoundStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.RoundStartResponse)
}

void RoundStartResponse::SharedCtor() {
code_ = 0;
}

RoundStartResponse::~RoundStartResponse() {
  // @@protoc_insertion_point(destructor:gamepb.RoundStartResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RoundStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RoundStartResponse::ArenaDtor(void* object) {
  RoundStartResponse* _this = reinterpret_cast< RoundStartResponse* >(object);
  (void)_this;
}
void RoundStartResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoundStartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoundStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.RoundStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoundStartResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoundStartResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.RoundStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.RoundStartResponse)
  return target;
}

size_t RoundStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.RoundStartResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoundStartResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.RoundStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RoundStartResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RoundStartResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.RoundStartResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.RoundStartResponse)
    MergeFrom(*source);
  }
}

void RoundStartResponse::MergeFrom(const RoundStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.RoundStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void RoundStartResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.RoundStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoundStartResponse::CopyFrom(const RoundStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.RoundStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoundStartResponse::IsInitialized() const {
  return true;
}

void RoundStartResponse::InternalSwap(RoundStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoundStartResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[6]);
}

// ===================================================================

class RoundResultRequest::_Internal {
 public:
};

RoundResultRequest::RoundResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.RoundResultRequest)
}
RoundResultRequest::RoundResultRequest(const RoundResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&score_, &from.score_,
    static_cast<size_t>(reinterpret_cast<char*>(&medal_) -
    reinterpret_cast<char*>(&score_)) + sizeof(medal_));
  // @@protoc_insertion_point(copy_constructor:gamepb.RoundResultRequest)
}

void RoundResultRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&score_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&medal_) -
    reinterpret_cast<char*>(&score_)) + sizeof(medal_));
}

RoundResultRequest::~RoundResultRequest() {
  // @@protoc_insertion_point(destructor:gamepb.RoundResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RoundResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RoundResultRequest::ArenaDtor(void* object) {
  RoundResultRequest* _this = reinterpret_cast< RoundResultRequest* >(object);
  (void)_this;
}
void RoundResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoundResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoundResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.RoundResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&medal_) -
      reinterpret_cast<char*>(&score_)) + sizeof(medal_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoundResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Score = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Medal = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          medal_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoundResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.RoundResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Score = 1;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_score(), target);
  }

  // int64 Medal = 2;
  if (this->medal() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_medal(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.RoundResultRequest)
  return target;
}

size_t RoundResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.RoundResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Score = 1;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  // int64 Medal = 2;
  if (this->medal() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_medal());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoundResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.RoundResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RoundResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RoundResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.RoundResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.RoundResultRequest)
    MergeFrom(*source);
  }
}

void RoundResultRequest::MergeFrom(const RoundResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.RoundResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
  if (from.medal() != 0) {
    _internal_set_medal(from._internal_medal());
  }
}

void RoundResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.RoundResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoundResultRequest::CopyFrom(const RoundResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.RoundResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoundResultRequest::IsInitialized() const {
  return true;
}

void RoundResultRequest::InternalSwap(RoundResultRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoundResultRequest, medal_)
      + sizeof(RoundResultRequest::medal_)
      - PROTOBUF_FIELD_OFFSET(RoundResultRequest, score_)>(
          reinterpret_cast<char*>(&score_),
          reinterpret_cast<char*>(&other->score_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RoundResultRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[7]);
}

// ===================================================================

class RoundResultResponse::_Internal {
 public:
};

RoundResultResponse::RoundResultResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.RoundResultResponse)
}
RoundResultResponse::RoundResultResponse(const RoundResultResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.RoundResultResponse)
}

void RoundResultResponse::SharedCtor() {
code_ = 0;
}

RoundResultResponse::~RoundResultResponse() {
  // @@protoc_insertion_point(destructor:gamepb.RoundResultResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RoundResultResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RoundResultResponse::ArenaDtor(void* object) {
  RoundResultResponse* _this = reinterpret_cast< RoundResultResponse* >(object);
  (void)_this;
}
void RoundResultResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoundResultResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoundResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.RoundResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoundResultResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoundResultResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.RoundResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.RoundResultResponse)
  return target;
}

size_t RoundResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.RoundResultResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoundResultResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.RoundResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RoundResultResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RoundResultResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.RoundResultResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.RoundResultResponse)
    MergeFrom(*source);
  }
}

void RoundResultResponse::MergeFrom(const RoundResultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.RoundResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void RoundResultResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.RoundResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoundResultResponse::CopyFrom(const RoundResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.RoundResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoundResultResponse::IsInitialized() const {
  return true;
}

void RoundResultResponse::InternalSwap(RoundResultResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoundResultResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[8]);
}

// ===================================================================

class RankUser::_Internal {
 public:
};

RankUser::RankUser(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.RankUser)
}
RankUser::RankUser(const RankUser& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  openid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_openid().empty()) {
    openid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_openid(), 
      GetArenaForAllocation());
  }
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nickname().empty()) {
    nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nickname(), 
      GetArenaForAllocation());
  }
  avatar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_avatar().empty()) {
    avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_avatar(), 
      GetArenaForAllocation());
  }
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:gamepb.RankUser)
}

void RankUser::SharedCtor() {
openid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
avatar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
score_ = int64_t{0};
}

RankUser::~RankUser() {
  // @@protoc_insertion_point(destructor:gamepb.RankUser)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RankUser::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  openid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RankUser::ArenaDtor(void* object) {
  RankUser* _this = reinterpret_cast< RankUser* >(object);
  (void)_this;
}
void RankUser::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RankUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RankUser::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.RankUser)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  openid_.ClearToEmpty();
  nickname_.ClearToEmpty();
  avatar_.ClearToEmpty();
  score_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RankUser::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Openid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_openid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.RankUser.Openid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Nickname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_nickname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.RankUser.Nickname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Avatar = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_avatar();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.RankUser.Avatar"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Score = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RankUser::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.RankUser)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Openid = 1;
  if (!this->openid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_openid().data(), static_cast<int>(this->_internal_openid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.RankUser.Openid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_openid(), target);
  }

  // string Nickname = 2;
  if (!this->nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.RankUser.Nickname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nickname(), target);
  }

  // string Avatar = 3;
  if (!this->avatar().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar().data(), static_cast<int>(this->_internal_avatar().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.RankUser.Avatar");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_avatar(), target);
  }

  // int64 Score = 4;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.RankUser)
  return target;
}

size_t RankUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.RankUser)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Openid = 1;
  if (!this->openid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_openid());
  }

  // string Nickname = 2;
  if (!this->nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // string Avatar = 3;
  if (!this->avatar().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar());
  }

  // int64 Score = 4;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RankUser::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.RankUser)
  GOOGLE_DCHECK_NE(&from, this);
  const RankUser* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RankUser>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.RankUser)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.RankUser)
    MergeFrom(*source);
  }
}

void RankUser::MergeFrom(const RankUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.RankUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.openid().empty()) {
    _internal_set_openid(from._internal_openid());
  }
  if (!from.nickname().empty()) {
    _internal_set_nickname(from._internal_nickname());
  }
  if (!from.avatar().empty()) {
    _internal_set_avatar(from._internal_avatar());
  }
  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
}

void RankUser::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.RankUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankUser::CopyFrom(const RankUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.RankUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankUser::IsInitialized() const {
  return true;
}

void RankUser::InternalSwap(RankUser* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &openid_, GetArenaForAllocation(),
      &other->openid_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &nickname_, GetArenaForAllocation(),
      &other->nickname_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &avatar_, GetArenaForAllocation(),
      &other->avatar_, other->GetArenaForAllocation()
  );
  swap(score_, other->score_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RankUser::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[9]);
}

// ===================================================================

class GetLevelRankRequest::_Internal {
 public:
};

GetLevelRankRequest::GetLevelRankRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GetLevelRankRequest)
}
GetLevelRankRequest::GetLevelRankRequest(const GetLevelRankRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:gamepb.GetLevelRankRequest)
}

void GetLevelRankRequest::SharedCtor() {
type_ = 0;
}

GetLevelRankRequest::~GetLevelRankRequest() {
  // @@protoc_insertion_point(destructor:gamepb.GetLevelRankRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLevelRankRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetLevelRankRequest::ArenaDtor(void* object) {
  GetLevelRankRequest* _this = reinterpret_cast< GetLevelRankRequest* >(object);
  (void)_this;
}
void GetLevelRankRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLevelRankRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetLevelRankRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GetLevelRankRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLevelRankRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLevelRankRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GetLevelRankRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GetLevelRankRequest)
  return target;
}

size_t GetLevelRankRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GetLevelRankRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLevelRankRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GetLevelRankRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLevelRankRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLevelRankRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GetLevelRankRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GetLevelRankRequest)
    MergeFrom(*source);
  }
}

void GetLevelRankRequest::MergeFrom(const GetLevelRankRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GetLevelRankRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void GetLevelRankRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GetLevelRankRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLevelRankRequest::CopyFrom(const GetLevelRankRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GetLevelRankRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLevelRankRequest::IsInitialized() const {
  return true;
}

void GetLevelRankRequest::InternalSwap(GetLevelRankRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLevelRankRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[10]);
}

// ===================================================================

class GetLevelRankResponse::_Internal {
 public:
};

GetLevelRankResponse::GetLevelRankResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  users_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GetLevelRankResponse)
}
GetLevelRankResponse::GetLevelRankResponse(const GetLevelRankResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      users_(from.users_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&code_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:gamepb.GetLevelRankResponse)
}

void GetLevelRankResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&code_)) + sizeof(score_));
}

GetLevelRankResponse::~GetLevelRankResponse() {
  // @@protoc_insertion_point(destructor:gamepb.GetLevelRankResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLevelRankResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetLevelRankResponse::ArenaDtor(void* object) {
  GetLevelRankResponse* _this = reinterpret_cast< GetLevelRankResponse* >(object);
  (void)_this;
}
void GetLevelRankResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLevelRankResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetLevelRankResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GetLevelRankResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_.Clear();
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&code_)) + sizeof(score_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLevelRankResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gamepb.RankUser Users = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_users(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 Rank = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Score = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLevelRankResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GetLevelRankResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // repeated .gamepb.RankUser Users = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_users_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_users(i), target, stream);
  }

  // int32 Rank = 3;
  if (this->rank() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_rank(), target);
  }

  // int64 Score = 4;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GetLevelRankResponse)
  return target;
}

size_t GetLevelRankResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GetLevelRankResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gamepb.RankUser Users = 2;
  total_size += 1UL * this->_internal_users_size();
  for (const auto& msg : this->users_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 Rank = 3;
  if (this->rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rank());
  }

  // int64 Score = 4;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLevelRankResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GetLevelRankResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLevelRankResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLevelRankResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GetLevelRankResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GetLevelRankResponse)
    MergeFrom(*source);
  }
}

void GetLevelRankResponse::MergeFrom(const GetLevelRankResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GetLevelRankResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.rank() != 0) {
    _internal_set_rank(from._internal_rank());
  }
  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
}

void GetLevelRankResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GetLevelRankResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLevelRankResponse::CopyFrom(const GetLevelRankResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GetLevelRankResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLevelRankResponse::IsInitialized() const {
  return true;
}

void GetLevelRankResponse::InternalSwap(GetLevelRankResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  users_.InternalSwap(&other->users_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLevelRankResponse, score_)
      + sizeof(GetLevelRankResponse::score_)
      - PROTOBUF_FIELD_OFFSET(GetLevelRankResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLevelRankResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[11]);
}

// ===================================================================

class GetScoreRankRequest::_Internal {
 public:
};

GetScoreRankRequest::GetScoreRankRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GetScoreRankRequest)
}
GetScoreRankRequest::GetScoreRankRequest(const GetScoreRankRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:gamepb.GetScoreRankRequest)
}

void GetScoreRankRequest::SharedCtor() {
type_ = 0;
}

GetScoreRankRequest::~GetScoreRankRequest() {
  // @@protoc_insertion_point(destructor:gamepb.GetScoreRankRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetScoreRankRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetScoreRankRequest::ArenaDtor(void* object) {
  GetScoreRankRequest* _this = reinterpret_cast< GetScoreRankRequest* >(object);
  (void)_this;
}
void GetScoreRankRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetScoreRankRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetScoreRankRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GetScoreRankRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetScoreRankRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetScoreRankRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GetScoreRankRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GetScoreRankRequest)
  return target;
}

size_t GetScoreRankRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GetScoreRankRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetScoreRankRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GetScoreRankRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetScoreRankRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetScoreRankRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GetScoreRankRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GetScoreRankRequest)
    MergeFrom(*source);
  }
}

void GetScoreRankRequest::MergeFrom(const GetScoreRankRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GetScoreRankRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void GetScoreRankRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GetScoreRankRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetScoreRankRequest::CopyFrom(const GetScoreRankRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GetScoreRankRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetScoreRankRequest::IsInitialized() const {
  return true;
}

void GetScoreRankRequest::InternalSwap(GetScoreRankRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetScoreRankRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[12]);
}

// ===================================================================

class GetScoreRankResponse::_Internal {
 public:
};

GetScoreRankResponse::GetScoreRankResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  users_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GetScoreRankResponse)
}
GetScoreRankResponse::GetScoreRankResponse(const GetScoreRankResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      users_(from.users_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&code_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:gamepb.GetScoreRankResponse)
}

void GetScoreRankResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&code_)) + sizeof(score_));
}

GetScoreRankResponse::~GetScoreRankResponse() {
  // @@protoc_insertion_point(destructor:gamepb.GetScoreRankResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetScoreRankResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetScoreRankResponse::ArenaDtor(void* object) {
  GetScoreRankResponse* _this = reinterpret_cast< GetScoreRankResponse* >(object);
  (void)_this;
}
void GetScoreRankResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetScoreRankResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetScoreRankResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GetScoreRankResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_.Clear();
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&code_)) + sizeof(score_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetScoreRankResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gamepb.RankUser Users = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_users(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 Rank = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Score = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetScoreRankResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GetScoreRankResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // repeated .gamepb.RankUser Users = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_users_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_users(i), target, stream);
  }

  // int32 Rank = 3;
  if (this->rank() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_rank(), target);
  }

  // int64 Score = 4;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GetScoreRankResponse)
  return target;
}

size_t GetScoreRankResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GetScoreRankResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gamepb.RankUser Users = 2;
  total_size += 1UL * this->_internal_users_size();
  for (const auto& msg : this->users_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 Rank = 3;
  if (this->rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rank());
  }

  // int64 Score = 4;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetScoreRankResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GetScoreRankResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetScoreRankResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetScoreRankResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GetScoreRankResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GetScoreRankResponse)
    MergeFrom(*source);
  }
}

void GetScoreRankResponse::MergeFrom(const GetScoreRankResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GetScoreRankResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.rank() != 0) {
    _internal_set_rank(from._internal_rank());
  }
  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
}

void GetScoreRankResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GetScoreRankResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetScoreRankResponse::CopyFrom(const GetScoreRankResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GetScoreRankResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetScoreRankResponse::IsInitialized() const {
  return true;
}

void GetScoreRankResponse::InternalSwap(GetScoreRankResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  users_.InternalSwap(&other->users_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetScoreRankResponse, score_)
      + sizeof(GetScoreRankResponse::score_)
      - PROTOBUF_FIELD_OFFSET(GetScoreRankResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetScoreRankResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[13]);
}

// ===================================================================

class GetMedalRankRequest::_Internal {
 public:
};

GetMedalRankRequest::GetMedalRankRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GetMedalRankRequest)
}
GetMedalRankRequest::GetMedalRankRequest(const GetMedalRankRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:gamepb.GetMedalRankRequest)
}

void GetMedalRankRequest::SharedCtor() {
type_ = 0;
}

GetMedalRankRequest::~GetMedalRankRequest() {
  // @@protoc_insertion_point(destructor:gamepb.GetMedalRankRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMedalRankRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetMedalRankRequest::ArenaDtor(void* object) {
  GetMedalRankRequest* _this = reinterpret_cast< GetMedalRankRequest* >(object);
  (void)_this;
}
void GetMedalRankRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMedalRankRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetMedalRankRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GetMedalRankRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMedalRankRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMedalRankRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GetMedalRankRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GetMedalRankRequest)
  return target;
}

size_t GetMedalRankRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GetMedalRankRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMedalRankRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GetMedalRankRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMedalRankRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMedalRankRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GetMedalRankRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GetMedalRankRequest)
    MergeFrom(*source);
  }
}

void GetMedalRankRequest::MergeFrom(const GetMedalRankRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GetMedalRankRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void GetMedalRankRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GetMedalRankRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMedalRankRequest::CopyFrom(const GetMedalRankRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GetMedalRankRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMedalRankRequest::IsInitialized() const {
  return true;
}

void GetMedalRankRequest::InternalSwap(GetMedalRankRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMedalRankRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[14]);
}

// ===================================================================

class GetMedalRankResponse::_Internal {
 public:
};

GetMedalRankResponse::GetMedalRankResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  users_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GetMedalRankResponse)
}
GetMedalRankResponse::GetMedalRankResponse(const GetMedalRankResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      users_(from.users_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&code_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:gamepb.GetMedalRankResponse)
}

void GetMedalRankResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&code_)) + sizeof(score_));
}

GetMedalRankResponse::~GetMedalRankResponse() {
  // @@protoc_insertion_point(destructor:gamepb.GetMedalRankResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMedalRankResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetMedalRankResponse::ArenaDtor(void* object) {
  GetMedalRankResponse* _this = reinterpret_cast< GetMedalRankResponse* >(object);
  (void)_this;
}
void GetMedalRankResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMedalRankResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetMedalRankResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GetMedalRankResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_.Clear();
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&code_)) + sizeof(score_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMedalRankResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gamepb.RankUser Users = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_users(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 Rank = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Score = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMedalRankResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GetMedalRankResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // repeated .gamepb.RankUser Users = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_users_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_users(i), target, stream);
  }

  // int32 Rank = 3;
  if (this->rank() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_rank(), target);
  }

  // int64 Score = 4;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GetMedalRankResponse)
  return target;
}

size_t GetMedalRankResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GetMedalRankResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gamepb.RankUser Users = 2;
  total_size += 1UL * this->_internal_users_size();
  for (const auto& msg : this->users_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 Rank = 3;
  if (this->rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rank());
  }

  // int64 Score = 4;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMedalRankResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GetMedalRankResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMedalRankResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMedalRankResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GetMedalRankResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GetMedalRankResponse)
    MergeFrom(*source);
  }
}

void GetMedalRankResponse::MergeFrom(const GetMedalRankResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GetMedalRankResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.rank() != 0) {
    _internal_set_rank(from._internal_rank());
  }
  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
}

void GetMedalRankResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GetMedalRankResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMedalRankResponse::CopyFrom(const GetMedalRankResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GetMedalRankResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMedalRankResponse::IsInitialized() const {
  return true;
}

void GetMedalRankResponse::InternalSwap(GetMedalRankResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  users_.InternalSwap(&other->users_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMedalRankResponse, score_)
      + sizeof(GetMedalRankResponse::score_)
      - PROTOBUF_FIELD_OFFSET(GetMedalRankResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMedalRankResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[15]);
}

// ===================================================================

class DaxiguaGetDataRequest::_Internal {
 public:
};

DaxiguaGetDataRequest::DaxiguaGetDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.DaxiguaGetDataRequest)
}
DaxiguaGetDataRequest::DaxiguaGetDataRequest(const DaxiguaGetDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.DaxiguaGetDataRequest)
}

void DaxiguaGetDataRequest::SharedCtor() {
}

DaxiguaGetDataRequest::~DaxiguaGetDataRequest() {
  // @@protoc_insertion_point(destructor:gamepb.DaxiguaGetDataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DaxiguaGetDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DaxiguaGetDataRequest::ArenaDtor(void* object) {
  DaxiguaGetDataRequest* _this = reinterpret_cast< DaxiguaGetDataRequest* >(object);
  (void)_this;
}
void DaxiguaGetDataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DaxiguaGetDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DaxiguaGetDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.DaxiguaGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DaxiguaGetDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DaxiguaGetDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.DaxiguaGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.DaxiguaGetDataRequest)
  return target;
}

size_t DaxiguaGetDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.DaxiguaGetDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DaxiguaGetDataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.DaxiguaGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DaxiguaGetDataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DaxiguaGetDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.DaxiguaGetDataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.DaxiguaGetDataRequest)
    MergeFrom(*source);
  }
}

void DaxiguaGetDataRequest::MergeFrom(const DaxiguaGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.DaxiguaGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DaxiguaGetDataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.DaxiguaGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DaxiguaGetDataRequest::CopyFrom(const DaxiguaGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.DaxiguaGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DaxiguaGetDataRequest::IsInitialized() const {
  return true;
}

void DaxiguaGetDataRequest::InternalSwap(DaxiguaGetDataRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DaxiguaGetDataRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[16]);
}

// ===================================================================

class DaxiguaGetDataResponse::_Internal {
 public:
};

DaxiguaGetDataResponse::DaxiguaGetDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.DaxiguaGetDataResponse)
}
DaxiguaGetDataResponse::DaxiguaGetDataResponse(const DaxiguaGetDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gameid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.DaxiguaGetDataResponse)
}

void DaxiguaGetDataResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&userid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&gameid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
}

DaxiguaGetDataResponse::~DaxiguaGetDataResponse() {
  // @@protoc_insertion_point(destructor:gamepb.DaxiguaGetDataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DaxiguaGetDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DaxiguaGetDataResponse::ArenaDtor(void* object) {
  DaxiguaGetDataResponse* _this = reinterpret_cast< DaxiguaGetDataResponse* >(object);
  (void)_this;
}
void DaxiguaGetDataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DaxiguaGetDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DaxiguaGetDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.DaxiguaGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gameid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DaxiguaGetDataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Userid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GameId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          gameid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DaxiguaGetDataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.DaxiguaGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_userid(), target);
  }

  // int32 GameId = 3;
  if (this->gameid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_gameid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.DaxiguaGetDataResponse)
  return target;
}

size_t DaxiguaGetDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.DaxiguaGetDataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_userid());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 GameId = 3;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gameid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DaxiguaGetDataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.DaxiguaGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DaxiguaGetDataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DaxiguaGetDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.DaxiguaGetDataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.DaxiguaGetDataResponse)
    MergeFrom(*source);
  }
}

void DaxiguaGetDataResponse::MergeFrom(const DaxiguaGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.DaxiguaGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.gameid() != 0) {
    _internal_set_gameid(from._internal_gameid());
  }
}

void DaxiguaGetDataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.DaxiguaGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DaxiguaGetDataResponse::CopyFrom(const DaxiguaGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.DaxiguaGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DaxiguaGetDataResponse::IsInitialized() const {
  return true;
}

void DaxiguaGetDataResponse::InternalSwap(DaxiguaGetDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DaxiguaGetDataResponse, gameid_)
      + sizeof(DaxiguaGetDataResponse::gameid_)
      - PROTOBUF_FIELD_OFFSET(DaxiguaGetDataResponse, userid_)>(
          reinterpret_cast<char*>(&userid_),
          reinterpret_cast<char*>(&other->userid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DaxiguaGetDataResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[17]);
}

// ===================================================================

class DaxiguaStartRequest::_Internal {
 public:
};

DaxiguaStartRequest::DaxiguaStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.DaxiguaStartRequest)
}
DaxiguaStartRequest::DaxiguaStartRequest(const DaxiguaStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.DaxiguaStartRequest)
}

void DaxiguaStartRequest::SharedCtor() {
}

DaxiguaStartRequest::~DaxiguaStartRequest() {
  // @@protoc_insertion_point(destructor:gamepb.DaxiguaStartRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DaxiguaStartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DaxiguaStartRequest::ArenaDtor(void* object) {
  DaxiguaStartRequest* _this = reinterpret_cast< DaxiguaStartRequest* >(object);
  (void)_this;
}
void DaxiguaStartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DaxiguaStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DaxiguaStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.DaxiguaStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DaxiguaStartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DaxiguaStartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.DaxiguaStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.DaxiguaStartRequest)
  return target;
}

size_t DaxiguaStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.DaxiguaStartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DaxiguaStartRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.DaxiguaStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DaxiguaStartRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DaxiguaStartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.DaxiguaStartRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.DaxiguaStartRequest)
    MergeFrom(*source);
  }
}

void DaxiguaStartRequest::MergeFrom(const DaxiguaStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.DaxiguaStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DaxiguaStartRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.DaxiguaStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DaxiguaStartRequest::CopyFrom(const DaxiguaStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.DaxiguaStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DaxiguaStartRequest::IsInitialized() const {
  return true;
}

void DaxiguaStartRequest::InternalSwap(DaxiguaStartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DaxiguaStartRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[18]);
}

// ===================================================================

class DaxiguaStartResponse::_Internal {
 public:
};

DaxiguaStartResponse::DaxiguaStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.DaxiguaStartResponse)
}
DaxiguaStartResponse::DaxiguaStartResponse(const DaxiguaStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.DaxiguaStartResponse)
}

void DaxiguaStartResponse::SharedCtor() {
code_ = 0;
}

DaxiguaStartResponse::~DaxiguaStartResponse() {
  // @@protoc_insertion_point(destructor:gamepb.DaxiguaStartResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DaxiguaStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DaxiguaStartResponse::ArenaDtor(void* object) {
  DaxiguaStartResponse* _this = reinterpret_cast< DaxiguaStartResponse* >(object);
  (void)_this;
}
void DaxiguaStartResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DaxiguaStartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DaxiguaStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.DaxiguaStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DaxiguaStartResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DaxiguaStartResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.DaxiguaStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.DaxiguaStartResponse)
  return target;
}

size_t DaxiguaStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.DaxiguaStartResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DaxiguaStartResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.DaxiguaStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DaxiguaStartResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DaxiguaStartResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.DaxiguaStartResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.DaxiguaStartResponse)
    MergeFrom(*source);
  }
}

void DaxiguaStartResponse::MergeFrom(const DaxiguaStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.DaxiguaStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void DaxiguaStartResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.DaxiguaStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DaxiguaStartResponse::CopyFrom(const DaxiguaStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.DaxiguaStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DaxiguaStartResponse::IsInitialized() const {
  return true;
}

void DaxiguaStartResponse::InternalSwap(DaxiguaStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DaxiguaStartResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[19]);
}

// ===================================================================

class DaxiguaResultRequest::_Internal {
 public:
};

DaxiguaResultRequest::DaxiguaResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.DaxiguaResultRequest)
}
DaxiguaResultRequest::DaxiguaResultRequest(const DaxiguaResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&score_, &from.score_,
    static_cast<size_t>(reinterpret_cast<char*>(&medal_) -
    reinterpret_cast<char*>(&score_)) + sizeof(medal_));
  // @@protoc_insertion_point(copy_constructor:gamepb.DaxiguaResultRequest)
}

void DaxiguaResultRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&score_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&medal_) -
    reinterpret_cast<char*>(&score_)) + sizeof(medal_));
}

DaxiguaResultRequest::~DaxiguaResultRequest() {
  // @@protoc_insertion_point(destructor:gamepb.DaxiguaResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DaxiguaResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DaxiguaResultRequest::ArenaDtor(void* object) {
  DaxiguaResultRequest* _this = reinterpret_cast< DaxiguaResultRequest* >(object);
  (void)_this;
}
void DaxiguaResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DaxiguaResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DaxiguaResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.DaxiguaResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&medal_) -
      reinterpret_cast<char*>(&score_)) + sizeof(medal_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DaxiguaResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Score = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Medal = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          medal_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DaxiguaResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.DaxiguaResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Score = 1;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_score(), target);
  }

  // int64 Medal = 2;
  if (this->medal() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_medal(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.DaxiguaResultRequest)
  return target;
}

size_t DaxiguaResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.DaxiguaResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Score = 1;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  // int64 Medal = 2;
  if (this->medal() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_medal());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DaxiguaResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.DaxiguaResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DaxiguaResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DaxiguaResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.DaxiguaResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.DaxiguaResultRequest)
    MergeFrom(*source);
  }
}

void DaxiguaResultRequest::MergeFrom(const DaxiguaResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.DaxiguaResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
  if (from.medal() != 0) {
    _internal_set_medal(from._internal_medal());
  }
}

void DaxiguaResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.DaxiguaResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DaxiguaResultRequest::CopyFrom(const DaxiguaResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.DaxiguaResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DaxiguaResultRequest::IsInitialized() const {
  return true;
}

void DaxiguaResultRequest::InternalSwap(DaxiguaResultRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DaxiguaResultRequest, medal_)
      + sizeof(DaxiguaResultRequest::medal_)
      - PROTOBUF_FIELD_OFFSET(DaxiguaResultRequest, score_)>(
          reinterpret_cast<char*>(&score_),
          reinterpret_cast<char*>(&other->score_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DaxiguaResultRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[20]);
}

// ===================================================================

class DaxiguaResultResponse::_Internal {
 public:
};

DaxiguaResultResponse::DaxiguaResultResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.DaxiguaResultResponse)
}
DaxiguaResultResponse::DaxiguaResultResponse(const DaxiguaResultResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.DaxiguaResultResponse)
}

void DaxiguaResultResponse::SharedCtor() {
code_ = 0;
}

DaxiguaResultResponse::~DaxiguaResultResponse() {
  // @@protoc_insertion_point(destructor:gamepb.DaxiguaResultResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DaxiguaResultResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DaxiguaResultResponse::ArenaDtor(void* object) {
  DaxiguaResultResponse* _this = reinterpret_cast< DaxiguaResultResponse* >(object);
  (void)_this;
}
void DaxiguaResultResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DaxiguaResultResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DaxiguaResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.DaxiguaResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DaxiguaResultResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DaxiguaResultResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.DaxiguaResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.DaxiguaResultResponse)
  return target;
}

size_t DaxiguaResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.DaxiguaResultResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DaxiguaResultResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.DaxiguaResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DaxiguaResultResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DaxiguaResultResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.DaxiguaResultResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.DaxiguaResultResponse)
    MergeFrom(*source);
  }
}

void DaxiguaResultResponse::MergeFrom(const DaxiguaResultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.DaxiguaResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void DaxiguaResultResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.DaxiguaResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DaxiguaResultResponse::CopyFrom(const DaxiguaResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.DaxiguaResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DaxiguaResultResponse::IsInitialized() const {
  return true;
}

void DaxiguaResultResponse::InternalSwap(DaxiguaResultResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DaxiguaResultResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[21]);
}

// ===================================================================

class BpbxqGetDataRequest::_Internal {
 public:
};

BpbxqGetDataRequest::BpbxqGetDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqGetDataRequest)
}
BpbxqGetDataRequest::BpbxqGetDataRequest(const BpbxqGetDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqGetDataRequest)
}

void BpbxqGetDataRequest::SharedCtor() {
}

BpbxqGetDataRequest::~BpbxqGetDataRequest() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqGetDataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqGetDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqGetDataRequest::ArenaDtor(void* object) {
  BpbxqGetDataRequest* _this = reinterpret_cast< BpbxqGetDataRequest* >(object);
  (void)_this;
}
void BpbxqGetDataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqGetDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqGetDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqGetDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqGetDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqGetDataRequest)
  return target;
}

size_t BpbxqGetDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqGetDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqGetDataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqGetDataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqGetDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqGetDataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqGetDataRequest)
    MergeFrom(*source);
  }
}

void BpbxqGetDataRequest::MergeFrom(const BpbxqGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BpbxqGetDataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqGetDataRequest::CopyFrom(const BpbxqGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqGetDataRequest::IsInitialized() const {
  return true;
}

void BpbxqGetDataRequest::InternalSwap(BpbxqGetDataRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqGetDataRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[22]);
}

// ===================================================================

class BpbxqGetDataResponse::_Internal {
 public:
};

BpbxqGetDataResponse::BpbxqGetDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqGetDataResponse)
}
BpbxqGetDataResponse::BpbxqGetDataResponse(const BpbxqGetDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  skinarr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_skinarr().empty()) {
    skinarr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_skinarr(), 
      GetArenaForAllocation());
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gameid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqGetDataResponse)
}

void BpbxqGetDataResponse::SharedCtor() {
skinarr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&userid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&gameid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
}

BpbxqGetDataResponse::~BpbxqGetDataResponse() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqGetDataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqGetDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  skinarr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BpbxqGetDataResponse::ArenaDtor(void* object) {
  BpbxqGetDataResponse* _this = reinterpret_cast< BpbxqGetDataResponse* >(object);
  (void)_this;
}
void BpbxqGetDataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqGetDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqGetDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skinarr_.ClearToEmpty();
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gameid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqGetDataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Userid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Skin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          skin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string SkinArr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_skinarr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.BpbxqGetDataResponse.SkinArr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 LastSignTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          lastsigntime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 SignTimes = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          signtimes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 SignTimeNow = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          signtimenow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GameId = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          gameid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqGetDataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_userid(), target);
  }

  // int32 Skin = 3;
  if (this->skin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_skin(), target);
  }

  // string SkinArr = 4;
  if (!this->skinarr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_skinarr().data(), static_cast<int>(this->_internal_skinarr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.BpbxqGetDataResponse.SkinArr");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_skinarr(), target);
  }

  // int64 LastSignTime = 5;
  if (this->lastsigntime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_lastsigntime(), target);
  }

  // int64 SignTimes = 6;
  if (this->signtimes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_signtimes(), target);
  }

  // int64 SignTimeNow = 7;
  if (this->signtimenow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_signtimenow(), target);
  }

  // int32 GameId = 8;
  if (this->gameid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_gameid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqGetDataResponse)
  return target;
}

size_t BpbxqGetDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqGetDataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SkinArr = 4;
  if (!this->skinarr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_skinarr());
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_userid());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 Skin = 3;
  if (this->skin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skin());
  }

  // int64 LastSignTime = 5;
  if (this->lastsigntime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_lastsigntime());
  }

  // int64 SignTimes = 6;
  if (this->signtimes() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_signtimes());
  }

  // int64 SignTimeNow = 7;
  if (this->signtimenow() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_signtimenow());
  }

  // int32 GameId = 8;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gameid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqGetDataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqGetDataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqGetDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqGetDataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqGetDataResponse)
    MergeFrom(*source);
  }
}

void BpbxqGetDataResponse::MergeFrom(const BpbxqGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.skinarr().empty()) {
    _internal_set_skinarr(from._internal_skinarr());
  }
  if (from.userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.skin() != 0) {
    _internal_set_skin(from._internal_skin());
  }
  if (from.lastsigntime() != 0) {
    _internal_set_lastsigntime(from._internal_lastsigntime());
  }
  if (from.signtimes() != 0) {
    _internal_set_signtimes(from._internal_signtimes());
  }
  if (from.signtimenow() != 0) {
    _internal_set_signtimenow(from._internal_signtimenow());
  }
  if (from.gameid() != 0) {
    _internal_set_gameid(from._internal_gameid());
  }
}

void BpbxqGetDataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqGetDataResponse::CopyFrom(const BpbxqGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqGetDataResponse::IsInitialized() const {
  return true;
}

void BpbxqGetDataResponse::InternalSwap(BpbxqGetDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &skinarr_, GetArenaForAllocation(),
      &other->skinarr_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BpbxqGetDataResponse, gameid_)
      + sizeof(BpbxqGetDataResponse::gameid_)
      - PROTOBUF_FIELD_OFFSET(BpbxqGetDataResponse, userid_)>(
          reinterpret_cast<char*>(&userid_),
          reinterpret_cast<char*>(&other->userid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqGetDataResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[23]);
}

// ===================================================================

class BpbxqDaySignRequest::_Internal {
 public:
};

BpbxqDaySignRequest::BpbxqDaySignRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqDaySignRequest)
}
BpbxqDaySignRequest::BpbxqDaySignRequest(const BpbxqDaySignRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqDaySignRequest)
}

void BpbxqDaySignRequest::SharedCtor() {
}

BpbxqDaySignRequest::~BpbxqDaySignRequest() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqDaySignRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqDaySignRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqDaySignRequest::ArenaDtor(void* object) {
  BpbxqDaySignRequest* _this = reinterpret_cast< BpbxqDaySignRequest* >(object);
  (void)_this;
}
void BpbxqDaySignRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqDaySignRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqDaySignRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqDaySignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqDaySignRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqDaySignRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqDaySignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqDaySignRequest)
  return target;
}

size_t BpbxqDaySignRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqDaySignRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqDaySignRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqDaySignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqDaySignRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqDaySignRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqDaySignRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqDaySignRequest)
    MergeFrom(*source);
  }
}

void BpbxqDaySignRequest::MergeFrom(const BpbxqDaySignRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqDaySignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BpbxqDaySignRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqDaySignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqDaySignRequest::CopyFrom(const BpbxqDaySignRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqDaySignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqDaySignRequest::IsInitialized() const {
  return true;
}

void BpbxqDaySignRequest::InternalSwap(BpbxqDaySignRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqDaySignRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[24]);
}

// ===================================================================

class BpbxqDaySignResponse::_Internal {
 public:
};

BpbxqDaySignResponse::BpbxqDaySignResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqDaySignResponse)
}
BpbxqDaySignResponse::BpbxqDaySignResponse(const BpbxqDaySignResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqDaySignResponse)
}

void BpbxqDaySignResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
}

BpbxqDaySignResponse::~BpbxqDaySignResponse() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqDaySignResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqDaySignResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqDaySignResponse::ArenaDtor(void* object) {
  BpbxqDaySignResponse* _this = reinterpret_cast< BpbxqDaySignResponse* >(object);
  (void)_this;
}
void BpbxqDaySignResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqDaySignResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqDaySignResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqDaySignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqDaySignResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 LastSignTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          lastsigntime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 SignTimes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          signtimes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 SignTimeNow = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          signtimenow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqDaySignResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqDaySignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  // int64 LastSignTime = 3;
  if (this->lastsigntime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_lastsigntime(), target);
  }

  // int64 SignTimes = 4;
  if (this->signtimes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_signtimes(), target);
  }

  // int64 SignTimeNow = 5;
  if (this->signtimenow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_signtimenow(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqDaySignResponse)
  return target;
}

size_t BpbxqDaySignResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqDaySignResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int64 LastSignTime = 3;
  if (this->lastsigntime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_lastsigntime());
  }

  // int64 SignTimes = 4;
  if (this->signtimes() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_signtimes());
  }

  // int64 SignTimeNow = 5;
  if (this->signtimenow() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_signtimenow());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqDaySignResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqDaySignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqDaySignResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqDaySignResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqDaySignResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqDaySignResponse)
    MergeFrom(*source);
  }
}

void BpbxqDaySignResponse::MergeFrom(const BpbxqDaySignResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqDaySignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.lastsigntime() != 0) {
    _internal_set_lastsigntime(from._internal_lastsigntime());
  }
  if (from.signtimes() != 0) {
    _internal_set_signtimes(from._internal_signtimes());
  }
  if (from.signtimenow() != 0) {
    _internal_set_signtimenow(from._internal_signtimenow());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void BpbxqDaySignResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqDaySignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqDaySignResponse::CopyFrom(const BpbxqDaySignResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqDaySignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqDaySignResponse::IsInitialized() const {
  return true;
}

void BpbxqDaySignResponse::InternalSwap(BpbxqDaySignResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BpbxqDaySignResponse, code_)
      + sizeof(BpbxqDaySignResponse::code_)
      - PROTOBUF_FIELD_OFFSET(BpbxqDaySignResponse, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqDaySignResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[25]);
}

// ===================================================================

class BpbxqBuySkinRequest::_Internal {
 public:
};

BpbxqBuySkinRequest::BpbxqBuySkinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqBuySkinRequest)
}
BpbxqBuySkinRequest::BpbxqBuySkinRequest(const BpbxqBuySkinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  skinid_ = from.skinid_;
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqBuySkinRequest)
}

void BpbxqBuySkinRequest::SharedCtor() {
skinid_ = 0;
}

BpbxqBuySkinRequest::~BpbxqBuySkinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqBuySkinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqBuySkinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqBuySkinRequest::ArenaDtor(void* object) {
  BpbxqBuySkinRequest* _this = reinterpret_cast< BpbxqBuySkinRequest* >(object);
  (void)_this;
}
void BpbxqBuySkinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqBuySkinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqBuySkinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqBuySkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skinid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqBuySkinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 SkinId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          skinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqBuySkinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqBuySkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SkinId = 1;
  if (this->skinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_skinid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqBuySkinRequest)
  return target;
}

size_t BpbxqBuySkinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqBuySkinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 SkinId = 1;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skinid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqBuySkinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqBuySkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqBuySkinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqBuySkinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqBuySkinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqBuySkinRequest)
    MergeFrom(*source);
  }
}

void BpbxqBuySkinRequest::MergeFrom(const BpbxqBuySkinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqBuySkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.skinid() != 0) {
    _internal_set_skinid(from._internal_skinid());
  }
}

void BpbxqBuySkinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqBuySkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqBuySkinRequest::CopyFrom(const BpbxqBuySkinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqBuySkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqBuySkinRequest::IsInitialized() const {
  return true;
}

void BpbxqBuySkinRequest::InternalSwap(BpbxqBuySkinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(skinid_, other->skinid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqBuySkinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[26]);
}

// ===================================================================

class BpbxqBuySkinResponse::_Internal {
 public:
};

BpbxqBuySkinResponse::BpbxqBuySkinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqBuySkinResponse)
}
BpbxqBuySkinResponse::BpbxqBuySkinResponse(const BpbxqBuySkinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&coin_) -
    reinterpret_cast<char*>(&code_)) + sizeof(coin_));
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqBuySkinResponse)
}

void BpbxqBuySkinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&coin_) -
    reinterpret_cast<char*>(&code_)) + sizeof(coin_));
}

BpbxqBuySkinResponse::~BpbxqBuySkinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqBuySkinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqBuySkinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqBuySkinResponse::ArenaDtor(void* object) {
  BpbxqBuySkinResponse* _this = reinterpret_cast< BpbxqBuySkinResponse* >(object);
  (void)_this;
}
void BpbxqBuySkinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqBuySkinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqBuySkinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqBuySkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coin_) -
      reinterpret_cast<char*>(&code_)) + sizeof(coin_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqBuySkinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SkinId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          skinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqBuySkinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqBuySkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 SkinId = 2;
  if (this->skinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_skinid(), target);
  }

  // int64 Coin = 3;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqBuySkinResponse)
  return target;
}

size_t BpbxqBuySkinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqBuySkinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 SkinId = 2;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skinid());
  }

  // int64 Coin = 3;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqBuySkinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqBuySkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqBuySkinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqBuySkinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqBuySkinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqBuySkinResponse)
    MergeFrom(*source);
  }
}

void BpbxqBuySkinResponse::MergeFrom(const BpbxqBuySkinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqBuySkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.skinid() != 0) {
    _internal_set_skinid(from._internal_skinid());
  }
  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
}

void BpbxqBuySkinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqBuySkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqBuySkinResponse::CopyFrom(const BpbxqBuySkinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqBuySkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqBuySkinResponse::IsInitialized() const {
  return true;
}

void BpbxqBuySkinResponse::InternalSwap(BpbxqBuySkinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BpbxqBuySkinResponse, coin_)
      + sizeof(BpbxqBuySkinResponse::coin_)
      - PROTOBUF_FIELD_OFFSET(BpbxqBuySkinResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqBuySkinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[27]);
}

// ===================================================================

class BpbxqUseSkinRequest::_Internal {
 public:
};

BpbxqUseSkinRequest::BpbxqUseSkinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqUseSkinRequest)
}
BpbxqUseSkinRequest::BpbxqUseSkinRequest(const BpbxqUseSkinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  skinid_ = from.skinid_;
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqUseSkinRequest)
}

void BpbxqUseSkinRequest::SharedCtor() {
skinid_ = 0;
}

BpbxqUseSkinRequest::~BpbxqUseSkinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqUseSkinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqUseSkinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqUseSkinRequest::ArenaDtor(void* object) {
  BpbxqUseSkinRequest* _this = reinterpret_cast< BpbxqUseSkinRequest* >(object);
  (void)_this;
}
void BpbxqUseSkinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqUseSkinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqUseSkinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqUseSkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skinid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqUseSkinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 SkinId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          skinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqUseSkinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqUseSkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SkinId = 1;
  if (this->skinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_skinid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqUseSkinRequest)
  return target;
}

size_t BpbxqUseSkinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqUseSkinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 SkinId = 1;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skinid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqUseSkinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqUseSkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqUseSkinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqUseSkinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqUseSkinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqUseSkinRequest)
    MergeFrom(*source);
  }
}

void BpbxqUseSkinRequest::MergeFrom(const BpbxqUseSkinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqUseSkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.skinid() != 0) {
    _internal_set_skinid(from._internal_skinid());
  }
}

void BpbxqUseSkinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqUseSkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqUseSkinRequest::CopyFrom(const BpbxqUseSkinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqUseSkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqUseSkinRequest::IsInitialized() const {
  return true;
}

void BpbxqUseSkinRequest::InternalSwap(BpbxqUseSkinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(skinid_, other->skinid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqUseSkinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[28]);
}

// ===================================================================

class BpbxqUseSkinResponse::_Internal {
 public:
};

BpbxqUseSkinResponse::BpbxqUseSkinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqUseSkinResponse)
}
BpbxqUseSkinResponse::BpbxqUseSkinResponse(const BpbxqUseSkinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&skinid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(skinid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqUseSkinResponse)
}

void BpbxqUseSkinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&skinid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(skinid_));
}

BpbxqUseSkinResponse::~BpbxqUseSkinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqUseSkinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqUseSkinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqUseSkinResponse::ArenaDtor(void* object) {
  BpbxqUseSkinResponse* _this = reinterpret_cast< BpbxqUseSkinResponse* >(object);
  (void)_this;
}
void BpbxqUseSkinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqUseSkinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqUseSkinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqUseSkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skinid_) -
      reinterpret_cast<char*>(&code_)) + sizeof(skinid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqUseSkinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SkinId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          skinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqUseSkinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqUseSkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 SkinId = 2;
  if (this->skinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_skinid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqUseSkinResponse)
  return target;
}

size_t BpbxqUseSkinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqUseSkinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 SkinId = 2;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skinid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqUseSkinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqUseSkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqUseSkinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqUseSkinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqUseSkinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqUseSkinResponse)
    MergeFrom(*source);
  }
}

void BpbxqUseSkinResponse::MergeFrom(const BpbxqUseSkinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqUseSkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.skinid() != 0) {
    _internal_set_skinid(from._internal_skinid());
  }
}

void BpbxqUseSkinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqUseSkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqUseSkinResponse::CopyFrom(const BpbxqUseSkinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqUseSkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqUseSkinResponse::IsInitialized() const {
  return true;
}

void BpbxqUseSkinResponse::InternalSwap(BpbxqUseSkinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BpbxqUseSkinResponse, skinid_)
      + sizeof(BpbxqUseSkinResponse::skinid_)
      - PROTOBUF_FIELD_OFFSET(BpbxqUseSkinResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqUseSkinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[29]);
}

// ===================================================================

class BpbxqPickCoinRequest::_Internal {
 public:
};

BpbxqPickCoinRequest::BpbxqPickCoinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqPickCoinRequest)
}
BpbxqPickCoinRequest::BpbxqPickCoinRequest(const BpbxqPickCoinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  coin_ = from.coin_;
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqPickCoinRequest)
}

void BpbxqPickCoinRequest::SharedCtor() {
coin_ = int64_t{0};
}

BpbxqPickCoinRequest::~BpbxqPickCoinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqPickCoinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqPickCoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqPickCoinRequest::ArenaDtor(void* object) {
  BpbxqPickCoinRequest* _this = reinterpret_cast< BpbxqPickCoinRequest* >(object);
  (void)_this;
}
void BpbxqPickCoinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqPickCoinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqPickCoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqPickCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coin_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqPickCoinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Coin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqPickCoinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqPickCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Coin = 1;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqPickCoinRequest)
  return target;
}

size_t BpbxqPickCoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqPickCoinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 1;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqPickCoinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqPickCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqPickCoinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqPickCoinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqPickCoinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqPickCoinRequest)
    MergeFrom(*source);
  }
}

void BpbxqPickCoinRequest::MergeFrom(const BpbxqPickCoinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqPickCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
}

void BpbxqPickCoinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqPickCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqPickCoinRequest::CopyFrom(const BpbxqPickCoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqPickCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqPickCoinRequest::IsInitialized() const {
  return true;
}

void BpbxqPickCoinRequest::InternalSwap(BpbxqPickCoinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(coin_, other->coin_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqPickCoinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[30]);
}

// ===================================================================

class BpbxqPickCoinResponse::_Internal {
 public:
};

BpbxqPickCoinResponse::BpbxqPickCoinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqPickCoinResponse)
}
BpbxqPickCoinResponse::BpbxqPickCoinResponse(const BpbxqPickCoinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqPickCoinResponse)
}

void BpbxqPickCoinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
}

BpbxqPickCoinResponse::~BpbxqPickCoinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqPickCoinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqPickCoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqPickCoinResponse::ArenaDtor(void* object) {
  BpbxqPickCoinResponse* _this = reinterpret_cast< BpbxqPickCoinResponse* >(object);
  (void)_this;
}
void BpbxqPickCoinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqPickCoinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqPickCoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqPickCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqPickCoinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqPickCoinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqPickCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqPickCoinResponse)
  return target;
}

size_t BpbxqPickCoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqPickCoinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqPickCoinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqPickCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqPickCoinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqPickCoinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqPickCoinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqPickCoinResponse)
    MergeFrom(*source);
  }
}

void BpbxqPickCoinResponse::MergeFrom(const BpbxqPickCoinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqPickCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void BpbxqPickCoinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqPickCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqPickCoinResponse::CopyFrom(const BpbxqPickCoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqPickCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqPickCoinResponse::IsInitialized() const {
  return true;
}

void BpbxqPickCoinResponse::InternalSwap(BpbxqPickCoinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BpbxqPickCoinResponse, code_)
      + sizeof(BpbxqPickCoinResponse::code_)
      - PROTOBUF_FIELD_OFFSET(BpbxqPickCoinResponse, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqPickCoinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[31]);
}

// ===================================================================

class BpbxqReviveRequest::_Internal {
 public:
};

BpbxqReviveRequest::BpbxqReviveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqReviveRequest)
}
BpbxqReviveRequest::BpbxqReviveRequest(const BpbxqReviveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqReviveRequest)
}

void BpbxqReviveRequest::SharedCtor() {
}

BpbxqReviveRequest::~BpbxqReviveRequest() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqReviveRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqReviveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqReviveRequest::ArenaDtor(void* object) {
  BpbxqReviveRequest* _this = reinterpret_cast< BpbxqReviveRequest* >(object);
  (void)_this;
}
void BpbxqReviveRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqReviveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqReviveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqReviveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqReviveRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqReviveRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqReviveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqReviveRequest)
  return target;
}

size_t BpbxqReviveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqReviveRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqReviveRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqReviveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqReviveRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqReviveRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqReviveRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqReviveRequest)
    MergeFrom(*source);
  }
}

void BpbxqReviveRequest::MergeFrom(const BpbxqReviveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqReviveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BpbxqReviveRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqReviveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqReviveRequest::CopyFrom(const BpbxqReviveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqReviveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqReviveRequest::IsInitialized() const {
  return true;
}

void BpbxqReviveRequest::InternalSwap(BpbxqReviveRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqReviveRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[32]);
}

// ===================================================================

class BpbxqReviveResponse::_Internal {
 public:
};

BpbxqReviveResponse::BpbxqReviveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqReviveResponse)
}
BpbxqReviveResponse::BpbxqReviveResponse(const BpbxqReviveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqReviveResponse)
}

void BpbxqReviveResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
}

BpbxqReviveResponse::~BpbxqReviveResponse() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqReviveResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqReviveResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqReviveResponse::ArenaDtor(void* object) {
  BpbxqReviveResponse* _this = reinterpret_cast< BpbxqReviveResponse* >(object);
  (void)_this;
}
void BpbxqReviveResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqReviveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqReviveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqReviveResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqReviveResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqReviveResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqReviveResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqReviveResponse)
  return target;
}

size_t BpbxqReviveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqReviveResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqReviveResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqReviveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqReviveResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqReviveResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqReviveResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqReviveResponse)
    MergeFrom(*source);
  }
}

void BpbxqReviveResponse::MergeFrom(const BpbxqReviveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqReviveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void BpbxqReviveResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqReviveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqReviveResponse::CopyFrom(const BpbxqReviveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqReviveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqReviveResponse::IsInitialized() const {
  return true;
}

void BpbxqReviveResponse::InternalSwap(BpbxqReviveResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BpbxqReviveResponse, code_)
      + sizeof(BpbxqReviveResponse::code_)
      - PROTOBUF_FIELD_OFFSET(BpbxqReviveResponse, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqReviveResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[33]);
}

// ===================================================================

class BpbxqDieflyRequest::_Internal {
 public:
};

BpbxqDieflyRequest::BpbxqDieflyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqDieflyRequest)
}
BpbxqDieflyRequest::BpbxqDieflyRequest(const BpbxqDieflyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqDieflyRequest)
}

void BpbxqDieflyRequest::SharedCtor() {
}

BpbxqDieflyRequest::~BpbxqDieflyRequest() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqDieflyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqDieflyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqDieflyRequest::ArenaDtor(void* object) {
  BpbxqDieflyRequest* _this = reinterpret_cast< BpbxqDieflyRequest* >(object);
  (void)_this;
}
void BpbxqDieflyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqDieflyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqDieflyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqDieflyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqDieflyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqDieflyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqDieflyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqDieflyRequest)
  return target;
}

size_t BpbxqDieflyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqDieflyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqDieflyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqDieflyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqDieflyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqDieflyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqDieflyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqDieflyRequest)
    MergeFrom(*source);
  }
}

void BpbxqDieflyRequest::MergeFrom(const BpbxqDieflyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqDieflyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BpbxqDieflyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqDieflyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqDieflyRequest::CopyFrom(const BpbxqDieflyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqDieflyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqDieflyRequest::IsInitialized() const {
  return true;
}

void BpbxqDieflyRequest::InternalSwap(BpbxqDieflyRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqDieflyRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[34]);
}

// ===================================================================

class BpbxqDieflyResponse::_Internal {
 public:
};

BpbxqDieflyResponse::BpbxqDieflyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqDieflyResponse)
}
BpbxqDieflyResponse::BpbxqDieflyResponse(const BpbxqDieflyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqDieflyResponse)
}

void BpbxqDieflyResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
}

BpbxqDieflyResponse::~BpbxqDieflyResponse() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqDieflyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqDieflyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqDieflyResponse::ArenaDtor(void* object) {
  BpbxqDieflyResponse* _this = reinterpret_cast< BpbxqDieflyResponse* >(object);
  (void)_this;
}
void BpbxqDieflyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqDieflyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqDieflyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqDieflyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqDieflyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqDieflyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqDieflyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqDieflyResponse)
  return target;
}

size_t BpbxqDieflyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqDieflyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqDieflyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqDieflyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqDieflyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqDieflyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqDieflyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqDieflyResponse)
    MergeFrom(*source);
  }
}

void BpbxqDieflyResponse::MergeFrom(const BpbxqDieflyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqDieflyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void BpbxqDieflyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqDieflyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqDieflyResponse::CopyFrom(const BpbxqDieflyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqDieflyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqDieflyResponse::IsInitialized() const {
  return true;
}

void BpbxqDieflyResponse::InternalSwap(BpbxqDieflyResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BpbxqDieflyResponse, code_)
      + sizeof(BpbxqDieflyResponse::code_)
      - PROTOBUF_FIELD_OFFSET(BpbxqDieflyResponse, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqDieflyResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[35]);
}

// ===================================================================

class BpbxqRewardRequest::_Internal {
 public:
};

BpbxqRewardRequest::BpbxqRewardRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqRewardRequest)
}
BpbxqRewardRequest::BpbxqRewardRequest(const BpbxqRewardRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqRewardRequest)
}

void BpbxqRewardRequest::SharedCtor() {
}

BpbxqRewardRequest::~BpbxqRewardRequest() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqRewardRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqRewardRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqRewardRequest::ArenaDtor(void* object) {
  BpbxqRewardRequest* _this = reinterpret_cast< BpbxqRewardRequest* >(object);
  (void)_this;
}
void BpbxqRewardRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqRewardRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqRewardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqRewardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqRewardRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqRewardRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqRewardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqRewardRequest)
  return target;
}

size_t BpbxqRewardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqRewardRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqRewardRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqRewardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqRewardRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqRewardRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqRewardRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqRewardRequest)
    MergeFrom(*source);
  }
}

void BpbxqRewardRequest::MergeFrom(const BpbxqRewardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqRewardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BpbxqRewardRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqRewardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqRewardRequest::CopyFrom(const BpbxqRewardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqRewardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqRewardRequest::IsInitialized() const {
  return true;
}

void BpbxqRewardRequest::InternalSwap(BpbxqRewardRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqRewardRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[36]);
}

// ===================================================================

class BpbxqRewardResponse::_Internal {
 public:
};

BpbxqRewardResponse::BpbxqRewardResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqRewardResponse)
}
BpbxqRewardResponse::BpbxqRewardResponse(const BpbxqRewardResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqRewardResponse)
}

void BpbxqRewardResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
}

BpbxqRewardResponse::~BpbxqRewardResponse() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqRewardResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqRewardResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqRewardResponse::ArenaDtor(void* object) {
  BpbxqRewardResponse* _this = reinterpret_cast< BpbxqRewardResponse* >(object);
  (void)_this;
}
void BpbxqRewardResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqRewardResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqRewardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqRewardResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqRewardResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqRewardResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqRewardResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqRewardResponse)
  return target;
}

size_t BpbxqRewardResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqRewardResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqRewardResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqRewardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqRewardResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqRewardResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqRewardResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqRewardResponse)
    MergeFrom(*source);
  }
}

void BpbxqRewardResponse::MergeFrom(const BpbxqRewardResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqRewardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void BpbxqRewardResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqRewardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqRewardResponse::CopyFrom(const BpbxqRewardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqRewardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqRewardResponse::IsInitialized() const {
  return true;
}

void BpbxqRewardResponse::InternalSwap(BpbxqRewardResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BpbxqRewardResponse, code_)
      + sizeof(BpbxqRewardResponse::code_)
      - PROTOBUF_FIELD_OFFSET(BpbxqRewardResponse, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqRewardResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[37]);
}

// ===================================================================

class BpbxqStartRequest::_Internal {
 public:
};

BpbxqStartRequest::BpbxqStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqStartRequest)
}
BpbxqStartRequest::BpbxqStartRequest(const BpbxqStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqStartRequest)
}

void BpbxqStartRequest::SharedCtor() {
}

BpbxqStartRequest::~BpbxqStartRequest() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqStartRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqStartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqStartRequest::ArenaDtor(void* object) {
  BpbxqStartRequest* _this = reinterpret_cast< BpbxqStartRequest* >(object);
  (void)_this;
}
void BpbxqStartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqStartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqStartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqStartRequest)
  return target;
}

size_t BpbxqStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqStartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqStartRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqStartRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqStartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqStartRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqStartRequest)
    MergeFrom(*source);
  }
}

void BpbxqStartRequest::MergeFrom(const BpbxqStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BpbxqStartRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqStartRequest::CopyFrom(const BpbxqStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqStartRequest::IsInitialized() const {
  return true;
}

void BpbxqStartRequest::InternalSwap(BpbxqStartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqStartRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[38]);
}

// ===================================================================

class BpbxqStartResponse::_Internal {
 public:
};

BpbxqStartResponse::BpbxqStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqStartResponse)
}
BpbxqStartResponse::BpbxqStartResponse(const BpbxqStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqStartResponse)
}

void BpbxqStartResponse::SharedCtor() {
code_ = 0;
}

BpbxqStartResponse::~BpbxqStartResponse() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqStartResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqStartResponse::ArenaDtor(void* object) {
  BpbxqStartResponse* _this = reinterpret_cast< BpbxqStartResponse* >(object);
  (void)_this;
}
void BpbxqStartResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqStartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqStartResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqStartResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqStartResponse)
  return target;
}

size_t BpbxqStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqStartResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqStartResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqStartResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqStartResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqStartResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqStartResponse)
    MergeFrom(*source);
  }
}

void BpbxqStartResponse::MergeFrom(const BpbxqStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void BpbxqStartResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqStartResponse::CopyFrom(const BpbxqStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqStartResponse::IsInitialized() const {
  return true;
}

void BpbxqStartResponse::InternalSwap(BpbxqStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqStartResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[39]);
}

// ===================================================================

class BpbxqResultRequest::_Internal {
 public:
};

BpbxqResultRequest::BpbxqResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqResultRequest)
}
BpbxqResultRequest::BpbxqResultRequest(const BpbxqResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqResultRequest)
}

void BpbxqResultRequest::SharedCtor() {
score_ = int64_t{0};
}

BpbxqResultRequest::~BpbxqResultRequest() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqResultRequest::ArenaDtor(void* object) {
  BpbxqResultRequest* _this = reinterpret_cast< BpbxqResultRequest* >(object);
  (void)_this;
}
void BpbxqResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  score_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Score = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Score = 1;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqResultRequest)
  return target;
}

size_t BpbxqResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Score = 1;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqResultRequest)
    MergeFrom(*source);
  }
}

void BpbxqResultRequest::MergeFrom(const BpbxqResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
}

void BpbxqResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqResultRequest::CopyFrom(const BpbxqResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqResultRequest::IsInitialized() const {
  return true;
}

void BpbxqResultRequest::InternalSwap(BpbxqResultRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(score_, other->score_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqResultRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[40]);
}

// ===================================================================

class BpbxqResultResponse::_Internal {
 public:
};

BpbxqResultResponse::BpbxqResultResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.BpbxqResultResponse)
}
BpbxqResultResponse::BpbxqResultResponse(const BpbxqResultResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.BpbxqResultResponse)
}

void BpbxqResultResponse::SharedCtor() {
code_ = 0;
}

BpbxqResultResponse::~BpbxqResultResponse() {
  // @@protoc_insertion_point(destructor:gamepb.BpbxqResultResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BpbxqResultResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BpbxqResultResponse::ArenaDtor(void* object) {
  BpbxqResultResponse* _this = reinterpret_cast< BpbxqResultResponse* >(object);
  (void)_this;
}
void BpbxqResultResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BpbxqResultResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BpbxqResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.BpbxqResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BpbxqResultResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BpbxqResultResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.BpbxqResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.BpbxqResultResponse)
  return target;
}

size_t BpbxqResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.BpbxqResultResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BpbxqResultResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.BpbxqResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BpbxqResultResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BpbxqResultResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.BpbxqResultResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.BpbxqResultResponse)
    MergeFrom(*source);
  }
}

void BpbxqResultResponse::MergeFrom(const BpbxqResultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.BpbxqResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void BpbxqResultResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.BpbxqResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BpbxqResultResponse::CopyFrom(const BpbxqResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.BpbxqResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BpbxqResultResponse::IsInitialized() const {
  return true;
}

void BpbxqResultResponse::InternalSwap(BpbxqResultResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BpbxqResultResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[41]);
}

// ===================================================================

class CaichengyuGetDataRequest::_Internal {
 public:
};

CaichengyuGetDataRequest::CaichengyuGetDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuGetDataRequest)
}
CaichengyuGetDataRequest::CaichengyuGetDataRequest(const CaichengyuGetDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuGetDataRequest)
}

void CaichengyuGetDataRequest::SharedCtor() {
}

CaichengyuGetDataRequest::~CaichengyuGetDataRequest() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuGetDataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuGetDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaichengyuGetDataRequest::ArenaDtor(void* object) {
  CaichengyuGetDataRequest* _this = reinterpret_cast< CaichengyuGetDataRequest* >(object);
  (void)_this;
}
void CaichengyuGetDataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuGetDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuGetDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuGetDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuGetDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuGetDataRequest)
  return target;
}

size_t CaichengyuGetDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuGetDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuGetDataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuGetDataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuGetDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuGetDataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuGetDataRequest)
    MergeFrom(*source);
  }
}

void CaichengyuGetDataRequest::MergeFrom(const CaichengyuGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CaichengyuGetDataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuGetDataRequest::CopyFrom(const CaichengyuGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuGetDataRequest::IsInitialized() const {
  return true;
}

void CaichengyuGetDataRequest::InternalSwap(CaichengyuGetDataRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuGetDataRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[42]);
}

// ===================================================================

class CaichengyuGetDataResponse::_Internal {
 public:
};

CaichengyuGetDataResponse::CaichengyuGetDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuGetDataResponse)
}
CaichengyuGetDataResponse::CaichengyuGetDataResponse(const CaichengyuGetDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  gethpday_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_gethpday().empty()) {
    gethpday_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_gethpday(), 
      GetArenaForAllocation());
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gameid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuGetDataResponse)
}

void CaichengyuGetDataResponse::SharedCtor() {
gethpday_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&userid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&gameid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
}

CaichengyuGetDataResponse::~CaichengyuGetDataResponse() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuGetDataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuGetDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  gethpday_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CaichengyuGetDataResponse::ArenaDtor(void* object) {
  CaichengyuGetDataResponse* _this = reinterpret_cast< CaichengyuGetDataResponse* >(object);
  (void)_this;
}
void CaichengyuGetDataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuGetDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuGetDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gethpday_.ClearToEmpty();
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gameid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuGetDataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Userid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 RoleLevel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          rolelevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 BuildLevel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          buildlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Level = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 LevelType = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          leveltype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 LevelTip = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          leveltip_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Hp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 HpDate = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          hpdate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GetHpCount = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          gethpcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string GetHpDay = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_gethpday();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.CaichengyuGetDataResponse.GetHpDay"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GameId = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          gameid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuGetDataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_userid(), target);
  }

  // int32 RoleLevel = 3;
  if (this->rolelevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_rolelevel(), target);
  }

  // int32 BuildLevel = 4;
  if (this->buildlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_buildlevel(), target);
  }

  // int64 Level = 5;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_level(), target);
  }

  // int32 LevelType = 6;
  if (this->leveltype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_leveltype(), target);
  }

  // int32 LevelTip = 7;
  if (this->leveltip() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_leveltip(), target);
  }

  // int32 Hp = 8;
  if (this->hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_hp(), target);
  }

  // int64 HpDate = 9;
  if (this->hpdate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(9, this->_internal_hpdate(), target);
  }

  // int32 GetHpCount = 10;
  if (this->gethpcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_gethpcount(), target);
  }

  // string GetHpDay = 11;
  if (!this->gethpday().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_gethpday().data(), static_cast<int>(this->_internal_gethpday().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.CaichengyuGetDataResponse.GetHpDay");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_gethpday(), target);
  }

  // int32 GameId = 12;
  if (this->gameid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_gameid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuGetDataResponse)
  return target;
}

size_t CaichengyuGetDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuGetDataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string GetHpDay = 11;
  if (!this->gethpday().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_gethpday());
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_userid());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 RoleLevel = 3;
  if (this->rolelevel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rolelevel());
  }

  // int64 Level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_level());
  }

  // int32 BuildLevel = 4;
  if (this->buildlevel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_buildlevel());
  }

  // int32 LevelType = 6;
  if (this->leveltype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_leveltype());
  }

  // int32 LevelTip = 7;
  if (this->leveltip() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_leveltip());
  }

  // int32 Hp = 8;
  if (this->hp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hp());
  }

  // int64 HpDate = 9;
  if (this->hpdate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_hpdate());
  }

  // int32 GetHpCount = 10;
  if (this->gethpcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gethpcount());
  }

  // int32 GameId = 12;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gameid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuGetDataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuGetDataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuGetDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuGetDataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuGetDataResponse)
    MergeFrom(*source);
  }
}

void CaichengyuGetDataResponse::MergeFrom(const CaichengyuGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.gethpday().empty()) {
    _internal_set_gethpday(from._internal_gethpday());
  }
  if (from.userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.rolelevel() != 0) {
    _internal_set_rolelevel(from._internal_rolelevel());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.buildlevel() != 0) {
    _internal_set_buildlevel(from._internal_buildlevel());
  }
  if (from.leveltype() != 0) {
    _internal_set_leveltype(from._internal_leveltype());
  }
  if (from.leveltip() != 0) {
    _internal_set_leveltip(from._internal_leveltip());
  }
  if (from.hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
  if (from.hpdate() != 0) {
    _internal_set_hpdate(from._internal_hpdate());
  }
  if (from.gethpcount() != 0) {
    _internal_set_gethpcount(from._internal_gethpcount());
  }
  if (from.gameid() != 0) {
    _internal_set_gameid(from._internal_gameid());
  }
}

void CaichengyuGetDataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuGetDataResponse::CopyFrom(const CaichengyuGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuGetDataResponse::IsInitialized() const {
  return true;
}

void CaichengyuGetDataResponse::InternalSwap(CaichengyuGetDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &gethpday_, GetArenaForAllocation(),
      &other->gethpday_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CaichengyuGetDataResponse, gameid_)
      + sizeof(CaichengyuGetDataResponse::gameid_)
      - PROTOBUF_FIELD_OFFSET(CaichengyuGetDataResponse, userid_)>(
          reinterpret_cast<char*>(&userid_),
          reinterpret_cast<char*>(&other->userid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuGetDataResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[43]);
}

// ===================================================================

class CaichengyuStartRequest::_Internal {
 public:
};

CaichengyuStartRequest::CaichengyuStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuStartRequest)
}
CaichengyuStartRequest::CaichengyuStartRequest(const CaichengyuStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuStartRequest)
}

void CaichengyuStartRequest::SharedCtor() {
}

CaichengyuStartRequest::~CaichengyuStartRequest() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuStartRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuStartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaichengyuStartRequest::ArenaDtor(void* object) {
  CaichengyuStartRequest* _this = reinterpret_cast< CaichengyuStartRequest* >(object);
  (void)_this;
}
void CaichengyuStartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuStartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuStartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuStartRequest)
  return target;
}

size_t CaichengyuStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuStartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuStartRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuStartRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuStartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuStartRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuStartRequest)
    MergeFrom(*source);
  }
}

void CaichengyuStartRequest::MergeFrom(const CaichengyuStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CaichengyuStartRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuStartRequest::CopyFrom(const CaichengyuStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuStartRequest::IsInitialized() const {
  return true;
}

void CaichengyuStartRequest::InternalSwap(CaichengyuStartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuStartRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[44]);
}

// ===================================================================

class CaichengyuStartResponse::_Internal {
 public:
  static const ::gamepb::RankUser& user(const CaichengyuStartResponse* msg);
};

const ::gamepb::RankUser&
CaichengyuStartResponse::_Internal::user(const CaichengyuStartResponse* msg) {
  return *msg->user_;
}
CaichengyuStartResponse::CaichengyuStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuStartResponse)
}
CaichengyuStartResponse::CaichengyuStartResponse(const CaichengyuStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_user()) {
    user_ = new ::gamepb::RankUser(*from.user_);
  } else {
    user_ = nullptr;
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&leveltip_) -
    reinterpret_cast<char*>(&code_)) + sizeof(leveltip_));
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuStartResponse)
}

void CaichengyuStartResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&user_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&leveltip_) -
    reinterpret_cast<char*>(&user_)) + sizeof(leveltip_));
}

CaichengyuStartResponse::~CaichengyuStartResponse() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuStartResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete user_;
}

void CaichengyuStartResponse::ArenaDtor(void* object) {
  CaichengyuStartResponse* _this = reinterpret_cast< CaichengyuStartResponse* >(object);
  (void)_this;
}
void CaichengyuStartResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuStartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leveltip_) -
      reinterpret_cast<char*>(&code_)) + sizeof(leveltip_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuStartResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Hp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 LevelTip = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          leveltip_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .gamepb.RankUser User = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_user(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuStartResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_hp(), target);
  }

  // int32 LevelTip = 3;
  if (this->leveltip() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_leveltip(), target);
  }

  // .gamepb.RankUser User = 4;
  if (this->has_user()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::user(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuStartResponse)
  return target;
}

size_t CaichengyuStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuStartResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gamepb.RankUser User = 4;
  if (this->has_user()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *user_);
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hp());
  }

  // int32 LevelTip = 3;
  if (this->leveltip() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_leveltip());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuStartResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuStartResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuStartResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuStartResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuStartResponse)
    MergeFrom(*source);
  }
}

void CaichengyuStartResponse::MergeFrom(const CaichengyuStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user()) {
    _internal_mutable_user()->::gamepb::RankUser::MergeFrom(from._internal_user());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
  if (from.leveltip() != 0) {
    _internal_set_leveltip(from._internal_leveltip());
  }
}

void CaichengyuStartResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuStartResponse::CopyFrom(const CaichengyuStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuStartResponse::IsInitialized() const {
  return true;
}

void CaichengyuStartResponse::InternalSwap(CaichengyuStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CaichengyuStartResponse, leveltip_)
      + sizeof(CaichengyuStartResponse::leveltip_)
      - PROTOBUF_FIELD_OFFSET(CaichengyuStartResponse, user_)>(
          reinterpret_cast<char*>(&user_),
          reinterpret_cast<char*>(&other->user_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuStartResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[45]);
}

// ===================================================================

class CaichengyuResultRequest::_Internal {
 public:
};

CaichengyuResultRequest::CaichengyuResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuResultRequest)
}
CaichengyuResultRequest::CaichengyuResultRequest(const CaichengyuResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  answer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_answer().empty()) {
    answer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_answer(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuResultRequest)
}

void CaichengyuResultRequest::SharedCtor() {
answer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CaichengyuResultRequest::~CaichengyuResultRequest() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  answer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CaichengyuResultRequest::ArenaDtor(void* object) {
  CaichengyuResultRequest* _this = reinterpret_cast< CaichengyuResultRequest* >(object);
  (void)_this;
}
void CaichengyuResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  answer_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Answer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_answer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.CaichengyuResultRequest.Answer"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Answer = 1;
  if (!this->answer().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_answer().data(), static_cast<int>(this->_internal_answer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.CaichengyuResultRequest.Answer");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_answer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuResultRequest)
  return target;
}

size_t CaichengyuResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Answer = 1;
  if (!this->answer().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_answer());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuResultRequest)
    MergeFrom(*source);
  }
}

void CaichengyuResultRequest::MergeFrom(const CaichengyuResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.answer().empty()) {
    _internal_set_answer(from._internal_answer());
  }
}

void CaichengyuResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuResultRequest::CopyFrom(const CaichengyuResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuResultRequest::IsInitialized() const {
  return true;
}

void CaichengyuResultRequest::InternalSwap(CaichengyuResultRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &answer_, GetArenaForAllocation(),
      &other->answer_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuResultRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[46]);
}

// ===================================================================

class CaichengyuResultResponse::_Internal {
 public:
};

CaichengyuResultResponse::CaichengyuResultResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuResultResponse)
}
CaichengyuResultResponse::CaichengyuResultResponse(const CaichengyuResultResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuResultResponse)
}

void CaichengyuResultResponse::SharedCtor() {
code_ = 0;
}

CaichengyuResultResponse::~CaichengyuResultResponse() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuResultResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuResultResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaichengyuResultResponse::ArenaDtor(void* object) {
  CaichengyuResultResponse* _this = reinterpret_cast< CaichengyuResultResponse* >(object);
  (void)_this;
}
void CaichengyuResultResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuResultResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuResultResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuResultResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuResultResponse)
  return target;
}

size_t CaichengyuResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuResultResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuResultResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuResultResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuResultResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuResultResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuResultResponse)
    MergeFrom(*source);
  }
}

void CaichengyuResultResponse::MergeFrom(const CaichengyuResultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void CaichengyuResultResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuResultResponse::CopyFrom(const CaichengyuResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuResultResponse::IsInitialized() const {
  return true;
}

void CaichengyuResultResponse::InternalSwap(CaichengyuResultResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuResultResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[47]);
}

// ===================================================================

class CaichengyuResetHpRequest::_Internal {
 public:
};

CaichengyuResetHpRequest::CaichengyuResetHpRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuResetHpRequest)
}
CaichengyuResetHpRequest::CaichengyuResetHpRequest(const CaichengyuResetHpRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuResetHpRequest)
}

void CaichengyuResetHpRequest::SharedCtor() {
}

CaichengyuResetHpRequest::~CaichengyuResetHpRequest() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuResetHpRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuResetHpRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaichengyuResetHpRequest::ArenaDtor(void* object) {
  CaichengyuResetHpRequest* _this = reinterpret_cast< CaichengyuResetHpRequest* >(object);
  (void)_this;
}
void CaichengyuResetHpRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuResetHpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuResetHpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuResetHpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuResetHpRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuResetHpRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuResetHpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuResetHpRequest)
  return target;
}

size_t CaichengyuResetHpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuResetHpRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuResetHpRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuResetHpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuResetHpRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuResetHpRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuResetHpRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuResetHpRequest)
    MergeFrom(*source);
  }
}

void CaichengyuResetHpRequest::MergeFrom(const CaichengyuResetHpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuResetHpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CaichengyuResetHpRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuResetHpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuResetHpRequest::CopyFrom(const CaichengyuResetHpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuResetHpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuResetHpRequest::IsInitialized() const {
  return true;
}

void CaichengyuResetHpRequest::InternalSwap(CaichengyuResetHpRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuResetHpRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[48]);
}

// ===================================================================

class CaichengyuResetHpResponse::_Internal {
 public:
};

CaichengyuResetHpResponse::CaichengyuResetHpResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuResetHpResponse)
}
CaichengyuResetHpResponse::CaichengyuResetHpResponse(const CaichengyuResetHpResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&hpdate_) -
    reinterpret_cast<char*>(&code_)) + sizeof(hpdate_));
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuResetHpResponse)
}

void CaichengyuResetHpResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&hpdate_) -
    reinterpret_cast<char*>(&code_)) + sizeof(hpdate_));
}

CaichengyuResetHpResponse::~CaichengyuResetHpResponse() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuResetHpResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuResetHpResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaichengyuResetHpResponse::ArenaDtor(void* object) {
  CaichengyuResetHpResponse* _this = reinterpret_cast< CaichengyuResetHpResponse* >(object);
  (void)_this;
}
void CaichengyuResetHpResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuResetHpResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuResetHpResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuResetHpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hpdate_) -
      reinterpret_cast<char*>(&code_)) + sizeof(hpdate_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuResetHpResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Hp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 HpDate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          hpdate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuResetHpResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuResetHpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_hp(), target);
  }

  // int64 HpDate = 3;
  if (this->hpdate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_hpdate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuResetHpResponse)
  return target;
}

size_t CaichengyuResetHpResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuResetHpResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hp());
  }

  // int64 HpDate = 3;
  if (this->hpdate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_hpdate());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuResetHpResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuResetHpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuResetHpResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuResetHpResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuResetHpResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuResetHpResponse)
    MergeFrom(*source);
  }
}

void CaichengyuResetHpResponse::MergeFrom(const CaichengyuResetHpResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuResetHpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
  if (from.hpdate() != 0) {
    _internal_set_hpdate(from._internal_hpdate());
  }
}

void CaichengyuResetHpResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuResetHpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuResetHpResponse::CopyFrom(const CaichengyuResetHpResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuResetHpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuResetHpResponse::IsInitialized() const {
  return true;
}

void CaichengyuResetHpResponse::InternalSwap(CaichengyuResetHpResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CaichengyuResetHpResponse, hpdate_)
      + sizeof(CaichengyuResetHpResponse::hpdate_)
      - PROTOBUF_FIELD_OFFSET(CaichengyuResetHpResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuResetHpResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[49]);
}

// ===================================================================

class CaichengyuUpgradeRoleRequest::_Internal {
 public:
};

CaichengyuUpgradeRoleRequest::CaichengyuUpgradeRoleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuUpgradeRoleRequest)
}
CaichengyuUpgradeRoleRequest::CaichengyuUpgradeRoleRequest(const CaichengyuUpgradeRoleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuUpgradeRoleRequest)
}

void CaichengyuUpgradeRoleRequest::SharedCtor() {
}

CaichengyuUpgradeRoleRequest::~CaichengyuUpgradeRoleRequest() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuUpgradeRoleRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuUpgradeRoleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaichengyuUpgradeRoleRequest::ArenaDtor(void* object) {
  CaichengyuUpgradeRoleRequest* _this = reinterpret_cast< CaichengyuUpgradeRoleRequest* >(object);
  (void)_this;
}
void CaichengyuUpgradeRoleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuUpgradeRoleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuUpgradeRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuUpgradeRoleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuUpgradeRoleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuUpgradeRoleRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuUpgradeRoleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuUpgradeRoleRequest)
  return target;
}

size_t CaichengyuUpgradeRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuUpgradeRoleRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuUpgradeRoleRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuUpgradeRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuUpgradeRoleRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuUpgradeRoleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuUpgradeRoleRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuUpgradeRoleRequest)
    MergeFrom(*source);
  }
}

void CaichengyuUpgradeRoleRequest::MergeFrom(const CaichengyuUpgradeRoleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuUpgradeRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CaichengyuUpgradeRoleRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuUpgradeRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuUpgradeRoleRequest::CopyFrom(const CaichengyuUpgradeRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuUpgradeRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuUpgradeRoleRequest::IsInitialized() const {
  return true;
}

void CaichengyuUpgradeRoleRequest::InternalSwap(CaichengyuUpgradeRoleRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuUpgradeRoleRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[50]);
}

// ===================================================================

class CaichengyuUpgradeRoleResponse::_Internal {
 public:
};

CaichengyuUpgradeRoleResponse::CaichengyuUpgradeRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuUpgradeRoleResponse)
}
CaichengyuUpgradeRoleResponse::CaichengyuUpgradeRoleResponse(const CaichengyuUpgradeRoleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&rolelevel_) -
    reinterpret_cast<char*>(&code_)) + sizeof(rolelevel_));
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuUpgradeRoleResponse)
}

void CaichengyuUpgradeRoleResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rolelevel_) -
    reinterpret_cast<char*>(&code_)) + sizeof(rolelevel_));
}

CaichengyuUpgradeRoleResponse::~CaichengyuUpgradeRoleResponse() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuUpgradeRoleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuUpgradeRoleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaichengyuUpgradeRoleResponse::ArenaDtor(void* object) {
  CaichengyuUpgradeRoleResponse* _this = reinterpret_cast< CaichengyuUpgradeRoleResponse* >(object);
  (void)_this;
}
void CaichengyuUpgradeRoleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuUpgradeRoleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuUpgradeRoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuUpgradeRoleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rolelevel_) -
      reinterpret_cast<char*>(&code_)) + sizeof(rolelevel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuUpgradeRoleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 RoleLevel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          rolelevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuUpgradeRoleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuUpgradeRoleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 RoleLevel = 2;
  if (this->rolelevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_rolelevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuUpgradeRoleResponse)
  return target;
}

size_t CaichengyuUpgradeRoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuUpgradeRoleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 RoleLevel = 2;
  if (this->rolelevel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rolelevel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuUpgradeRoleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuUpgradeRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuUpgradeRoleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuUpgradeRoleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuUpgradeRoleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuUpgradeRoleResponse)
    MergeFrom(*source);
  }
}

void CaichengyuUpgradeRoleResponse::MergeFrom(const CaichengyuUpgradeRoleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuUpgradeRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.rolelevel() != 0) {
    _internal_set_rolelevel(from._internal_rolelevel());
  }
}

void CaichengyuUpgradeRoleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuUpgradeRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuUpgradeRoleResponse::CopyFrom(const CaichengyuUpgradeRoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuUpgradeRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuUpgradeRoleResponse::IsInitialized() const {
  return true;
}

void CaichengyuUpgradeRoleResponse::InternalSwap(CaichengyuUpgradeRoleResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CaichengyuUpgradeRoleResponse, rolelevel_)
      + sizeof(CaichengyuUpgradeRoleResponse::rolelevel_)
      - PROTOBUF_FIELD_OFFSET(CaichengyuUpgradeRoleResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuUpgradeRoleResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[51]);
}

// ===================================================================

class CaichengyuUpgradeBuildRequest::_Internal {
 public:
};

CaichengyuUpgradeBuildRequest::CaichengyuUpgradeBuildRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuUpgradeBuildRequest)
}
CaichengyuUpgradeBuildRequest::CaichengyuUpgradeBuildRequest(const CaichengyuUpgradeBuildRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuUpgradeBuildRequest)
}

void CaichengyuUpgradeBuildRequest::SharedCtor() {
}

CaichengyuUpgradeBuildRequest::~CaichengyuUpgradeBuildRequest() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuUpgradeBuildRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuUpgradeBuildRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaichengyuUpgradeBuildRequest::ArenaDtor(void* object) {
  CaichengyuUpgradeBuildRequest* _this = reinterpret_cast< CaichengyuUpgradeBuildRequest* >(object);
  (void)_this;
}
void CaichengyuUpgradeBuildRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuUpgradeBuildRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuUpgradeBuildRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuUpgradeBuildRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuUpgradeBuildRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuUpgradeBuildRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuUpgradeBuildRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuUpgradeBuildRequest)
  return target;
}

size_t CaichengyuUpgradeBuildRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuUpgradeBuildRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuUpgradeBuildRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuUpgradeBuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuUpgradeBuildRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuUpgradeBuildRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuUpgradeBuildRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuUpgradeBuildRequest)
    MergeFrom(*source);
  }
}

void CaichengyuUpgradeBuildRequest::MergeFrom(const CaichengyuUpgradeBuildRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuUpgradeBuildRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CaichengyuUpgradeBuildRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuUpgradeBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuUpgradeBuildRequest::CopyFrom(const CaichengyuUpgradeBuildRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuUpgradeBuildRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuUpgradeBuildRequest::IsInitialized() const {
  return true;
}

void CaichengyuUpgradeBuildRequest::InternalSwap(CaichengyuUpgradeBuildRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuUpgradeBuildRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[52]);
}

// ===================================================================

class CaichengyuUpgradeBuildResponse::_Internal {
 public:
};

CaichengyuUpgradeBuildResponse::CaichengyuUpgradeBuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuUpgradeBuildResponse)
}
CaichengyuUpgradeBuildResponse::CaichengyuUpgradeBuildResponse(const CaichengyuUpgradeBuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&buildlevel_) -
    reinterpret_cast<char*>(&code_)) + sizeof(buildlevel_));
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuUpgradeBuildResponse)
}

void CaichengyuUpgradeBuildResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&buildlevel_) -
    reinterpret_cast<char*>(&code_)) + sizeof(buildlevel_));
}

CaichengyuUpgradeBuildResponse::~CaichengyuUpgradeBuildResponse() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuUpgradeBuildResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuUpgradeBuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaichengyuUpgradeBuildResponse::ArenaDtor(void* object) {
  CaichengyuUpgradeBuildResponse* _this = reinterpret_cast< CaichengyuUpgradeBuildResponse* >(object);
  (void)_this;
}
void CaichengyuUpgradeBuildResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuUpgradeBuildResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuUpgradeBuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuUpgradeBuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buildlevel_) -
      reinterpret_cast<char*>(&code_)) + sizeof(buildlevel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuUpgradeBuildResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 BuildLevel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          buildlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuUpgradeBuildResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuUpgradeBuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 BuildLevel = 2;
  if (this->buildlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_buildlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuUpgradeBuildResponse)
  return target;
}

size_t CaichengyuUpgradeBuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuUpgradeBuildResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 BuildLevel = 2;
  if (this->buildlevel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_buildlevel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuUpgradeBuildResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuUpgradeBuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuUpgradeBuildResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuUpgradeBuildResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuUpgradeBuildResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuUpgradeBuildResponse)
    MergeFrom(*source);
  }
}

void CaichengyuUpgradeBuildResponse::MergeFrom(const CaichengyuUpgradeBuildResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuUpgradeBuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.buildlevel() != 0) {
    _internal_set_buildlevel(from._internal_buildlevel());
  }
}

void CaichengyuUpgradeBuildResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuUpgradeBuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuUpgradeBuildResponse::CopyFrom(const CaichengyuUpgradeBuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuUpgradeBuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuUpgradeBuildResponse::IsInitialized() const {
  return true;
}

void CaichengyuUpgradeBuildResponse::InternalSwap(CaichengyuUpgradeBuildResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CaichengyuUpgradeBuildResponse, buildlevel_)
      + sizeof(CaichengyuUpgradeBuildResponse::buildlevel_)
      - PROTOBUF_FIELD_OFFSET(CaichengyuUpgradeBuildResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuUpgradeBuildResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[53]);
}

// ===================================================================

class CaichengyuGetHpRequest::_Internal {
 public:
};

CaichengyuGetHpRequest::CaichengyuGetHpRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuGetHpRequest)
}
CaichengyuGetHpRequest::CaichengyuGetHpRequest(const CaichengyuGetHpRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuGetHpRequest)
}

void CaichengyuGetHpRequest::SharedCtor() {
}

CaichengyuGetHpRequest::~CaichengyuGetHpRequest() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuGetHpRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuGetHpRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaichengyuGetHpRequest::ArenaDtor(void* object) {
  CaichengyuGetHpRequest* _this = reinterpret_cast< CaichengyuGetHpRequest* >(object);
  (void)_this;
}
void CaichengyuGetHpRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuGetHpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuGetHpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuGetHpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuGetHpRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuGetHpRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuGetHpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuGetHpRequest)
  return target;
}

size_t CaichengyuGetHpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuGetHpRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuGetHpRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuGetHpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuGetHpRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuGetHpRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuGetHpRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuGetHpRequest)
    MergeFrom(*source);
  }
}

void CaichengyuGetHpRequest::MergeFrom(const CaichengyuGetHpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuGetHpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CaichengyuGetHpRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuGetHpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuGetHpRequest::CopyFrom(const CaichengyuGetHpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuGetHpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuGetHpRequest::IsInitialized() const {
  return true;
}

void CaichengyuGetHpRequest::InternalSwap(CaichengyuGetHpRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuGetHpRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[54]);
}

// ===================================================================

class CaichengyuGetHpResponse::_Internal {
 public:
};

CaichengyuGetHpResponse::CaichengyuGetHpResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuGetHpResponse)
}
CaichengyuGetHpResponse::CaichengyuGetHpResponse(const CaichengyuGetHpResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&hp_) -
    reinterpret_cast<char*>(&code_)) + sizeof(hp_));
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuGetHpResponse)
}

void CaichengyuGetHpResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&hp_) -
    reinterpret_cast<char*>(&code_)) + sizeof(hp_));
}

CaichengyuGetHpResponse::~CaichengyuGetHpResponse() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuGetHpResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuGetHpResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaichengyuGetHpResponse::ArenaDtor(void* object) {
  CaichengyuGetHpResponse* _this = reinterpret_cast< CaichengyuGetHpResponse* >(object);
  (void)_this;
}
void CaichengyuGetHpResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuGetHpResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuGetHpResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuGetHpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hp_) -
      reinterpret_cast<char*>(&code_)) + sizeof(hp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuGetHpResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Hp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuGetHpResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuGetHpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_hp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuGetHpResponse)
  return target;
}

size_t CaichengyuGetHpResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuGetHpResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuGetHpResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuGetHpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuGetHpResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuGetHpResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuGetHpResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuGetHpResponse)
    MergeFrom(*source);
  }
}

void CaichengyuGetHpResponse::MergeFrom(const CaichengyuGetHpResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuGetHpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
}

void CaichengyuGetHpResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuGetHpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuGetHpResponse::CopyFrom(const CaichengyuGetHpResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuGetHpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuGetHpResponse::IsInitialized() const {
  return true;
}

void CaichengyuGetHpResponse::InternalSwap(CaichengyuGetHpResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CaichengyuGetHpResponse, hp_)
      + sizeof(CaichengyuGetHpResponse::hp_)
      - PROTOBUF_FIELD_OFFSET(CaichengyuGetHpResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuGetHpResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[55]);
}

// ===================================================================

class CaichengyuTipRequest::_Internal {
 public:
};

CaichengyuTipRequest::CaichengyuTipRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuTipRequest)
}
CaichengyuTipRequest::CaichengyuTipRequest(const CaichengyuTipRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuTipRequest)
}

void CaichengyuTipRequest::SharedCtor() {
}

CaichengyuTipRequest::~CaichengyuTipRequest() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuTipRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuTipRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaichengyuTipRequest::ArenaDtor(void* object) {
  CaichengyuTipRequest* _this = reinterpret_cast< CaichengyuTipRequest* >(object);
  (void)_this;
}
void CaichengyuTipRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuTipRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuTipRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuTipRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuTipRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuTipRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuTipRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuTipRequest)
  return target;
}

size_t CaichengyuTipRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuTipRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuTipRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuTipRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuTipRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuTipRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuTipRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuTipRequest)
    MergeFrom(*source);
  }
}

void CaichengyuTipRequest::MergeFrom(const CaichengyuTipRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuTipRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CaichengyuTipRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuTipRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuTipRequest::CopyFrom(const CaichengyuTipRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuTipRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuTipRequest::IsInitialized() const {
  return true;
}

void CaichengyuTipRequest::InternalSwap(CaichengyuTipRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuTipRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[56]);
}

// ===================================================================

class CaichengyuTipResponse::_Internal {
 public:
};

CaichengyuTipResponse::CaichengyuTipResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuTipResponse)
}
CaichengyuTipResponse::CaichengyuTipResponse(const CaichengyuTipResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&hp_) -
    reinterpret_cast<char*>(&code_)) + sizeof(hp_));
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuTipResponse)
}

void CaichengyuTipResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&hp_) -
    reinterpret_cast<char*>(&code_)) + sizeof(hp_));
}

CaichengyuTipResponse::~CaichengyuTipResponse() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuTipResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuTipResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaichengyuTipResponse::ArenaDtor(void* object) {
  CaichengyuTipResponse* _this = reinterpret_cast< CaichengyuTipResponse* >(object);
  (void)_this;
}
void CaichengyuTipResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuTipResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuTipResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuTipResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hp_) -
      reinterpret_cast<char*>(&code_)) + sizeof(hp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuTipResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 LevelTip = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          leveltip_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Hp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuTipResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuTipResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 LevelTip = 2;
  if (this->leveltip() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_leveltip(), target);
  }

  // int32 Hp = 3;
  if (this->hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_hp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuTipResponse)
  return target;
}

size_t CaichengyuTipResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuTipResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 LevelTip = 2;
  if (this->leveltip() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_leveltip());
  }

  // int32 Hp = 3;
  if (this->hp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuTipResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuTipResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuTipResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuTipResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuTipResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuTipResponse)
    MergeFrom(*source);
  }
}

void CaichengyuTipResponse::MergeFrom(const CaichengyuTipResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuTipResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.leveltip() != 0) {
    _internal_set_leveltip(from._internal_leveltip());
  }
  if (from.hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
}

void CaichengyuTipResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuTipResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuTipResponse::CopyFrom(const CaichengyuTipResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuTipResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuTipResponse::IsInitialized() const {
  return true;
}

void CaichengyuTipResponse::InternalSwap(CaichengyuTipResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CaichengyuTipResponse, hp_)
      + sizeof(CaichengyuTipResponse::hp_)
      - PROTOBUF_FIELD_OFFSET(CaichengyuTipResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuTipResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[57]);
}

// ===================================================================

class CaichengyuGetTipRequest::_Internal {
 public:
};

CaichengyuGetTipRequest::CaichengyuGetTipRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuGetTipRequest)
}
CaichengyuGetTipRequest::CaichengyuGetTipRequest(const CaichengyuGetTipRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuGetTipRequest)
}

void CaichengyuGetTipRequest::SharedCtor() {
}

CaichengyuGetTipRequest::~CaichengyuGetTipRequest() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuGetTipRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuGetTipRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaichengyuGetTipRequest::ArenaDtor(void* object) {
  CaichengyuGetTipRequest* _this = reinterpret_cast< CaichengyuGetTipRequest* >(object);
  (void)_this;
}
void CaichengyuGetTipRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuGetTipRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuGetTipRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuGetTipRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuGetTipRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuGetTipRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuGetTipRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuGetTipRequest)
  return target;
}

size_t CaichengyuGetTipRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuGetTipRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuGetTipRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuGetTipRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuGetTipRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuGetTipRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuGetTipRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuGetTipRequest)
    MergeFrom(*source);
  }
}

void CaichengyuGetTipRequest::MergeFrom(const CaichengyuGetTipRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuGetTipRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CaichengyuGetTipRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuGetTipRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuGetTipRequest::CopyFrom(const CaichengyuGetTipRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuGetTipRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuGetTipRequest::IsInitialized() const {
  return true;
}

void CaichengyuGetTipRequest::InternalSwap(CaichengyuGetTipRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuGetTipRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[58]);
}

// ===================================================================

class CaichengyuGetTipResponse::_Internal {
 public:
};

CaichengyuGetTipResponse::CaichengyuGetTipResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.CaichengyuGetTipResponse)
}
CaichengyuGetTipResponse::CaichengyuGetTipResponse(const CaichengyuGetTipResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&hp_) -
    reinterpret_cast<char*>(&code_)) + sizeof(hp_));
  // @@protoc_insertion_point(copy_constructor:gamepb.CaichengyuGetTipResponse)
}

void CaichengyuGetTipResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&hp_) -
    reinterpret_cast<char*>(&code_)) + sizeof(hp_));
}

CaichengyuGetTipResponse::~CaichengyuGetTipResponse() {
  // @@protoc_insertion_point(destructor:gamepb.CaichengyuGetTipResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaichengyuGetTipResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CaichengyuGetTipResponse::ArenaDtor(void* object) {
  CaichengyuGetTipResponse* _this = reinterpret_cast< CaichengyuGetTipResponse* >(object);
  (void)_this;
}
void CaichengyuGetTipResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaichengyuGetTipResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CaichengyuGetTipResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.CaichengyuGetTipResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hp_) -
      reinterpret_cast<char*>(&code_)) + sizeof(hp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaichengyuGetTipResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Hp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaichengyuGetTipResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.CaichengyuGetTipResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_hp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.CaichengyuGetTipResponse)
  return target;
}

size_t CaichengyuGetTipResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.CaichengyuGetTipResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaichengyuGetTipResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.CaichengyuGetTipResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CaichengyuGetTipResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaichengyuGetTipResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.CaichengyuGetTipResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.CaichengyuGetTipResponse)
    MergeFrom(*source);
  }
}

void CaichengyuGetTipResponse::MergeFrom(const CaichengyuGetTipResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.CaichengyuGetTipResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
}

void CaichengyuGetTipResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.CaichengyuGetTipResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaichengyuGetTipResponse::CopyFrom(const CaichengyuGetTipResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.CaichengyuGetTipResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaichengyuGetTipResponse::IsInitialized() const {
  return true;
}

void CaichengyuGetTipResponse::InternalSwap(CaichengyuGetTipResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CaichengyuGetTipResponse, hp_)
      + sizeof(CaichengyuGetTipResponse::hp_)
      - PROTOBUF_FIELD_OFFSET(CaichengyuGetTipResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CaichengyuGetTipResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[59]);
}

// ===================================================================

class FangkuainiaoGetDataRequest::_Internal {
 public:
};

FangkuainiaoGetDataRequest::FangkuainiaoGetDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoGetDataRequest)
}
FangkuainiaoGetDataRequest::FangkuainiaoGetDataRequest(const FangkuainiaoGetDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoGetDataRequest)
}

void FangkuainiaoGetDataRequest::SharedCtor() {
}

FangkuainiaoGetDataRequest::~FangkuainiaoGetDataRequest() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoGetDataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoGetDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoGetDataRequest::ArenaDtor(void* object) {
  FangkuainiaoGetDataRequest* _this = reinterpret_cast< FangkuainiaoGetDataRequest* >(object);
  (void)_this;
}
void FangkuainiaoGetDataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoGetDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoGetDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoGetDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoGetDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoGetDataRequest)
  return target;
}

size_t FangkuainiaoGetDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoGetDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoGetDataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoGetDataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoGetDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoGetDataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoGetDataRequest)
    MergeFrom(*source);
  }
}

void FangkuainiaoGetDataRequest::MergeFrom(const FangkuainiaoGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FangkuainiaoGetDataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoGetDataRequest::CopyFrom(const FangkuainiaoGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoGetDataRequest::IsInitialized() const {
  return true;
}

void FangkuainiaoGetDataRequest::InternalSwap(FangkuainiaoGetDataRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoGetDataRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[60]);
}

// ===================================================================

class FangkuainiaoGetDataResponse::_Internal {
 public:
};

FangkuainiaoGetDataResponse::FangkuainiaoGetDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoGetDataResponse)
}
FangkuainiaoGetDataResponse::FangkuainiaoGetDataResponse(const FangkuainiaoGetDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  birdarr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_birdarr().empty()) {
    birdarr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_birdarr(), 
      GetArenaForAllocation());
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoGetDataResponse)
}

void FangkuainiaoGetDataResponse::SharedCtor() {
birdarr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&userid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(level_));
}

FangkuainiaoGetDataResponse::~FangkuainiaoGetDataResponse() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoGetDataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoGetDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  birdarr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FangkuainiaoGetDataResponse::ArenaDtor(void* object) {
  FangkuainiaoGetDataResponse* _this = reinterpret_cast< FangkuainiaoGetDataResponse* >(object);
  (void)_this;
}
void FangkuainiaoGetDataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoGetDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoGetDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  birdarr_.ClearToEmpty();
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoGetDataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Userid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 BirdId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          birdid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string BirdArr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_birdarr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.FangkuainiaoGetDataResponse.BirdArr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 SignTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          signtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 SignDay = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          signday_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GetGoldCount = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          getgoldcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 GetGoldTime = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          getgoldtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Level = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GameId = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          gameid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoGetDataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_userid(), target);
  }

  // int32 BirdId = 3;
  if (this->birdid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_birdid(), target);
  }

  // string BirdArr = 4;
  if (!this->birdarr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_birdarr().data(), static_cast<int>(this->_internal_birdarr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.FangkuainiaoGetDataResponse.BirdArr");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_birdarr(), target);
  }

  // int64 SignTime = 5;
  if (this->signtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_signtime(), target);
  }

  // int64 SignDay = 6;
  if (this->signday() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_signday(), target);
  }

  // int32 GetGoldCount = 7;
  if (this->getgoldcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_getgoldcount(), target);
  }

  // int64 GetGoldTime = 8;
  if (this->getgoldtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_getgoldtime(), target);
  }

  // int64 Level = 9;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(9, this->_internal_level(), target);
  }

  // int32 GameId = 10;
  if (this->gameid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_gameid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoGetDataResponse)
  return target;
}

size_t FangkuainiaoGetDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoGetDataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string BirdArr = 4;
  if (!this->birdarr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_birdarr());
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_userid());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 BirdId = 3;
  if (this->birdid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_birdid());
  }

  // int64 SignTime = 5;
  if (this->signtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_signtime());
  }

  // int64 SignDay = 6;
  if (this->signday() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_signday());
  }

  // int64 GetGoldTime = 8;
  if (this->getgoldtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_getgoldtime());
  }

  // int32 GetGoldCount = 7;
  if (this->getgoldcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_getgoldcount());
  }

  // int32 GameId = 10;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gameid());
  }

  // int64 Level = 9;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoGetDataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoGetDataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoGetDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoGetDataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoGetDataResponse)
    MergeFrom(*source);
  }
}

void FangkuainiaoGetDataResponse::MergeFrom(const FangkuainiaoGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.birdarr().empty()) {
    _internal_set_birdarr(from._internal_birdarr());
  }
  if (from.userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.birdid() != 0) {
    _internal_set_birdid(from._internal_birdid());
  }
  if (from.signtime() != 0) {
    _internal_set_signtime(from._internal_signtime());
  }
  if (from.signday() != 0) {
    _internal_set_signday(from._internal_signday());
  }
  if (from.getgoldtime() != 0) {
    _internal_set_getgoldtime(from._internal_getgoldtime());
  }
  if (from.getgoldcount() != 0) {
    _internal_set_getgoldcount(from._internal_getgoldcount());
  }
  if (from.gameid() != 0) {
    _internal_set_gameid(from._internal_gameid());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
}

void FangkuainiaoGetDataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoGetDataResponse::CopyFrom(const FangkuainiaoGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoGetDataResponse::IsInitialized() const {
  return true;
}

void FangkuainiaoGetDataResponse::InternalSwap(FangkuainiaoGetDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &birdarr_, GetArenaForAllocation(),
      &other->birdarr_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FangkuainiaoGetDataResponse, level_)
      + sizeof(FangkuainiaoGetDataResponse::level_)
      - PROTOBUF_FIELD_OFFSET(FangkuainiaoGetDataResponse, userid_)>(
          reinterpret_cast<char*>(&userid_),
          reinterpret_cast<char*>(&other->userid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoGetDataResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[61]);
}

// ===================================================================

class FangkuainiaoBuySkinRequest::_Internal {
 public:
};

FangkuainiaoBuySkinRequest::FangkuainiaoBuySkinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoBuySkinRequest)
}
FangkuainiaoBuySkinRequest::FangkuainiaoBuySkinRequest(const FangkuainiaoBuySkinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  birdid_ = from.birdid_;
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoBuySkinRequest)
}

void FangkuainiaoBuySkinRequest::SharedCtor() {
birdid_ = 0;
}

FangkuainiaoBuySkinRequest::~FangkuainiaoBuySkinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoBuySkinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoBuySkinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoBuySkinRequest::ArenaDtor(void* object) {
  FangkuainiaoBuySkinRequest* _this = reinterpret_cast< FangkuainiaoBuySkinRequest* >(object);
  (void)_this;
}
void FangkuainiaoBuySkinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoBuySkinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoBuySkinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoBuySkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  birdid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoBuySkinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 BirdId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          birdid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoBuySkinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoBuySkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 BirdId = 1;
  if (this->birdid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_birdid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoBuySkinRequest)
  return target;
}

size_t FangkuainiaoBuySkinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoBuySkinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 BirdId = 1;
  if (this->birdid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_birdid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoBuySkinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoBuySkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoBuySkinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoBuySkinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoBuySkinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoBuySkinRequest)
    MergeFrom(*source);
  }
}

void FangkuainiaoBuySkinRequest::MergeFrom(const FangkuainiaoBuySkinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoBuySkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.birdid() != 0) {
    _internal_set_birdid(from._internal_birdid());
  }
}

void FangkuainiaoBuySkinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoBuySkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoBuySkinRequest::CopyFrom(const FangkuainiaoBuySkinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoBuySkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoBuySkinRequest::IsInitialized() const {
  return true;
}

void FangkuainiaoBuySkinRequest::InternalSwap(FangkuainiaoBuySkinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(birdid_, other->birdid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoBuySkinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[62]);
}

// ===================================================================

class FangkuainiaoBuySkinResponse::_Internal {
 public:
};

FangkuainiaoBuySkinResponse::FangkuainiaoBuySkinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoBuySkinResponse)
}
FangkuainiaoBuySkinResponse::FangkuainiaoBuySkinResponse(const FangkuainiaoBuySkinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&coin_) -
    reinterpret_cast<char*>(&code_)) + sizeof(coin_));
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoBuySkinResponse)
}

void FangkuainiaoBuySkinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&coin_) -
    reinterpret_cast<char*>(&code_)) + sizeof(coin_));
}

FangkuainiaoBuySkinResponse::~FangkuainiaoBuySkinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoBuySkinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoBuySkinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoBuySkinResponse::ArenaDtor(void* object) {
  FangkuainiaoBuySkinResponse* _this = reinterpret_cast< FangkuainiaoBuySkinResponse* >(object);
  (void)_this;
}
void FangkuainiaoBuySkinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoBuySkinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoBuySkinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoBuySkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coin_) -
      reinterpret_cast<char*>(&code_)) + sizeof(coin_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoBuySkinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 BirdId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          birdid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoBuySkinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoBuySkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 BirdId = 2;
  if (this->birdid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_birdid(), target);
  }

  // int64 Coin = 3;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoBuySkinResponse)
  return target;
}

size_t FangkuainiaoBuySkinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoBuySkinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 BirdId = 2;
  if (this->birdid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_birdid());
  }

  // int64 Coin = 3;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoBuySkinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoBuySkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoBuySkinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoBuySkinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoBuySkinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoBuySkinResponse)
    MergeFrom(*source);
  }
}

void FangkuainiaoBuySkinResponse::MergeFrom(const FangkuainiaoBuySkinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoBuySkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.birdid() != 0) {
    _internal_set_birdid(from._internal_birdid());
  }
  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
}

void FangkuainiaoBuySkinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoBuySkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoBuySkinResponse::CopyFrom(const FangkuainiaoBuySkinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoBuySkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoBuySkinResponse::IsInitialized() const {
  return true;
}

void FangkuainiaoBuySkinResponse::InternalSwap(FangkuainiaoBuySkinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FangkuainiaoBuySkinResponse, coin_)
      + sizeof(FangkuainiaoBuySkinResponse::coin_)
      - PROTOBUF_FIELD_OFFSET(FangkuainiaoBuySkinResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoBuySkinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[63]);
}

// ===================================================================

class FangkuainiaoUseSkinRequest::_Internal {
 public:
};

FangkuainiaoUseSkinRequest::FangkuainiaoUseSkinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoUseSkinRequest)
}
FangkuainiaoUseSkinRequest::FangkuainiaoUseSkinRequest(const FangkuainiaoUseSkinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  birdid_ = from.birdid_;
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoUseSkinRequest)
}

void FangkuainiaoUseSkinRequest::SharedCtor() {
birdid_ = 0;
}

FangkuainiaoUseSkinRequest::~FangkuainiaoUseSkinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoUseSkinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoUseSkinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoUseSkinRequest::ArenaDtor(void* object) {
  FangkuainiaoUseSkinRequest* _this = reinterpret_cast< FangkuainiaoUseSkinRequest* >(object);
  (void)_this;
}
void FangkuainiaoUseSkinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoUseSkinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoUseSkinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoUseSkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  birdid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoUseSkinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 BirdId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          birdid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoUseSkinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoUseSkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 BirdId = 1;
  if (this->birdid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_birdid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoUseSkinRequest)
  return target;
}

size_t FangkuainiaoUseSkinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoUseSkinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 BirdId = 1;
  if (this->birdid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_birdid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoUseSkinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoUseSkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoUseSkinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoUseSkinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoUseSkinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoUseSkinRequest)
    MergeFrom(*source);
  }
}

void FangkuainiaoUseSkinRequest::MergeFrom(const FangkuainiaoUseSkinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoUseSkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.birdid() != 0) {
    _internal_set_birdid(from._internal_birdid());
  }
}

void FangkuainiaoUseSkinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoUseSkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoUseSkinRequest::CopyFrom(const FangkuainiaoUseSkinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoUseSkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoUseSkinRequest::IsInitialized() const {
  return true;
}

void FangkuainiaoUseSkinRequest::InternalSwap(FangkuainiaoUseSkinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(birdid_, other->birdid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoUseSkinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[64]);
}

// ===================================================================

class FangkuainiaoUseSkinResponse::_Internal {
 public:
};

FangkuainiaoUseSkinResponse::FangkuainiaoUseSkinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoUseSkinResponse)
}
FangkuainiaoUseSkinResponse::FangkuainiaoUseSkinResponse(const FangkuainiaoUseSkinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&birdid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(birdid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoUseSkinResponse)
}

void FangkuainiaoUseSkinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&birdid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(birdid_));
}

FangkuainiaoUseSkinResponse::~FangkuainiaoUseSkinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoUseSkinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoUseSkinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoUseSkinResponse::ArenaDtor(void* object) {
  FangkuainiaoUseSkinResponse* _this = reinterpret_cast< FangkuainiaoUseSkinResponse* >(object);
  (void)_this;
}
void FangkuainiaoUseSkinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoUseSkinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoUseSkinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoUseSkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&birdid_) -
      reinterpret_cast<char*>(&code_)) + sizeof(birdid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoUseSkinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 BirdId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          birdid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoUseSkinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoUseSkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 BirdId = 2;
  if (this->birdid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_birdid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoUseSkinResponse)
  return target;
}

size_t FangkuainiaoUseSkinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoUseSkinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 BirdId = 2;
  if (this->birdid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_birdid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoUseSkinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoUseSkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoUseSkinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoUseSkinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoUseSkinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoUseSkinResponse)
    MergeFrom(*source);
  }
}

void FangkuainiaoUseSkinResponse::MergeFrom(const FangkuainiaoUseSkinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoUseSkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.birdid() != 0) {
    _internal_set_birdid(from._internal_birdid());
  }
}

void FangkuainiaoUseSkinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoUseSkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoUseSkinResponse::CopyFrom(const FangkuainiaoUseSkinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoUseSkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoUseSkinResponse::IsInitialized() const {
  return true;
}

void FangkuainiaoUseSkinResponse::InternalSwap(FangkuainiaoUseSkinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FangkuainiaoUseSkinResponse, birdid_)
      + sizeof(FangkuainiaoUseSkinResponse::birdid_)
      - PROTOBUF_FIELD_OFFSET(FangkuainiaoUseSkinResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoUseSkinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[65]);
}

// ===================================================================

class FangkuainiaoDaySignRequest::_Internal {
 public:
};

FangkuainiaoDaySignRequest::FangkuainiaoDaySignRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoDaySignRequest)
}
FangkuainiaoDaySignRequest::FangkuainiaoDaySignRequest(const FangkuainiaoDaySignRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoDaySignRequest)
}

void FangkuainiaoDaySignRequest::SharedCtor() {
}

FangkuainiaoDaySignRequest::~FangkuainiaoDaySignRequest() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoDaySignRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoDaySignRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoDaySignRequest::ArenaDtor(void* object) {
  FangkuainiaoDaySignRequest* _this = reinterpret_cast< FangkuainiaoDaySignRequest* >(object);
  (void)_this;
}
void FangkuainiaoDaySignRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoDaySignRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoDaySignRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoDaySignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoDaySignRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoDaySignRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoDaySignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoDaySignRequest)
  return target;
}

size_t FangkuainiaoDaySignRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoDaySignRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoDaySignRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoDaySignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoDaySignRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoDaySignRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoDaySignRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoDaySignRequest)
    MergeFrom(*source);
  }
}

void FangkuainiaoDaySignRequest::MergeFrom(const FangkuainiaoDaySignRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoDaySignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FangkuainiaoDaySignRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoDaySignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoDaySignRequest::CopyFrom(const FangkuainiaoDaySignRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoDaySignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoDaySignRequest::IsInitialized() const {
  return true;
}

void FangkuainiaoDaySignRequest::InternalSwap(FangkuainiaoDaySignRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoDaySignRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[66]);
}

// ===================================================================

class FangkuainiaoDaySignResponse::_Internal {
 public:
};

FangkuainiaoDaySignResponse::FangkuainiaoDaySignResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoDaySignResponse)
}
FangkuainiaoDaySignResponse::FangkuainiaoDaySignResponse(const FangkuainiaoDaySignResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoDaySignResponse)
}

void FangkuainiaoDaySignResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
}

FangkuainiaoDaySignResponse::~FangkuainiaoDaySignResponse() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoDaySignResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoDaySignResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoDaySignResponse::ArenaDtor(void* object) {
  FangkuainiaoDaySignResponse* _this = reinterpret_cast< FangkuainiaoDaySignResponse* >(object);
  (void)_this;
}
void FangkuainiaoDaySignResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoDaySignResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoDaySignResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoDaySignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoDaySignResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 SignTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          signtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoDaySignResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoDaySignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  // int64 SignTime = 4;
  if (this->signtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_signtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoDaySignResponse)
  return target;
}

size_t FangkuainiaoDaySignResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoDaySignResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int64 SignTime = 4;
  if (this->signtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_signtime());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoDaySignResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoDaySignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoDaySignResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoDaySignResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoDaySignResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoDaySignResponse)
    MergeFrom(*source);
  }
}

void FangkuainiaoDaySignResponse::MergeFrom(const FangkuainiaoDaySignResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoDaySignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.signtime() != 0) {
    _internal_set_signtime(from._internal_signtime());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void FangkuainiaoDaySignResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoDaySignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoDaySignResponse::CopyFrom(const FangkuainiaoDaySignResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoDaySignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoDaySignResponse::IsInitialized() const {
  return true;
}

void FangkuainiaoDaySignResponse::InternalSwap(FangkuainiaoDaySignResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FangkuainiaoDaySignResponse, code_)
      + sizeof(FangkuainiaoDaySignResponse::code_)
      - PROTOBUF_FIELD_OFFSET(FangkuainiaoDaySignResponse, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoDaySignResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[67]);
}

// ===================================================================

class FangkuainiaoGetCoinRequest::_Internal {
 public:
};

FangkuainiaoGetCoinRequest::FangkuainiaoGetCoinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoGetCoinRequest)
}
FangkuainiaoGetCoinRequest::FangkuainiaoGetCoinRequest(const FangkuainiaoGetCoinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoGetCoinRequest)
}

void FangkuainiaoGetCoinRequest::SharedCtor() {
}

FangkuainiaoGetCoinRequest::~FangkuainiaoGetCoinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoGetCoinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoGetCoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoGetCoinRequest::ArenaDtor(void* object) {
  FangkuainiaoGetCoinRequest* _this = reinterpret_cast< FangkuainiaoGetCoinRequest* >(object);
  (void)_this;
}
void FangkuainiaoGetCoinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoGetCoinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoGetCoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoGetCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoGetCoinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoGetCoinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoGetCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoGetCoinRequest)
  return target;
}

size_t FangkuainiaoGetCoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoGetCoinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoGetCoinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoGetCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoGetCoinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoGetCoinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoGetCoinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoGetCoinRequest)
    MergeFrom(*source);
  }
}

void FangkuainiaoGetCoinRequest::MergeFrom(const FangkuainiaoGetCoinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoGetCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FangkuainiaoGetCoinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoGetCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoGetCoinRequest::CopyFrom(const FangkuainiaoGetCoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoGetCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoGetCoinRequest::IsInitialized() const {
  return true;
}

void FangkuainiaoGetCoinRequest::InternalSwap(FangkuainiaoGetCoinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoGetCoinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[68]);
}

// ===================================================================

class FangkuainiaoGetCoinResponse::_Internal {
 public:
};

FangkuainiaoGetCoinResponse::FangkuainiaoGetCoinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoGetCoinResponse)
}
FangkuainiaoGetCoinResponse::FangkuainiaoGetCoinResponse(const FangkuainiaoGetCoinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoGetCoinResponse)
}

void FangkuainiaoGetCoinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
}

FangkuainiaoGetCoinResponse::~FangkuainiaoGetCoinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoGetCoinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoGetCoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoGetCoinResponse::ArenaDtor(void* object) {
  FangkuainiaoGetCoinResponse* _this = reinterpret_cast< FangkuainiaoGetCoinResponse* >(object);
  (void)_this;
}
void FangkuainiaoGetCoinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoGetCoinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoGetCoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoGetCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoGetCoinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoGetCoinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoGetCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoGetCoinResponse)
  return target;
}

size_t FangkuainiaoGetCoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoGetCoinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoGetCoinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoGetCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoGetCoinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoGetCoinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoGetCoinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoGetCoinResponse)
    MergeFrom(*source);
  }
}

void FangkuainiaoGetCoinResponse::MergeFrom(const FangkuainiaoGetCoinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoGetCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void FangkuainiaoGetCoinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoGetCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoGetCoinResponse::CopyFrom(const FangkuainiaoGetCoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoGetCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoGetCoinResponse::IsInitialized() const {
  return true;
}

void FangkuainiaoGetCoinResponse::InternalSwap(FangkuainiaoGetCoinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FangkuainiaoGetCoinResponse, code_)
      + sizeof(FangkuainiaoGetCoinResponse::code_)
      - PROTOBUF_FIELD_OFFSET(FangkuainiaoGetCoinResponse, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoGetCoinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[69]);
}

// ===================================================================

class FangkuainiaoGetInvincibleCoinRequest::_Internal {
 public:
};

FangkuainiaoGetInvincibleCoinRequest::FangkuainiaoGetInvincibleCoinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoGetInvincibleCoinRequest)
}
FangkuainiaoGetInvincibleCoinRequest::FangkuainiaoGetInvincibleCoinRequest(const FangkuainiaoGetInvincibleCoinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  coin_ = from.coin_;
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoGetInvincibleCoinRequest)
}

void FangkuainiaoGetInvincibleCoinRequest::SharedCtor() {
coin_ = int64_t{0};
}

FangkuainiaoGetInvincibleCoinRequest::~FangkuainiaoGetInvincibleCoinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoGetInvincibleCoinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoGetInvincibleCoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoGetInvincibleCoinRequest::ArenaDtor(void* object) {
  FangkuainiaoGetInvincibleCoinRequest* _this = reinterpret_cast< FangkuainiaoGetInvincibleCoinRequest* >(object);
  (void)_this;
}
void FangkuainiaoGetInvincibleCoinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoGetInvincibleCoinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoGetInvincibleCoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoGetInvincibleCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coin_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoGetInvincibleCoinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Coin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoGetInvincibleCoinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoGetInvincibleCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Coin = 1;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoGetInvincibleCoinRequest)
  return target;
}

size_t FangkuainiaoGetInvincibleCoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoGetInvincibleCoinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 1;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoGetInvincibleCoinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoGetInvincibleCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoGetInvincibleCoinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoGetInvincibleCoinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoGetInvincibleCoinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoGetInvincibleCoinRequest)
    MergeFrom(*source);
  }
}

void FangkuainiaoGetInvincibleCoinRequest::MergeFrom(const FangkuainiaoGetInvincibleCoinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoGetInvincibleCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
}

void FangkuainiaoGetInvincibleCoinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoGetInvincibleCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoGetInvincibleCoinRequest::CopyFrom(const FangkuainiaoGetInvincibleCoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoGetInvincibleCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoGetInvincibleCoinRequest::IsInitialized() const {
  return true;
}

void FangkuainiaoGetInvincibleCoinRequest::InternalSwap(FangkuainiaoGetInvincibleCoinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(coin_, other->coin_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoGetInvincibleCoinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[70]);
}

// ===================================================================

class FangkuainiaoGetInvincibleCoinResponse::_Internal {
 public:
};

FangkuainiaoGetInvincibleCoinResponse::FangkuainiaoGetInvincibleCoinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoGetInvincibleCoinResponse)
}
FangkuainiaoGetInvincibleCoinResponse::FangkuainiaoGetInvincibleCoinResponse(const FangkuainiaoGetInvincibleCoinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoGetInvincibleCoinResponse)
}

void FangkuainiaoGetInvincibleCoinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
}

FangkuainiaoGetInvincibleCoinResponse::~FangkuainiaoGetInvincibleCoinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoGetInvincibleCoinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoGetInvincibleCoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoGetInvincibleCoinResponse::ArenaDtor(void* object) {
  FangkuainiaoGetInvincibleCoinResponse* _this = reinterpret_cast< FangkuainiaoGetInvincibleCoinResponse* >(object);
  (void)_this;
}
void FangkuainiaoGetInvincibleCoinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoGetInvincibleCoinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoGetInvincibleCoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoGetInvincibleCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoGetInvincibleCoinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoGetInvincibleCoinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoGetInvincibleCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoGetInvincibleCoinResponse)
  return target;
}

size_t FangkuainiaoGetInvincibleCoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoGetInvincibleCoinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoGetInvincibleCoinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoGetInvincibleCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoGetInvincibleCoinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoGetInvincibleCoinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoGetInvincibleCoinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoGetInvincibleCoinResponse)
    MergeFrom(*source);
  }
}

void FangkuainiaoGetInvincibleCoinResponse::MergeFrom(const FangkuainiaoGetInvincibleCoinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoGetInvincibleCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void FangkuainiaoGetInvincibleCoinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoGetInvincibleCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoGetInvincibleCoinResponse::CopyFrom(const FangkuainiaoGetInvincibleCoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoGetInvincibleCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoGetInvincibleCoinResponse::IsInitialized() const {
  return true;
}

void FangkuainiaoGetInvincibleCoinResponse::InternalSwap(FangkuainiaoGetInvincibleCoinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FangkuainiaoGetInvincibleCoinResponse, code_)
      + sizeof(FangkuainiaoGetInvincibleCoinResponse::code_)
      - PROTOBUF_FIELD_OFFSET(FangkuainiaoGetInvincibleCoinResponse, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoGetInvincibleCoinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[71]);
}

// ===================================================================

class FangkuainiaoGetLevelCoinRequest::_Internal {
 public:
};

FangkuainiaoGetLevelCoinRequest::FangkuainiaoGetLevelCoinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoGetLevelCoinRequest)
}
FangkuainiaoGetLevelCoinRequest::FangkuainiaoGetLevelCoinRequest(const FangkuainiaoGetLevelCoinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  coin_ = from.coin_;
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoGetLevelCoinRequest)
}

void FangkuainiaoGetLevelCoinRequest::SharedCtor() {
coin_ = int64_t{0};
}

FangkuainiaoGetLevelCoinRequest::~FangkuainiaoGetLevelCoinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoGetLevelCoinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoGetLevelCoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoGetLevelCoinRequest::ArenaDtor(void* object) {
  FangkuainiaoGetLevelCoinRequest* _this = reinterpret_cast< FangkuainiaoGetLevelCoinRequest* >(object);
  (void)_this;
}
void FangkuainiaoGetLevelCoinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoGetLevelCoinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoGetLevelCoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoGetLevelCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coin_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoGetLevelCoinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Coin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoGetLevelCoinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoGetLevelCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Coin = 1;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoGetLevelCoinRequest)
  return target;
}

size_t FangkuainiaoGetLevelCoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoGetLevelCoinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 1;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoGetLevelCoinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoGetLevelCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoGetLevelCoinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoGetLevelCoinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoGetLevelCoinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoGetLevelCoinRequest)
    MergeFrom(*source);
  }
}

void FangkuainiaoGetLevelCoinRequest::MergeFrom(const FangkuainiaoGetLevelCoinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoGetLevelCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
}

void FangkuainiaoGetLevelCoinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoGetLevelCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoGetLevelCoinRequest::CopyFrom(const FangkuainiaoGetLevelCoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoGetLevelCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoGetLevelCoinRequest::IsInitialized() const {
  return true;
}

void FangkuainiaoGetLevelCoinRequest::InternalSwap(FangkuainiaoGetLevelCoinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(coin_, other->coin_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoGetLevelCoinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[72]);
}

// ===================================================================

class FangkuainiaoGetLevelCoinResponse::_Internal {
 public:
};

FangkuainiaoGetLevelCoinResponse::FangkuainiaoGetLevelCoinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoGetLevelCoinResponse)
}
FangkuainiaoGetLevelCoinResponse::FangkuainiaoGetLevelCoinResponse(const FangkuainiaoGetLevelCoinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoGetLevelCoinResponse)
}

void FangkuainiaoGetLevelCoinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
}

FangkuainiaoGetLevelCoinResponse::~FangkuainiaoGetLevelCoinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoGetLevelCoinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoGetLevelCoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoGetLevelCoinResponse::ArenaDtor(void* object) {
  FangkuainiaoGetLevelCoinResponse* _this = reinterpret_cast< FangkuainiaoGetLevelCoinResponse* >(object);
  (void)_this;
}
void FangkuainiaoGetLevelCoinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoGetLevelCoinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoGetLevelCoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoGetLevelCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoGetLevelCoinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoGetLevelCoinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoGetLevelCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoGetLevelCoinResponse)
  return target;
}

size_t FangkuainiaoGetLevelCoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoGetLevelCoinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoGetLevelCoinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoGetLevelCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoGetLevelCoinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoGetLevelCoinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoGetLevelCoinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoGetLevelCoinResponse)
    MergeFrom(*source);
  }
}

void FangkuainiaoGetLevelCoinResponse::MergeFrom(const FangkuainiaoGetLevelCoinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoGetLevelCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void FangkuainiaoGetLevelCoinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoGetLevelCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoGetLevelCoinResponse::CopyFrom(const FangkuainiaoGetLevelCoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoGetLevelCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoGetLevelCoinResponse::IsInitialized() const {
  return true;
}

void FangkuainiaoGetLevelCoinResponse::InternalSwap(FangkuainiaoGetLevelCoinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FangkuainiaoGetLevelCoinResponse, code_)
      + sizeof(FangkuainiaoGetLevelCoinResponse::code_)
      - PROTOBUF_FIELD_OFFSET(FangkuainiaoGetLevelCoinResponse, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoGetLevelCoinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[73]);
}

// ===================================================================

class FangkuainiaoStartRequest::_Internal {
 public:
};

FangkuainiaoStartRequest::FangkuainiaoStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoStartRequest)
}
FangkuainiaoStartRequest::FangkuainiaoStartRequest(const FangkuainiaoStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoStartRequest)
}

void FangkuainiaoStartRequest::SharedCtor() {
}

FangkuainiaoStartRequest::~FangkuainiaoStartRequest() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoStartRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoStartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoStartRequest::ArenaDtor(void* object) {
  FangkuainiaoStartRequest* _this = reinterpret_cast< FangkuainiaoStartRequest* >(object);
  (void)_this;
}
void FangkuainiaoStartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoStartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoStartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoStartRequest)
  return target;
}

size_t FangkuainiaoStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoStartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoStartRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoStartRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoStartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoStartRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoStartRequest)
    MergeFrom(*source);
  }
}

void FangkuainiaoStartRequest::MergeFrom(const FangkuainiaoStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FangkuainiaoStartRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoStartRequest::CopyFrom(const FangkuainiaoStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoStartRequest::IsInitialized() const {
  return true;
}

void FangkuainiaoStartRequest::InternalSwap(FangkuainiaoStartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoStartRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[74]);
}

// ===================================================================

class FangkuainiaoStartResponse::_Internal {
 public:
};

FangkuainiaoStartResponse::FangkuainiaoStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoStartResponse)
}
FangkuainiaoStartResponse::FangkuainiaoStartResponse(const FangkuainiaoStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoStartResponse)
}

void FangkuainiaoStartResponse::SharedCtor() {
code_ = 0;
}

FangkuainiaoStartResponse::~FangkuainiaoStartResponse() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoStartResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoStartResponse::ArenaDtor(void* object) {
  FangkuainiaoStartResponse* _this = reinterpret_cast< FangkuainiaoStartResponse* >(object);
  (void)_this;
}
void FangkuainiaoStartResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoStartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoStartResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoStartResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoStartResponse)
  return target;
}

size_t FangkuainiaoStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoStartResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoStartResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoStartResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoStartResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoStartResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoStartResponse)
    MergeFrom(*source);
  }
}

void FangkuainiaoStartResponse::MergeFrom(const FangkuainiaoStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void FangkuainiaoStartResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoStartResponse::CopyFrom(const FangkuainiaoStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoStartResponse::IsInitialized() const {
  return true;
}

void FangkuainiaoStartResponse::InternalSwap(FangkuainiaoStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoStartResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[75]);
}

// ===================================================================

class FangkuainiaoResultRequest::_Internal {
 public:
};

FangkuainiaoResultRequest::FangkuainiaoResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoResultRequest)
}
FangkuainiaoResultRequest::FangkuainiaoResultRequest(const FangkuainiaoResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoResultRequest)
}

void FangkuainiaoResultRequest::SharedCtor() {
result_ = 0;
}

FangkuainiaoResultRequest::~FangkuainiaoResultRequest() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoResultRequest::ArenaDtor(void* object) {
  FangkuainiaoResultRequest* _this = reinterpret_cast< FangkuainiaoResultRequest* >(object);
  (void)_this;
}
void FangkuainiaoResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoResultRequest)
  return target;
}

size_t FangkuainiaoResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoResultRequest)
    MergeFrom(*source);
  }
}

void FangkuainiaoResultRequest::MergeFrom(const FangkuainiaoResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void FangkuainiaoResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoResultRequest::CopyFrom(const FangkuainiaoResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoResultRequest::IsInitialized() const {
  return true;
}

void FangkuainiaoResultRequest::InternalSwap(FangkuainiaoResultRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoResultRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[76]);
}

// ===================================================================

class FangkuainiaoResultResponse::_Internal {
 public:
};

FangkuainiaoResultResponse::FangkuainiaoResultResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.FangkuainiaoResultResponse)
}
FangkuainiaoResultResponse::FangkuainiaoResultResponse(const FangkuainiaoResultResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.FangkuainiaoResultResponse)
}

void FangkuainiaoResultResponse::SharedCtor() {
code_ = 0;
}

FangkuainiaoResultResponse::~FangkuainiaoResultResponse() {
  // @@protoc_insertion_point(destructor:gamepb.FangkuainiaoResultResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FangkuainiaoResultResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FangkuainiaoResultResponse::ArenaDtor(void* object) {
  FangkuainiaoResultResponse* _this = reinterpret_cast< FangkuainiaoResultResponse* >(object);
  (void)_this;
}
void FangkuainiaoResultResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FangkuainiaoResultResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FangkuainiaoResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.FangkuainiaoResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FangkuainiaoResultResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FangkuainiaoResultResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.FangkuainiaoResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.FangkuainiaoResultResponse)
  return target;
}

size_t FangkuainiaoResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.FangkuainiaoResultResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FangkuainiaoResultResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.FangkuainiaoResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FangkuainiaoResultResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FangkuainiaoResultResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.FangkuainiaoResultResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.FangkuainiaoResultResponse)
    MergeFrom(*source);
  }
}

void FangkuainiaoResultResponse::MergeFrom(const FangkuainiaoResultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.FangkuainiaoResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void FangkuainiaoResultResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.FangkuainiaoResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FangkuainiaoResultResponse::CopyFrom(const FangkuainiaoResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.FangkuainiaoResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FangkuainiaoResultResponse::IsInitialized() const {
  return true;
}

void FangkuainiaoResultResponse::InternalSwap(FangkuainiaoResultResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FangkuainiaoResultResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[77]);
}

// ===================================================================

class GongjianchuanshuGetDataRequest::_Internal {
 public:
};

GongjianchuanshuGetDataRequest::GongjianchuanshuGetDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuGetDataRequest)
}
GongjianchuanshuGetDataRequest::GongjianchuanshuGetDataRequest(const GongjianchuanshuGetDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuGetDataRequest)
}

void GongjianchuanshuGetDataRequest::SharedCtor() {
}

GongjianchuanshuGetDataRequest::~GongjianchuanshuGetDataRequest() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuGetDataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuGetDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuGetDataRequest::ArenaDtor(void* object) {
  GongjianchuanshuGetDataRequest* _this = reinterpret_cast< GongjianchuanshuGetDataRequest* >(object);
  (void)_this;
}
void GongjianchuanshuGetDataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuGetDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuGetDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuGetDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuGetDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuGetDataRequest)
  return target;
}

size_t GongjianchuanshuGetDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuGetDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuGetDataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuGetDataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuGetDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuGetDataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuGetDataRequest)
    MergeFrom(*source);
  }
}

void GongjianchuanshuGetDataRequest::MergeFrom(const GongjianchuanshuGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GongjianchuanshuGetDataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuGetDataRequest::CopyFrom(const GongjianchuanshuGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuGetDataRequest::IsInitialized() const {
  return true;
}

void GongjianchuanshuGetDataRequest::InternalSwap(GongjianchuanshuGetDataRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuGetDataRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[78]);
}

// ===================================================================

class GongjianchuanshuGetDataResponse::_Internal {
 public:
};

GongjianchuanshuGetDataResponse::GongjianchuanshuGetDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuGetDataResponse)
}
GongjianchuanshuGetDataResponse::GongjianchuanshuGetDataResponse(const GongjianchuanshuGetDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  skinarr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_skinarr().empty()) {
    skinarr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_skinarr(), 
      GetArenaForAllocation());
  }
  shoparr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_shoparr().empty()) {
    shoparr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_shoparr(), 
      GetArenaForAllocation());
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuGetDataResponse)
}

void GongjianchuanshuGetDataResponse::SharedCtor() {
skinarr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
shoparr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&userid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(level_));
}

GongjianchuanshuGetDataResponse::~GongjianchuanshuGetDataResponse() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuGetDataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuGetDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  skinarr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  shoparr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GongjianchuanshuGetDataResponse::ArenaDtor(void* object) {
  GongjianchuanshuGetDataResponse* _this = reinterpret_cast< GongjianchuanshuGetDataResponse* >(object);
  (void)_this;
}
void GongjianchuanshuGetDataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuGetDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuGetDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skinarr_.ClearToEmpty();
  shoparr_.ClearToEmpty();
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuGetDataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Userid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SkinId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          skinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string SkinArr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_skinarr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.GongjianchuanshuGetDataResponse.SkinArr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ShopArr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_shoparr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.GongjianchuanshuGetDataResponse.ShopArr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Level = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GameId = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          gameid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuGetDataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_userid(), target);
  }

  // int32 SkinId = 3;
  if (this->skinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_skinid(), target);
  }

  // string SkinArr = 4;
  if (!this->skinarr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_skinarr().data(), static_cast<int>(this->_internal_skinarr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.GongjianchuanshuGetDataResponse.SkinArr");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_skinarr(), target);
  }

  // string ShopArr = 5;
  if (!this->shoparr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_shoparr().data(), static_cast<int>(this->_internal_shoparr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.GongjianchuanshuGetDataResponse.ShopArr");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_shoparr(), target);
  }

  // int64 Level = 9;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(9, this->_internal_level(), target);
  }

  // int32 GameId = 10;
  if (this->gameid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_gameid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuGetDataResponse)
  return target;
}

size_t GongjianchuanshuGetDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuGetDataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SkinArr = 4;
  if (!this->skinarr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_skinarr());
  }

  // string ShopArr = 5;
  if (!this->shoparr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_shoparr());
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_userid());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 SkinId = 3;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skinid());
  }

  // int32 GameId = 10;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gameid());
  }

  // int64 Level = 9;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuGetDataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuGetDataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuGetDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuGetDataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuGetDataResponse)
    MergeFrom(*source);
  }
}

void GongjianchuanshuGetDataResponse::MergeFrom(const GongjianchuanshuGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.skinarr().empty()) {
    _internal_set_skinarr(from._internal_skinarr());
  }
  if (!from.shoparr().empty()) {
    _internal_set_shoparr(from._internal_shoparr());
  }
  if (from.userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.skinid() != 0) {
    _internal_set_skinid(from._internal_skinid());
  }
  if (from.gameid() != 0) {
    _internal_set_gameid(from._internal_gameid());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
}

void GongjianchuanshuGetDataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuGetDataResponse::CopyFrom(const GongjianchuanshuGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuGetDataResponse::IsInitialized() const {
  return true;
}

void GongjianchuanshuGetDataResponse::InternalSwap(GongjianchuanshuGetDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &skinarr_, GetArenaForAllocation(),
      &other->skinarr_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &shoparr_, GetArenaForAllocation(),
      &other->shoparr_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GongjianchuanshuGetDataResponse, level_)
      + sizeof(GongjianchuanshuGetDataResponse::level_)
      - PROTOBUF_FIELD_OFFSET(GongjianchuanshuGetDataResponse, userid_)>(
          reinterpret_cast<char*>(&userid_),
          reinterpret_cast<char*>(&other->userid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuGetDataResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[79]);
}

// ===================================================================

class GongjianchuanshuAwardCoinRequest::_Internal {
 public:
};

GongjianchuanshuAwardCoinRequest::GongjianchuanshuAwardCoinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuAwardCoinRequest)
}
GongjianchuanshuAwardCoinRequest::GongjianchuanshuAwardCoinRequest(const GongjianchuanshuAwardCoinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  coin_ = from.coin_;
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuAwardCoinRequest)
}

void GongjianchuanshuAwardCoinRequest::SharedCtor() {
coin_ = int64_t{0};
}

GongjianchuanshuAwardCoinRequest::~GongjianchuanshuAwardCoinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuAwardCoinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuAwardCoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuAwardCoinRequest::ArenaDtor(void* object) {
  GongjianchuanshuAwardCoinRequest* _this = reinterpret_cast< GongjianchuanshuAwardCoinRequest* >(object);
  (void)_this;
}
void GongjianchuanshuAwardCoinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuAwardCoinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuAwardCoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuAwardCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coin_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuAwardCoinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Coin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuAwardCoinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuAwardCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Coin = 1;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuAwardCoinRequest)
  return target;
}

size_t GongjianchuanshuAwardCoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuAwardCoinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 1;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuAwardCoinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuAwardCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuAwardCoinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuAwardCoinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuAwardCoinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuAwardCoinRequest)
    MergeFrom(*source);
  }
}

void GongjianchuanshuAwardCoinRequest::MergeFrom(const GongjianchuanshuAwardCoinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuAwardCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
}

void GongjianchuanshuAwardCoinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuAwardCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuAwardCoinRequest::CopyFrom(const GongjianchuanshuAwardCoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuAwardCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuAwardCoinRequest::IsInitialized() const {
  return true;
}

void GongjianchuanshuAwardCoinRequest::InternalSwap(GongjianchuanshuAwardCoinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(coin_, other->coin_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuAwardCoinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[80]);
}

// ===================================================================

class GongjianchuanshuAwardCoinResponse::_Internal {
 public:
};

GongjianchuanshuAwardCoinResponse::GongjianchuanshuAwardCoinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuAwardCoinResponse)
}
GongjianchuanshuAwardCoinResponse::GongjianchuanshuAwardCoinResponse(const GongjianchuanshuAwardCoinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuAwardCoinResponse)
}

void GongjianchuanshuAwardCoinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
}

GongjianchuanshuAwardCoinResponse::~GongjianchuanshuAwardCoinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuAwardCoinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuAwardCoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuAwardCoinResponse::ArenaDtor(void* object) {
  GongjianchuanshuAwardCoinResponse* _this = reinterpret_cast< GongjianchuanshuAwardCoinResponse* >(object);
  (void)_this;
}
void GongjianchuanshuAwardCoinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuAwardCoinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuAwardCoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuAwardCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuAwardCoinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuAwardCoinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuAwardCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuAwardCoinResponse)
  return target;
}

size_t GongjianchuanshuAwardCoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuAwardCoinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuAwardCoinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuAwardCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuAwardCoinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuAwardCoinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuAwardCoinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuAwardCoinResponse)
    MergeFrom(*source);
  }
}

void GongjianchuanshuAwardCoinResponse::MergeFrom(const GongjianchuanshuAwardCoinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuAwardCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GongjianchuanshuAwardCoinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuAwardCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuAwardCoinResponse::CopyFrom(const GongjianchuanshuAwardCoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuAwardCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuAwardCoinResponse::IsInitialized() const {
  return true;
}

void GongjianchuanshuAwardCoinResponse::InternalSwap(GongjianchuanshuAwardCoinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GongjianchuanshuAwardCoinResponse, code_)
      + sizeof(GongjianchuanshuAwardCoinResponse::code_)
      - PROTOBUF_FIELD_OFFSET(GongjianchuanshuAwardCoinResponse, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuAwardCoinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[81]);
}

// ===================================================================

class GongjianchuanshuUnlockSkinRequest::_Internal {
 public:
};

GongjianchuanshuUnlockSkinRequest::GongjianchuanshuUnlockSkinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuUnlockSkinRequest)
}
GongjianchuanshuUnlockSkinRequest::GongjianchuanshuUnlockSkinRequest(const GongjianchuanshuUnlockSkinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  shopindex_ = from.shopindex_;
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuUnlockSkinRequest)
}

void GongjianchuanshuUnlockSkinRequest::SharedCtor() {
shopindex_ = 0;
}

GongjianchuanshuUnlockSkinRequest::~GongjianchuanshuUnlockSkinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuUnlockSkinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuUnlockSkinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuUnlockSkinRequest::ArenaDtor(void* object) {
  GongjianchuanshuUnlockSkinRequest* _this = reinterpret_cast< GongjianchuanshuUnlockSkinRequest* >(object);
  (void)_this;
}
void GongjianchuanshuUnlockSkinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuUnlockSkinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuUnlockSkinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuUnlockSkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shopindex_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuUnlockSkinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 ShopIndex = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          shopindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuUnlockSkinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuUnlockSkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ShopIndex = 1;
  if (this->shopindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_shopindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuUnlockSkinRequest)
  return target;
}

size_t GongjianchuanshuUnlockSkinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuUnlockSkinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 ShopIndex = 1;
  if (this->shopindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_shopindex());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuUnlockSkinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuUnlockSkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuUnlockSkinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuUnlockSkinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuUnlockSkinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuUnlockSkinRequest)
    MergeFrom(*source);
  }
}

void GongjianchuanshuUnlockSkinRequest::MergeFrom(const GongjianchuanshuUnlockSkinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuUnlockSkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shopindex() != 0) {
    _internal_set_shopindex(from._internal_shopindex());
  }
}

void GongjianchuanshuUnlockSkinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuUnlockSkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuUnlockSkinRequest::CopyFrom(const GongjianchuanshuUnlockSkinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuUnlockSkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuUnlockSkinRequest::IsInitialized() const {
  return true;
}

void GongjianchuanshuUnlockSkinRequest::InternalSwap(GongjianchuanshuUnlockSkinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(shopindex_, other->shopindex_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuUnlockSkinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[82]);
}

// ===================================================================

class GongjianchuanshuUnlockSkinResponse::_Internal {
 public:
};

GongjianchuanshuUnlockSkinResponse::GongjianchuanshuUnlockSkinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuUnlockSkinResponse)
}
GongjianchuanshuUnlockSkinResponse::GongjianchuanshuUnlockSkinResponse(const GongjianchuanshuUnlockSkinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuUnlockSkinResponse)
}

void GongjianchuanshuUnlockSkinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
}

GongjianchuanshuUnlockSkinResponse::~GongjianchuanshuUnlockSkinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuUnlockSkinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuUnlockSkinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuUnlockSkinResponse::ArenaDtor(void* object) {
  GongjianchuanshuUnlockSkinResponse* _this = reinterpret_cast< GongjianchuanshuUnlockSkinResponse* >(object);
  (void)_this;
}
void GongjianchuanshuUnlockSkinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuUnlockSkinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuUnlockSkinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuUnlockSkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuUnlockSkinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuUnlockSkinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuUnlockSkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuUnlockSkinResponse)
  return target;
}

size_t GongjianchuanshuUnlockSkinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuUnlockSkinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuUnlockSkinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuUnlockSkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuUnlockSkinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuUnlockSkinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuUnlockSkinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuUnlockSkinResponse)
    MergeFrom(*source);
  }
}

void GongjianchuanshuUnlockSkinResponse::MergeFrom(const GongjianchuanshuUnlockSkinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuUnlockSkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GongjianchuanshuUnlockSkinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuUnlockSkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuUnlockSkinResponse::CopyFrom(const GongjianchuanshuUnlockSkinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuUnlockSkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuUnlockSkinResponse::IsInitialized() const {
  return true;
}

void GongjianchuanshuUnlockSkinResponse::InternalSwap(GongjianchuanshuUnlockSkinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GongjianchuanshuUnlockSkinResponse, code_)
      + sizeof(GongjianchuanshuUnlockSkinResponse::code_)
      - PROTOBUF_FIELD_OFFSET(GongjianchuanshuUnlockSkinResponse, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuUnlockSkinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[83]);
}

// ===================================================================

class GongjianchuanshuUseSkinRequest::_Internal {
 public:
};

GongjianchuanshuUseSkinRequest::GongjianchuanshuUseSkinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuUseSkinRequest)
}
GongjianchuanshuUseSkinRequest::GongjianchuanshuUseSkinRequest(const GongjianchuanshuUseSkinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  shopindex_ = from.shopindex_;
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuUseSkinRequest)
}

void GongjianchuanshuUseSkinRequest::SharedCtor() {
shopindex_ = 0;
}

GongjianchuanshuUseSkinRequest::~GongjianchuanshuUseSkinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuUseSkinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuUseSkinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuUseSkinRequest::ArenaDtor(void* object) {
  GongjianchuanshuUseSkinRequest* _this = reinterpret_cast< GongjianchuanshuUseSkinRequest* >(object);
  (void)_this;
}
void GongjianchuanshuUseSkinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuUseSkinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuUseSkinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuUseSkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shopindex_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuUseSkinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 ShopIndex = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          shopindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuUseSkinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuUseSkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ShopIndex = 1;
  if (this->shopindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_shopindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuUseSkinRequest)
  return target;
}

size_t GongjianchuanshuUseSkinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuUseSkinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 ShopIndex = 1;
  if (this->shopindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_shopindex());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuUseSkinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuUseSkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuUseSkinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuUseSkinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuUseSkinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuUseSkinRequest)
    MergeFrom(*source);
  }
}

void GongjianchuanshuUseSkinRequest::MergeFrom(const GongjianchuanshuUseSkinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuUseSkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shopindex() != 0) {
    _internal_set_shopindex(from._internal_shopindex());
  }
}

void GongjianchuanshuUseSkinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuUseSkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuUseSkinRequest::CopyFrom(const GongjianchuanshuUseSkinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuUseSkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuUseSkinRequest::IsInitialized() const {
  return true;
}

void GongjianchuanshuUseSkinRequest::InternalSwap(GongjianchuanshuUseSkinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(shopindex_, other->shopindex_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuUseSkinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[84]);
}

// ===================================================================

class GongjianchuanshuUseSkinResponse::_Internal {
 public:
};

GongjianchuanshuUseSkinResponse::GongjianchuanshuUseSkinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuUseSkinResponse)
}
GongjianchuanshuUseSkinResponse::GongjianchuanshuUseSkinResponse(const GongjianchuanshuUseSkinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuUseSkinResponse)
}

void GongjianchuanshuUseSkinResponse::SharedCtor() {
code_ = 0;
}

GongjianchuanshuUseSkinResponse::~GongjianchuanshuUseSkinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuUseSkinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuUseSkinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuUseSkinResponse::ArenaDtor(void* object) {
  GongjianchuanshuUseSkinResponse* _this = reinterpret_cast< GongjianchuanshuUseSkinResponse* >(object);
  (void)_this;
}
void GongjianchuanshuUseSkinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuUseSkinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuUseSkinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuUseSkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuUseSkinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuUseSkinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuUseSkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuUseSkinResponse)
  return target;
}

size_t GongjianchuanshuUseSkinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuUseSkinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuUseSkinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuUseSkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuUseSkinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuUseSkinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuUseSkinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuUseSkinResponse)
    MergeFrom(*source);
  }
}

void GongjianchuanshuUseSkinResponse::MergeFrom(const GongjianchuanshuUseSkinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuUseSkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GongjianchuanshuUseSkinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuUseSkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuUseSkinResponse::CopyFrom(const GongjianchuanshuUseSkinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuUseSkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuUseSkinResponse::IsInitialized() const {
  return true;
}

void GongjianchuanshuUseSkinResponse::InternalSwap(GongjianchuanshuUseSkinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuUseSkinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[85]);
}

// ===================================================================

class GongjianchuanshuStartRequest::_Internal {
 public:
};

GongjianchuanshuStartRequest::GongjianchuanshuStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuStartRequest)
}
GongjianchuanshuStartRequest::GongjianchuanshuStartRequest(const GongjianchuanshuStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuStartRequest)
}

void GongjianchuanshuStartRequest::SharedCtor() {
}

GongjianchuanshuStartRequest::~GongjianchuanshuStartRequest() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuStartRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuStartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuStartRequest::ArenaDtor(void* object) {
  GongjianchuanshuStartRequest* _this = reinterpret_cast< GongjianchuanshuStartRequest* >(object);
  (void)_this;
}
void GongjianchuanshuStartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuStartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuStartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuStartRequest)
  return target;
}

size_t GongjianchuanshuStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuStartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuStartRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuStartRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuStartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuStartRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuStartRequest)
    MergeFrom(*source);
  }
}

void GongjianchuanshuStartRequest::MergeFrom(const GongjianchuanshuStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GongjianchuanshuStartRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuStartRequest::CopyFrom(const GongjianchuanshuStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuStartRequest::IsInitialized() const {
  return true;
}

void GongjianchuanshuStartRequest::InternalSwap(GongjianchuanshuStartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuStartRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[86]);
}

// ===================================================================

class GongjianchuanshuStartResponse::_Internal {
 public:
};

GongjianchuanshuStartResponse::GongjianchuanshuStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuStartResponse)
}
GongjianchuanshuStartResponse::GongjianchuanshuStartResponse(const GongjianchuanshuStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuStartResponse)
}

void GongjianchuanshuStartResponse::SharedCtor() {
code_ = 0;
}

GongjianchuanshuStartResponse::~GongjianchuanshuStartResponse() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuStartResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuStartResponse::ArenaDtor(void* object) {
  GongjianchuanshuStartResponse* _this = reinterpret_cast< GongjianchuanshuStartResponse* >(object);
  (void)_this;
}
void GongjianchuanshuStartResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuStartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuStartResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuStartResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuStartResponse)
  return target;
}

size_t GongjianchuanshuStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuStartResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuStartResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuStartResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuStartResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuStartResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuStartResponse)
    MergeFrom(*source);
  }
}

void GongjianchuanshuStartResponse::MergeFrom(const GongjianchuanshuStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GongjianchuanshuStartResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuStartResponse::CopyFrom(const GongjianchuanshuStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuStartResponse::IsInitialized() const {
  return true;
}

void GongjianchuanshuStartResponse::InternalSwap(GongjianchuanshuStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuStartResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[87]);
}

// ===================================================================

class GongjianchuanshuResultRequest::_Internal {
 public:
};

GongjianchuanshuResultRequest::GongjianchuanshuResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuResultRequest)
}
GongjianchuanshuResultRequest::GongjianchuanshuResultRequest(const GongjianchuanshuResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuResultRequest)
}

void GongjianchuanshuResultRequest::SharedCtor() {
score_ = int64_t{0};
}

GongjianchuanshuResultRequest::~GongjianchuanshuResultRequest() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuResultRequest::ArenaDtor(void* object) {
  GongjianchuanshuResultRequest* _this = reinterpret_cast< GongjianchuanshuResultRequest* >(object);
  (void)_this;
}
void GongjianchuanshuResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  score_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Score = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Score = 1;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuResultRequest)
  return target;
}

size_t GongjianchuanshuResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Score = 1;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuResultRequest)
    MergeFrom(*source);
  }
}

void GongjianchuanshuResultRequest::MergeFrom(const GongjianchuanshuResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
}

void GongjianchuanshuResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuResultRequest::CopyFrom(const GongjianchuanshuResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuResultRequest::IsInitialized() const {
  return true;
}

void GongjianchuanshuResultRequest::InternalSwap(GongjianchuanshuResultRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(score_, other->score_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuResultRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[88]);
}

// ===================================================================

class GongjianchuanshuResultResponse::_Internal {
 public:
};

GongjianchuanshuResultResponse::GongjianchuanshuResultResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuResultResponse)
}
GongjianchuanshuResultResponse::GongjianchuanshuResultResponse(const GongjianchuanshuResultResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuResultResponse)
}

void GongjianchuanshuResultResponse::SharedCtor() {
code_ = 0;
}

GongjianchuanshuResultResponse::~GongjianchuanshuResultResponse() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuResultResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuResultResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuResultResponse::ArenaDtor(void* object) {
  GongjianchuanshuResultResponse* _this = reinterpret_cast< GongjianchuanshuResultResponse* >(object);
  (void)_this;
}
void GongjianchuanshuResultResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuResultResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuResultResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuResultResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuResultResponse)
  return target;
}

size_t GongjianchuanshuResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuResultResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuResultResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuResultResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuResultResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuResultResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuResultResponse)
    MergeFrom(*source);
  }
}

void GongjianchuanshuResultResponse::MergeFrom(const GongjianchuanshuResultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GongjianchuanshuResultResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuResultResponse::CopyFrom(const GongjianchuanshuResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuResultResponse::IsInitialized() const {
  return true;
}

void GongjianchuanshuResultResponse::InternalSwap(GongjianchuanshuResultResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuResultResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[89]);
}

// ===================================================================

class GongjianchuanshuLevelStartRequest::_Internal {
 public:
};

GongjianchuanshuLevelStartRequest::GongjianchuanshuLevelStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuLevelStartRequest)
}
GongjianchuanshuLevelStartRequest::GongjianchuanshuLevelStartRequest(const GongjianchuanshuLevelStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuLevelStartRequest)
}

void GongjianchuanshuLevelStartRequest::SharedCtor() {
}

GongjianchuanshuLevelStartRequest::~GongjianchuanshuLevelStartRequest() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuLevelStartRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuLevelStartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuLevelStartRequest::ArenaDtor(void* object) {
  GongjianchuanshuLevelStartRequest* _this = reinterpret_cast< GongjianchuanshuLevelStartRequest* >(object);
  (void)_this;
}
void GongjianchuanshuLevelStartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuLevelStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuLevelStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuLevelStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuLevelStartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuLevelStartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuLevelStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuLevelStartRequest)
  return target;
}

size_t GongjianchuanshuLevelStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuLevelStartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuLevelStartRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuLevelStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuLevelStartRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuLevelStartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuLevelStartRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuLevelStartRequest)
    MergeFrom(*source);
  }
}

void GongjianchuanshuLevelStartRequest::MergeFrom(const GongjianchuanshuLevelStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuLevelStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GongjianchuanshuLevelStartRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuLevelStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuLevelStartRequest::CopyFrom(const GongjianchuanshuLevelStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuLevelStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuLevelStartRequest::IsInitialized() const {
  return true;
}

void GongjianchuanshuLevelStartRequest::InternalSwap(GongjianchuanshuLevelStartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuLevelStartRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[90]);
}

// ===================================================================

class GongjianchuanshuLevelStartResponse::_Internal {
 public:
};

GongjianchuanshuLevelStartResponse::GongjianchuanshuLevelStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuLevelStartResponse)
}
GongjianchuanshuLevelStartResponse::GongjianchuanshuLevelStartResponse(const GongjianchuanshuLevelStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuLevelStartResponse)
}

void GongjianchuanshuLevelStartResponse::SharedCtor() {
code_ = 0;
}

GongjianchuanshuLevelStartResponse::~GongjianchuanshuLevelStartResponse() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuLevelStartResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuLevelStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuLevelStartResponse::ArenaDtor(void* object) {
  GongjianchuanshuLevelStartResponse* _this = reinterpret_cast< GongjianchuanshuLevelStartResponse* >(object);
  (void)_this;
}
void GongjianchuanshuLevelStartResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuLevelStartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuLevelStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuLevelStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuLevelStartResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuLevelStartResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuLevelStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuLevelStartResponse)
  return target;
}

size_t GongjianchuanshuLevelStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuLevelStartResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuLevelStartResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuLevelStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuLevelStartResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuLevelStartResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuLevelStartResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuLevelStartResponse)
    MergeFrom(*source);
  }
}

void GongjianchuanshuLevelStartResponse::MergeFrom(const GongjianchuanshuLevelStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuLevelStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GongjianchuanshuLevelStartResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuLevelStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuLevelStartResponse::CopyFrom(const GongjianchuanshuLevelStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuLevelStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuLevelStartResponse::IsInitialized() const {
  return true;
}

void GongjianchuanshuLevelStartResponse::InternalSwap(GongjianchuanshuLevelStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuLevelStartResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[91]);
}

// ===================================================================

class GongjianchuanshuLevelResultRequest::_Internal {
 public:
};

GongjianchuanshuLevelResultRequest::GongjianchuanshuLevelResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuLevelResultRequest)
}
GongjianchuanshuLevelResultRequest::GongjianchuanshuLevelResultRequest(const GongjianchuanshuLevelResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuLevelResultRequest)
}

void GongjianchuanshuLevelResultRequest::SharedCtor() {
score_ = int64_t{0};
}

GongjianchuanshuLevelResultRequest::~GongjianchuanshuLevelResultRequest() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuLevelResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuLevelResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuLevelResultRequest::ArenaDtor(void* object) {
  GongjianchuanshuLevelResultRequest* _this = reinterpret_cast< GongjianchuanshuLevelResultRequest* >(object);
  (void)_this;
}
void GongjianchuanshuLevelResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuLevelResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuLevelResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuLevelResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  score_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuLevelResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Score = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuLevelResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuLevelResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Score = 1;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuLevelResultRequest)
  return target;
}

size_t GongjianchuanshuLevelResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuLevelResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Score = 1;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuLevelResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuLevelResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuLevelResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuLevelResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuLevelResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuLevelResultRequest)
    MergeFrom(*source);
  }
}

void GongjianchuanshuLevelResultRequest::MergeFrom(const GongjianchuanshuLevelResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuLevelResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
}

void GongjianchuanshuLevelResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuLevelResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuLevelResultRequest::CopyFrom(const GongjianchuanshuLevelResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuLevelResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuLevelResultRequest::IsInitialized() const {
  return true;
}

void GongjianchuanshuLevelResultRequest::InternalSwap(GongjianchuanshuLevelResultRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(score_, other->score_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuLevelResultRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[92]);
}

// ===================================================================

class GongjianchuanshuLevelResultResponse::_Internal {
 public:
};

GongjianchuanshuLevelResultResponse::GongjianchuanshuLevelResultResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuLevelResultResponse)
}
GongjianchuanshuLevelResultResponse::GongjianchuanshuLevelResultResponse(const GongjianchuanshuLevelResultResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuLevelResultResponse)
}

void GongjianchuanshuLevelResultResponse::SharedCtor() {
code_ = 0;
}

GongjianchuanshuLevelResultResponse::~GongjianchuanshuLevelResultResponse() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuLevelResultResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuLevelResultResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuLevelResultResponse::ArenaDtor(void* object) {
  GongjianchuanshuLevelResultResponse* _this = reinterpret_cast< GongjianchuanshuLevelResultResponse* >(object);
  (void)_this;
}
void GongjianchuanshuLevelResultResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuLevelResultResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuLevelResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuLevelResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuLevelResultResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuLevelResultResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuLevelResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuLevelResultResponse)
  return target;
}

size_t GongjianchuanshuLevelResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuLevelResultResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuLevelResultResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuLevelResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuLevelResultResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuLevelResultResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuLevelResultResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuLevelResultResponse)
    MergeFrom(*source);
  }
}

void GongjianchuanshuLevelResultResponse::MergeFrom(const GongjianchuanshuLevelResultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuLevelResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GongjianchuanshuLevelResultResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuLevelResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuLevelResultResponse::CopyFrom(const GongjianchuanshuLevelResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuLevelResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuLevelResultResponse::IsInitialized() const {
  return true;
}

void GongjianchuanshuLevelResultResponse::InternalSwap(GongjianchuanshuLevelResultResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuLevelResultResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[93]);
}

// ===================================================================

class GongjianchuanshuLevelPassRequest::_Internal {
 public:
};

GongjianchuanshuLevelPassRequest::GongjianchuanshuLevelPassRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuLevelPassRequest)
}
GongjianchuanshuLevelPassRequest::GongjianchuanshuLevelPassRequest(const GongjianchuanshuLevelPassRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuLevelPassRequest)
}

void GongjianchuanshuLevelPassRequest::SharedCtor() {
level_ = int64_t{0};
}

GongjianchuanshuLevelPassRequest::~GongjianchuanshuLevelPassRequest() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuLevelPassRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuLevelPassRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuLevelPassRequest::ArenaDtor(void* object) {
  GongjianchuanshuLevelPassRequest* _this = reinterpret_cast< GongjianchuanshuLevelPassRequest* >(object);
  (void)_this;
}
void GongjianchuanshuLevelPassRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuLevelPassRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuLevelPassRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuLevelPassRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  level_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuLevelPassRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuLevelPassRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuLevelPassRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Level = 1;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuLevelPassRequest)
  return target;
}

size_t GongjianchuanshuLevelPassRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuLevelPassRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuLevelPassRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuLevelPassRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuLevelPassRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuLevelPassRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuLevelPassRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuLevelPassRequest)
    MergeFrom(*source);
  }
}

void GongjianchuanshuLevelPassRequest::MergeFrom(const GongjianchuanshuLevelPassRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuLevelPassRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
}

void GongjianchuanshuLevelPassRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuLevelPassRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuLevelPassRequest::CopyFrom(const GongjianchuanshuLevelPassRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuLevelPassRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuLevelPassRequest::IsInitialized() const {
  return true;
}

void GongjianchuanshuLevelPassRequest::InternalSwap(GongjianchuanshuLevelPassRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(level_, other->level_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuLevelPassRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[94]);
}

// ===================================================================

class GongjianchuanshuLevelPassResponse::_Internal {
 public:
};

GongjianchuanshuLevelPassResponse::GongjianchuanshuLevelPassResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.GongjianchuanshuLevelPassResponse)
}
GongjianchuanshuLevelPassResponse::GongjianchuanshuLevelPassResponse(const GongjianchuanshuLevelPassResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.GongjianchuanshuLevelPassResponse)
}

void GongjianchuanshuLevelPassResponse::SharedCtor() {
code_ = 0;
}

GongjianchuanshuLevelPassResponse::~GongjianchuanshuLevelPassResponse() {
  // @@protoc_insertion_point(destructor:gamepb.GongjianchuanshuLevelPassResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GongjianchuanshuLevelPassResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongjianchuanshuLevelPassResponse::ArenaDtor(void* object) {
  GongjianchuanshuLevelPassResponse* _this = reinterpret_cast< GongjianchuanshuLevelPassResponse* >(object);
  (void)_this;
}
void GongjianchuanshuLevelPassResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GongjianchuanshuLevelPassResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GongjianchuanshuLevelPassResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.GongjianchuanshuLevelPassResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongjianchuanshuLevelPassResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GongjianchuanshuLevelPassResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.GongjianchuanshuLevelPassResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.GongjianchuanshuLevelPassResponse)
  return target;
}

size_t GongjianchuanshuLevelPassResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.GongjianchuanshuLevelPassResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GongjianchuanshuLevelPassResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.GongjianchuanshuLevelPassResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GongjianchuanshuLevelPassResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GongjianchuanshuLevelPassResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.GongjianchuanshuLevelPassResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.GongjianchuanshuLevelPassResponse)
    MergeFrom(*source);
  }
}

void GongjianchuanshuLevelPassResponse::MergeFrom(const GongjianchuanshuLevelPassResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.GongjianchuanshuLevelPassResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GongjianchuanshuLevelPassResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.GongjianchuanshuLevelPassResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GongjianchuanshuLevelPassResponse::CopyFrom(const GongjianchuanshuLevelPassResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.GongjianchuanshuLevelPassResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongjianchuanshuLevelPassResponse::IsInitialized() const {
  return true;
}

void GongjianchuanshuLevelPassResponse::InternalSwap(GongjianchuanshuLevelPassResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongjianchuanshuLevelPassResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[95]);
}

// ===================================================================

class PaopaolongGetDataRequest::_Internal {
 public:
};

PaopaolongGetDataRequest::PaopaolongGetDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongGetDataRequest)
}
PaopaolongGetDataRequest::PaopaolongGetDataRequest(const PaopaolongGetDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongGetDataRequest)
}

void PaopaolongGetDataRequest::SharedCtor() {
}

PaopaolongGetDataRequest::~PaopaolongGetDataRequest() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongGetDataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongGetDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongGetDataRequest::ArenaDtor(void* object) {
  PaopaolongGetDataRequest* _this = reinterpret_cast< PaopaolongGetDataRequest* >(object);
  (void)_this;
}
void PaopaolongGetDataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongGetDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongGetDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongGetDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongGetDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongGetDataRequest)
  return target;
}

size_t PaopaolongGetDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongGetDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongGetDataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongGetDataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongGetDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongGetDataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongGetDataRequest)
    MergeFrom(*source);
  }
}

void PaopaolongGetDataRequest::MergeFrom(const PaopaolongGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PaopaolongGetDataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongGetDataRequest::CopyFrom(const PaopaolongGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongGetDataRequest::IsInitialized() const {
  return true;
}

void PaopaolongGetDataRequest::InternalSwap(PaopaolongGetDataRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongGetDataRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[96]);
}

// ===================================================================

class PaopaolongLevel::_Internal {
 public:
};

PaopaolongLevel::PaopaolongLevel(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongLevel)
}
PaopaolongLevel::PaopaolongLevel(const PaopaolongLevel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&lose_) -
    reinterpret_cast<char*>(&level_)) + sizeof(lose_));
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongLevel)
}

void PaopaolongLevel::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&level_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&lose_) -
    reinterpret_cast<char*>(&level_)) + sizeof(lose_));
}

PaopaolongLevel::~PaopaolongLevel() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongLevel)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongLevel::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongLevel::ArenaDtor(void* object) {
  PaopaolongLevel* _this = reinterpret_cast< PaopaolongLevel* >(object);
  (void)_this;
}
void PaopaolongLevel::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongLevel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongLevel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lose_) -
      reinterpret_cast<char*>(&level_)) + sizeof(lose_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongLevel::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Sec = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          sec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Lose = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          lose_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Score = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongLevel::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongLevel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Level = 1;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_level(), target);
  }

  // int64 Sec = 2;
  if (this->sec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_sec(), target);
  }

  // int32 Lose = 3;
  if (this->lose() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_lose(), target);
  }

  // int64 Score = 4;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongLevel)
  return target;
}

size_t PaopaolongLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongLevel)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_level());
  }

  // int64 Sec = 2;
  if (this->sec() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_sec());
  }

  // int64 Score = 4;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  // int32 Lose = 3;
  if (this->lose() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_lose());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongLevel::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongLevel)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongLevel* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongLevel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongLevel)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongLevel)
    MergeFrom(*source);
  }
}

void PaopaolongLevel::MergeFrom(const PaopaolongLevel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongLevel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.sec() != 0) {
    _internal_set_sec(from._internal_sec());
  }
  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
  if (from.lose() != 0) {
    _internal_set_lose(from._internal_lose());
  }
}

void PaopaolongLevel::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongLevel::CopyFrom(const PaopaolongLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongLevel::IsInitialized() const {
  return true;
}

void PaopaolongLevel::InternalSwap(PaopaolongLevel* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaopaolongLevel, lose_)
      + sizeof(PaopaolongLevel::lose_)
      - PROTOBUF_FIELD_OFFSET(PaopaolongLevel, level_)>(
          reinterpret_cast<char*>(&level_),
          reinterpret_cast<char*>(&other->level_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongLevel::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[97]);
}

// ===================================================================

class PaopaolongGetDataResponse::_Internal {
 public:
};

PaopaolongGetDataResponse::PaopaolongGetDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  levelarr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongGetDataResponse)
}
PaopaolongGetDataResponse::PaopaolongGetDataResponse(const PaopaolongGetDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      levelarr_(from.levelarr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  itemarr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_itemarr().empty()) {
    itemarr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_itemarr(), 
      GetArenaForAllocation());
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gameid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongGetDataResponse)
}

void PaopaolongGetDataResponse::SharedCtor() {
itemarr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&userid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&gameid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
}

PaopaolongGetDataResponse::~PaopaolongGetDataResponse() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongGetDataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongGetDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  itemarr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PaopaolongGetDataResponse::ArenaDtor(void* object) {
  PaopaolongGetDataResponse* _this = reinterpret_cast< PaopaolongGetDataResponse* >(object);
  (void)_this;
}
void PaopaolongGetDataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongGetDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongGetDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  levelarr_.Clear();
  itemarr_.ClearToEmpty();
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gameid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongGetDataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Userid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ItemArr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_itemarr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.PaopaolongGetDataResponse.ItemArr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Hp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 FreedrawTime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          freedrawtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 NewPackRedeemed = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          newpackredeemed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 ShopFreeDiamondTime = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          shopfreediamondtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 ShopFreeDiamondTime2 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          shopfreediamondtime2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 LastSignTime = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          lastsigntime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SignedTime = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          signedtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 FirstSignTime = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          firstsigntime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gamepb.PaopaolongLevel LevelArr = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_levelarr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 GameId = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          gameid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongGetDataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_userid(), target);
  }

  // int64 Level = 3;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_level(), target);
  }

  // string ItemArr = 4;
  if (!this->itemarr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_itemarr().data(), static_cast<int>(this->_internal_itemarr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.PaopaolongGetDataResponse.ItemArr");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_itemarr(), target);
  }

  // int32 Hp = 5;
  if (this->hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_hp(), target);
  }

  // int64 FreedrawTime = 6;
  if (this->freedrawtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_freedrawtime(), target);
  }

  // int32 NewPackRedeemed = 7;
  if (this->newpackredeemed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_newpackredeemed(), target);
  }

  // int64 ShopFreeDiamondTime = 8;
  if (this->shopfreediamondtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_shopfreediamondtime(), target);
  }

  // int64 ShopFreeDiamondTime2 = 9;
  if (this->shopfreediamondtime2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(9, this->_internal_shopfreediamondtime2(), target);
  }

  // int64 LastSignTime = 10;
  if (this->lastsigntime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(10, this->_internal_lastsigntime(), target);
  }

  // int32 SignedTime = 11;
  if (this->signedtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_signedtime(), target);
  }

  // int64 FirstSignTime = 12;
  if (this->firstsigntime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(12, this->_internal_firstsigntime(), target);
  }

  // repeated .gamepb.PaopaolongLevel LevelArr = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_levelarr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, this->_internal_levelarr(i), target, stream);
  }

  // int32 GameId = 14;
  if (this->gameid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(14, this->_internal_gameid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongGetDataResponse)
  return target;
}

size_t PaopaolongGetDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongGetDataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gamepb.PaopaolongLevel LevelArr = 13;
  total_size += 1UL * this->_internal_levelarr_size();
  for (const auto& msg : this->levelarr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string ItemArr = 4;
  if (!this->itemarr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_itemarr());
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_userid());
  }

  // int64 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_level());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 Hp = 5;
  if (this->hp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hp());
  }

  // int64 FreedrawTime = 6;
  if (this->freedrawtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_freedrawtime());
  }

  // int64 ShopFreeDiamondTime = 8;
  if (this->shopfreediamondtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_shopfreediamondtime());
  }

  // int64 ShopFreeDiamondTime2 = 9;
  if (this->shopfreediamondtime2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_shopfreediamondtime2());
  }

  // int32 NewPackRedeemed = 7;
  if (this->newpackredeemed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_newpackredeemed());
  }

  // int32 SignedTime = 11;
  if (this->signedtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_signedtime());
  }

  // int64 LastSignTime = 10;
  if (this->lastsigntime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_lastsigntime());
  }

  // int64 FirstSignTime = 12;
  if (this->firstsigntime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_firstsigntime());
  }

  // int32 GameId = 14;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gameid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongGetDataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongGetDataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongGetDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongGetDataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongGetDataResponse)
    MergeFrom(*source);
  }
}

void PaopaolongGetDataResponse::MergeFrom(const PaopaolongGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  levelarr_.MergeFrom(from.levelarr_);
  if (!from.itemarr().empty()) {
    _internal_set_itemarr(from._internal_itemarr());
  }
  if (from.userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
  if (from.freedrawtime() != 0) {
    _internal_set_freedrawtime(from._internal_freedrawtime());
  }
  if (from.shopfreediamondtime() != 0) {
    _internal_set_shopfreediamondtime(from._internal_shopfreediamondtime());
  }
  if (from.shopfreediamondtime2() != 0) {
    _internal_set_shopfreediamondtime2(from._internal_shopfreediamondtime2());
  }
  if (from.newpackredeemed() != 0) {
    _internal_set_newpackredeemed(from._internal_newpackredeemed());
  }
  if (from.signedtime() != 0) {
    _internal_set_signedtime(from._internal_signedtime());
  }
  if (from.lastsigntime() != 0) {
    _internal_set_lastsigntime(from._internal_lastsigntime());
  }
  if (from.firstsigntime() != 0) {
    _internal_set_firstsigntime(from._internal_firstsigntime());
  }
  if (from.gameid() != 0) {
    _internal_set_gameid(from._internal_gameid());
  }
}

void PaopaolongGetDataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongGetDataResponse::CopyFrom(const PaopaolongGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongGetDataResponse::IsInitialized() const {
  return true;
}

void PaopaolongGetDataResponse::InternalSwap(PaopaolongGetDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  levelarr_.InternalSwap(&other->levelarr_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &itemarr_, GetArenaForAllocation(),
      &other->itemarr_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaopaolongGetDataResponse, gameid_)
      + sizeof(PaopaolongGetDataResponse::gameid_)
      - PROTOBUF_FIELD_OFFSET(PaopaolongGetDataResponse, userid_)>(
          reinterpret_cast<char*>(&userid_),
          reinterpret_cast<char*>(&other->userid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongGetDataResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[98]);
}

// ===================================================================

class PaopaolongUseItemRequest::_Internal {
 public:
};

PaopaolongUseItemRequest::PaopaolongUseItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongUseItemRequest)
}
PaopaolongUseItemRequest::PaopaolongUseItemRequest(const PaopaolongUseItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  itemid_ = from.itemid_;
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongUseItemRequest)
}

void PaopaolongUseItemRequest::SharedCtor() {
itemid_ = 0;
}

PaopaolongUseItemRequest::~PaopaolongUseItemRequest() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongUseItemRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongUseItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongUseItemRequest::ArenaDtor(void* object) {
  PaopaolongUseItemRequest* _this = reinterpret_cast< PaopaolongUseItemRequest* >(object);
  (void)_this;
}
void PaopaolongUseItemRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongUseItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongUseItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongUseItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  itemid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongUseItemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 ItemId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          itemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongUseItemRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongUseItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ItemId = 1;
  if (this->itemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_itemid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongUseItemRequest)
  return target;
}

size_t PaopaolongUseItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongUseItemRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 ItemId = 1;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_itemid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongUseItemRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongUseItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongUseItemRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongUseItemRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongUseItemRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongUseItemRequest)
    MergeFrom(*source);
  }
}

void PaopaolongUseItemRequest::MergeFrom(const PaopaolongUseItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongUseItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.itemid() != 0) {
    _internal_set_itemid(from._internal_itemid());
  }
}

void PaopaolongUseItemRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongUseItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongUseItemRequest::CopyFrom(const PaopaolongUseItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongUseItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongUseItemRequest::IsInitialized() const {
  return true;
}

void PaopaolongUseItemRequest::InternalSwap(PaopaolongUseItemRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(itemid_, other->itemid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongUseItemRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[99]);
}

// ===================================================================

class PaopaolongUseItemResponse::_Internal {
 public:
};

PaopaolongUseItemResponse::PaopaolongUseItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongUseItemResponse)
}
PaopaolongUseItemResponse::PaopaolongUseItemResponse(const PaopaolongUseItemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(itemid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongUseItemResponse)
}

void PaopaolongUseItemResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&itemid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(itemid_));
}

PaopaolongUseItemResponse::~PaopaolongUseItemResponse() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongUseItemResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongUseItemResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongUseItemResponse::ArenaDtor(void* object) {
  PaopaolongUseItemResponse* _this = reinterpret_cast< PaopaolongUseItemResponse* >(object);
  (void)_this;
}
void PaopaolongUseItemResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongUseItemResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongUseItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongUseItemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itemid_) -
      reinterpret_cast<char*>(&code_)) + sizeof(itemid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongUseItemResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ItemId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          itemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongUseItemResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongUseItemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 ItemId = 2;
  if (this->itemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_itemid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongUseItemResponse)
  return target;
}

size_t PaopaolongUseItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongUseItemResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 ItemId = 2;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_itemid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongUseItemResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongUseItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongUseItemResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongUseItemResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongUseItemResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongUseItemResponse)
    MergeFrom(*source);
  }
}

void PaopaolongUseItemResponse::MergeFrom(const PaopaolongUseItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongUseItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.itemid() != 0) {
    _internal_set_itemid(from._internal_itemid());
  }
}

void PaopaolongUseItemResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongUseItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongUseItemResponse::CopyFrom(const PaopaolongUseItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongUseItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongUseItemResponse::IsInitialized() const {
  return true;
}

void PaopaolongUseItemResponse::InternalSwap(PaopaolongUseItemResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaopaolongUseItemResponse, itemid_)
      + sizeof(PaopaolongUseItemResponse::itemid_)
      - PROTOBUF_FIELD_OFFSET(PaopaolongUseItemResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongUseItemResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[100]);
}

// ===================================================================

class PaopaolongStartRequest::_Internal {
 public:
};

PaopaolongStartRequest::PaopaolongStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongStartRequest)
}
PaopaolongStartRequest::PaopaolongStartRequest(const PaopaolongStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongStartRequest)
}

void PaopaolongStartRequest::SharedCtor() {
level_ = int64_t{0};
}

PaopaolongStartRequest::~PaopaolongStartRequest() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongStartRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongStartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongStartRequest::ArenaDtor(void* object) {
  PaopaolongStartRequest* _this = reinterpret_cast< PaopaolongStartRequest* >(object);
  (void)_this;
}
void PaopaolongStartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  level_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongStartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongStartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Level = 1;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongStartRequest)
  return target;
}

size_t PaopaolongStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongStartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongStartRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongStartRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongStartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongStartRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongStartRequest)
    MergeFrom(*source);
  }
}

void PaopaolongStartRequest::MergeFrom(const PaopaolongStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
}

void PaopaolongStartRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongStartRequest::CopyFrom(const PaopaolongStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongStartRequest::IsInitialized() const {
  return true;
}

void PaopaolongStartRequest::InternalSwap(PaopaolongStartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(level_, other->level_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongStartRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[101]);
}

// ===================================================================

class PaopaolongStartResponse::_Internal {
 public:
};

PaopaolongStartResponse::PaopaolongStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongStartResponse)
}
PaopaolongStartResponse::PaopaolongStartResponse(const PaopaolongStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&level_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongStartResponse)
}

void PaopaolongStartResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&level_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&level_)) + sizeof(code_));
}

PaopaolongStartResponse::~PaopaolongStartResponse() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongStartResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongStartResponse::ArenaDtor(void* object) {
  PaopaolongStartResponse* _this = reinterpret_cast< PaopaolongStartResponse* >(object);
  (void)_this;
}
void PaopaolongStartResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongStartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&level_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongStartResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongStartResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Level = 2;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongStartResponse)
  return target;
}

size_t PaopaolongStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongStartResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_level());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongStartResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongStartResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongStartResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongStartResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongStartResponse)
    MergeFrom(*source);
  }
}

void PaopaolongStartResponse::MergeFrom(const PaopaolongStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PaopaolongStartResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongStartResponse::CopyFrom(const PaopaolongStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongStartResponse::IsInitialized() const {
  return true;
}

void PaopaolongStartResponse::InternalSwap(PaopaolongStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaopaolongStartResponse, code_)
      + sizeof(PaopaolongStartResponse::code_)
      - PROTOBUF_FIELD_OFFSET(PaopaolongStartResponse, level_)>(
          reinterpret_cast<char*>(&level_),
          reinterpret_cast<char*>(&other->level_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongStartResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[102]);
}

// ===================================================================

class PaopaolongResultRequest::_Internal {
 public:
};

PaopaolongResultRequest::PaopaolongResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongResultRequest)
}
PaopaolongResultRequest::PaopaolongResultRequest(const PaopaolongResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&level_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongResultRequest)
}

void PaopaolongResultRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&level_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&level_)) + sizeof(result_));
}

PaopaolongResultRequest::~PaopaolongResultRequest() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongResultRequest::ArenaDtor(void* object) {
  PaopaolongResultRequest* _this = reinterpret_cast< PaopaolongResultRequest* >(object);
  (void)_this;
}
void PaopaolongResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&level_)) + sizeof(result_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Score = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Sec = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          sec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Star = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          star_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  // int64 Level = 2;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_level(), target);
  }

  // int64 Score = 3;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_score(), target);
  }

  // int64 Sec = 4;
  if (this->sec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_sec(), target);
  }

  // int64 Star = 5;
  if (this->star() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_star(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongResultRequest)
  return target;
}

size_t PaopaolongResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_level());
  }

  // int64 Score = 3;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  // int64 Sec = 4;
  if (this->sec() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_sec());
  }

  // int64 Star = 5;
  if (this->star() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_star());
  }

  // int32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongResultRequest)
    MergeFrom(*source);
  }
}

void PaopaolongResultRequest::MergeFrom(const PaopaolongResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
  if (from.sec() != 0) {
    _internal_set_sec(from._internal_sec());
  }
  if (from.star() != 0) {
    _internal_set_star(from._internal_star());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void PaopaolongResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongResultRequest::CopyFrom(const PaopaolongResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongResultRequest::IsInitialized() const {
  return true;
}

void PaopaolongResultRequest::InternalSwap(PaopaolongResultRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaopaolongResultRequest, result_)
      + sizeof(PaopaolongResultRequest::result_)
      - PROTOBUF_FIELD_OFFSET(PaopaolongResultRequest, level_)>(
          reinterpret_cast<char*>(&level_),
          reinterpret_cast<char*>(&other->level_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongResultRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[103]);
}

// ===================================================================

class PaopaolongResultResponse::_Internal {
 public:
};

PaopaolongResultResponse::PaopaolongResultResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongResultResponse)
}
PaopaolongResultResponse::PaopaolongResultResponse(const PaopaolongResultResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&level_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongResultResponse)
}

void PaopaolongResultResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&level_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&level_)) + sizeof(code_));
}

PaopaolongResultResponse::~PaopaolongResultResponse() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongResultResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongResultResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongResultResponse::ArenaDtor(void* object) {
  PaopaolongResultResponse* _this = reinterpret_cast< PaopaolongResultResponse* >(object);
  (void)_this;
}
void PaopaolongResultResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongResultResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&level_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongResultResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongResultResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Level = 2;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongResultResponse)
  return target;
}

size_t PaopaolongResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongResultResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_level());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongResultResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongResultResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongResultResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongResultResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongResultResponse)
    MergeFrom(*source);
  }
}

void PaopaolongResultResponse::MergeFrom(const PaopaolongResultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PaopaolongResultResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongResultResponse::CopyFrom(const PaopaolongResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongResultResponse::IsInitialized() const {
  return true;
}

void PaopaolongResultResponse::InternalSwap(PaopaolongResultResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaopaolongResultResponse, code_)
      + sizeof(PaopaolongResultResponse::code_)
      - PROTOBUF_FIELD_OFFSET(PaopaolongResultResponse, level_)>(
          reinterpret_cast<char*>(&level_),
          reinterpret_cast<char*>(&other->level_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongResultResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[104]);
}

// ===================================================================

class PaopaolongFreeDrawRequest::_Internal {
 public:
};

PaopaolongFreeDrawRequest::PaopaolongFreeDrawRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongFreeDrawRequest)
}
PaopaolongFreeDrawRequest::PaopaolongFreeDrawRequest(const PaopaolongFreeDrawRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongFreeDrawRequest)
}

void PaopaolongFreeDrawRequest::SharedCtor() {
}

PaopaolongFreeDrawRequest::~PaopaolongFreeDrawRequest() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongFreeDrawRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongFreeDrawRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongFreeDrawRequest::ArenaDtor(void* object) {
  PaopaolongFreeDrawRequest* _this = reinterpret_cast< PaopaolongFreeDrawRequest* >(object);
  (void)_this;
}
void PaopaolongFreeDrawRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongFreeDrawRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongFreeDrawRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongFreeDrawRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongFreeDrawRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongFreeDrawRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongFreeDrawRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongFreeDrawRequest)
  return target;
}

size_t PaopaolongFreeDrawRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongFreeDrawRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongFreeDrawRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongFreeDrawRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongFreeDrawRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongFreeDrawRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongFreeDrawRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongFreeDrawRequest)
    MergeFrom(*source);
  }
}

void PaopaolongFreeDrawRequest::MergeFrom(const PaopaolongFreeDrawRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongFreeDrawRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PaopaolongFreeDrawRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongFreeDrawRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongFreeDrawRequest::CopyFrom(const PaopaolongFreeDrawRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongFreeDrawRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongFreeDrawRequest::IsInitialized() const {
  return true;
}

void PaopaolongFreeDrawRequest::InternalSwap(PaopaolongFreeDrawRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongFreeDrawRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[105]);
}

// ===================================================================

class PaopaolongFreeDrawResponse::_Internal {
 public:
};

PaopaolongFreeDrawResponse::PaopaolongFreeDrawResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongFreeDrawResponse)
}
PaopaolongFreeDrawResponse::PaopaolongFreeDrawResponse(const PaopaolongFreeDrawResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&freedrawtime_) -
    reinterpret_cast<char*>(&code_)) + sizeof(freedrawtime_));
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongFreeDrawResponse)
}

void PaopaolongFreeDrawResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&freedrawtime_) -
    reinterpret_cast<char*>(&code_)) + sizeof(freedrawtime_));
}

PaopaolongFreeDrawResponse::~PaopaolongFreeDrawResponse() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongFreeDrawResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongFreeDrawResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongFreeDrawResponse::ArenaDtor(void* object) {
  PaopaolongFreeDrawResponse* _this = reinterpret_cast< PaopaolongFreeDrawResponse* >(object);
  (void)_this;
}
void PaopaolongFreeDrawResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongFreeDrawResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongFreeDrawResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongFreeDrawResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&freedrawtime_) -
      reinterpret_cast<char*>(&code_)) + sizeof(freedrawtime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongFreeDrawResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 LuckyId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          luckyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 FreedrawTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          freedrawtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongFreeDrawResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongFreeDrawResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 LuckyId = 2;
  if (this->luckyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_luckyid(), target);
  }

  // int64 FreedrawTime = 3;
  if (this->freedrawtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_freedrawtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongFreeDrawResponse)
  return target;
}

size_t PaopaolongFreeDrawResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongFreeDrawResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 LuckyId = 2;
  if (this->luckyid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_luckyid());
  }

  // int64 FreedrawTime = 3;
  if (this->freedrawtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_freedrawtime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongFreeDrawResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongFreeDrawResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongFreeDrawResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongFreeDrawResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongFreeDrawResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongFreeDrawResponse)
    MergeFrom(*source);
  }
}

void PaopaolongFreeDrawResponse::MergeFrom(const PaopaolongFreeDrawResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongFreeDrawResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.luckyid() != 0) {
    _internal_set_luckyid(from._internal_luckyid());
  }
  if (from.freedrawtime() != 0) {
    _internal_set_freedrawtime(from._internal_freedrawtime());
  }
}

void PaopaolongFreeDrawResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongFreeDrawResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongFreeDrawResponse::CopyFrom(const PaopaolongFreeDrawResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongFreeDrawResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongFreeDrawResponse::IsInitialized() const {
  return true;
}

void PaopaolongFreeDrawResponse::InternalSwap(PaopaolongFreeDrawResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaopaolongFreeDrawResponse, freedrawtime_)
      + sizeof(PaopaolongFreeDrawResponse::freedrawtime_)
      - PROTOBUF_FIELD_OFFSET(PaopaolongFreeDrawResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongFreeDrawResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[106]);
}

// ===================================================================

class PaopaolongCostDrawRequest::_Internal {
 public:
};

PaopaolongCostDrawRequest::PaopaolongCostDrawRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongCostDrawRequest)
}
PaopaolongCostDrawRequest::PaopaolongCostDrawRequest(const PaopaolongCostDrawRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongCostDrawRequest)
}

void PaopaolongCostDrawRequest::SharedCtor() {
}

PaopaolongCostDrawRequest::~PaopaolongCostDrawRequest() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongCostDrawRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongCostDrawRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongCostDrawRequest::ArenaDtor(void* object) {
  PaopaolongCostDrawRequest* _this = reinterpret_cast< PaopaolongCostDrawRequest* >(object);
  (void)_this;
}
void PaopaolongCostDrawRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongCostDrawRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongCostDrawRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongCostDrawRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongCostDrawRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongCostDrawRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongCostDrawRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongCostDrawRequest)
  return target;
}

size_t PaopaolongCostDrawRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongCostDrawRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongCostDrawRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongCostDrawRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongCostDrawRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongCostDrawRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongCostDrawRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongCostDrawRequest)
    MergeFrom(*source);
  }
}

void PaopaolongCostDrawRequest::MergeFrom(const PaopaolongCostDrawRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongCostDrawRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PaopaolongCostDrawRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongCostDrawRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongCostDrawRequest::CopyFrom(const PaopaolongCostDrawRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongCostDrawRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongCostDrawRequest::IsInitialized() const {
  return true;
}

void PaopaolongCostDrawRequest::InternalSwap(PaopaolongCostDrawRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongCostDrawRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[107]);
}

// ===================================================================

class PaopaolongCostDrawResponse::_Internal {
 public:
};

PaopaolongCostDrawResponse::PaopaolongCostDrawResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongCostDrawResponse)
}
PaopaolongCostDrawResponse::PaopaolongCostDrawResponse(const PaopaolongCostDrawResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&coin_) -
    reinterpret_cast<char*>(&code_)) + sizeof(coin_));
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongCostDrawResponse)
}

void PaopaolongCostDrawResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&coin_) -
    reinterpret_cast<char*>(&code_)) + sizeof(coin_));
}

PaopaolongCostDrawResponse::~PaopaolongCostDrawResponse() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongCostDrawResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongCostDrawResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongCostDrawResponse::ArenaDtor(void* object) {
  PaopaolongCostDrawResponse* _this = reinterpret_cast< PaopaolongCostDrawResponse* >(object);
  (void)_this;
}
void PaopaolongCostDrawResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongCostDrawResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongCostDrawResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongCostDrawResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coin_) -
      reinterpret_cast<char*>(&code_)) + sizeof(coin_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongCostDrawResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 LuckyId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          luckyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongCostDrawResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongCostDrawResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 LuckyId = 2;
  if (this->luckyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_luckyid(), target);
  }

  // int64 Coin = 3;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongCostDrawResponse)
  return target;
}

size_t PaopaolongCostDrawResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongCostDrawResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 LuckyId = 2;
  if (this->luckyid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_luckyid());
  }

  // int64 Coin = 3;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongCostDrawResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongCostDrawResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongCostDrawResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongCostDrawResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongCostDrawResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongCostDrawResponse)
    MergeFrom(*source);
  }
}

void PaopaolongCostDrawResponse::MergeFrom(const PaopaolongCostDrawResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongCostDrawResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.luckyid() != 0) {
    _internal_set_luckyid(from._internal_luckyid());
  }
  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
}

void PaopaolongCostDrawResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongCostDrawResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongCostDrawResponse::CopyFrom(const PaopaolongCostDrawResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongCostDrawResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongCostDrawResponse::IsInitialized() const {
  return true;
}

void PaopaolongCostDrawResponse::InternalSwap(PaopaolongCostDrawResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaopaolongCostDrawResponse, coin_)
      + sizeof(PaopaolongCostDrawResponse::coin_)
      - PROTOBUF_FIELD_OFFSET(PaopaolongCostDrawResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongCostDrawResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[108]);
}

// ===================================================================

class PaopaolongSignRequest::_Internal {
 public:
};

PaopaolongSignRequest::PaopaolongSignRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongSignRequest)
}
PaopaolongSignRequest::PaopaolongSignRequest(const PaopaolongSignRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongSignRequest)
}

void PaopaolongSignRequest::SharedCtor() {
}

PaopaolongSignRequest::~PaopaolongSignRequest() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongSignRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongSignRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongSignRequest::ArenaDtor(void* object) {
  PaopaolongSignRequest* _this = reinterpret_cast< PaopaolongSignRequest* >(object);
  (void)_this;
}
void PaopaolongSignRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongSignRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongSignRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongSignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongSignRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongSignRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongSignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongSignRequest)
  return target;
}

size_t PaopaolongSignRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongSignRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongSignRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongSignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongSignRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongSignRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongSignRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongSignRequest)
    MergeFrom(*source);
  }
}

void PaopaolongSignRequest::MergeFrom(const PaopaolongSignRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongSignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PaopaolongSignRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongSignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongSignRequest::CopyFrom(const PaopaolongSignRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongSignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongSignRequest::IsInitialized() const {
  return true;
}

void PaopaolongSignRequest::InternalSwap(PaopaolongSignRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongSignRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[109]);
}

// ===================================================================

class PaopaolongSignResponse::_Internal {
 public:
};

PaopaolongSignResponse::PaopaolongSignResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongSignResponse)
}
PaopaolongSignResponse::PaopaolongSignResponse(const PaopaolongSignResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongSignResponse)
}

void PaopaolongSignResponse::SharedCtor() {
code_ = 0;
}

PaopaolongSignResponse::~PaopaolongSignResponse() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongSignResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongSignResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongSignResponse::ArenaDtor(void* object) {
  PaopaolongSignResponse* _this = reinterpret_cast< PaopaolongSignResponse* >(object);
  (void)_this;
}
void PaopaolongSignResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongSignResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongSignResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongSignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongSignResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongSignResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongSignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongSignResponse)
  return target;
}

size_t PaopaolongSignResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongSignResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongSignResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongSignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongSignResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongSignResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongSignResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongSignResponse)
    MergeFrom(*source);
  }
}

void PaopaolongSignResponse::MergeFrom(const PaopaolongSignResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongSignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PaopaolongSignResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongSignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongSignResponse::CopyFrom(const PaopaolongSignResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongSignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongSignResponse::IsInitialized() const {
  return true;
}

void PaopaolongSignResponse::InternalSwap(PaopaolongSignResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongSignResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[110]);
}

// ===================================================================

class PaopaolongShopFreeCoinRequest::_Internal {
 public:
};

PaopaolongShopFreeCoinRequest::PaopaolongShopFreeCoinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongShopFreeCoinRequest)
}
PaopaolongShopFreeCoinRequest::PaopaolongShopFreeCoinRequest(const PaopaolongShopFreeCoinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongShopFreeCoinRequest)
}

void PaopaolongShopFreeCoinRequest::SharedCtor() {
}

PaopaolongShopFreeCoinRequest::~PaopaolongShopFreeCoinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongShopFreeCoinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongShopFreeCoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongShopFreeCoinRequest::ArenaDtor(void* object) {
  PaopaolongShopFreeCoinRequest* _this = reinterpret_cast< PaopaolongShopFreeCoinRequest* >(object);
  (void)_this;
}
void PaopaolongShopFreeCoinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongShopFreeCoinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongShopFreeCoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongShopFreeCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongShopFreeCoinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongShopFreeCoinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongShopFreeCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongShopFreeCoinRequest)
  return target;
}

size_t PaopaolongShopFreeCoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongShopFreeCoinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongShopFreeCoinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongShopFreeCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongShopFreeCoinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongShopFreeCoinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongShopFreeCoinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongShopFreeCoinRequest)
    MergeFrom(*source);
  }
}

void PaopaolongShopFreeCoinRequest::MergeFrom(const PaopaolongShopFreeCoinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongShopFreeCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PaopaolongShopFreeCoinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongShopFreeCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongShopFreeCoinRequest::CopyFrom(const PaopaolongShopFreeCoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongShopFreeCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongShopFreeCoinRequest::IsInitialized() const {
  return true;
}

void PaopaolongShopFreeCoinRequest::InternalSwap(PaopaolongShopFreeCoinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongShopFreeCoinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[111]);
}

// ===================================================================

class PaopaolongShopFreeCoinResponse::_Internal {
 public:
};

PaopaolongShopFreeCoinResponse::PaopaolongShopFreeCoinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongShopFreeCoinResponse)
}
PaopaolongShopFreeCoinResponse::PaopaolongShopFreeCoinResponse(const PaopaolongShopFreeCoinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongShopFreeCoinResponse)
}

void PaopaolongShopFreeCoinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
}

PaopaolongShopFreeCoinResponse::~PaopaolongShopFreeCoinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongShopFreeCoinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongShopFreeCoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongShopFreeCoinResponse::ArenaDtor(void* object) {
  PaopaolongShopFreeCoinResponse* _this = reinterpret_cast< PaopaolongShopFreeCoinResponse* >(object);
  (void)_this;
}
void PaopaolongShopFreeCoinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongShopFreeCoinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongShopFreeCoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongShopFreeCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongShopFreeCoinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongShopFreeCoinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongShopFreeCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongShopFreeCoinResponse)
  return target;
}

size_t PaopaolongShopFreeCoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongShopFreeCoinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongShopFreeCoinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongShopFreeCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongShopFreeCoinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongShopFreeCoinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongShopFreeCoinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongShopFreeCoinResponse)
    MergeFrom(*source);
  }
}

void PaopaolongShopFreeCoinResponse::MergeFrom(const PaopaolongShopFreeCoinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongShopFreeCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PaopaolongShopFreeCoinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongShopFreeCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongShopFreeCoinResponse::CopyFrom(const PaopaolongShopFreeCoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongShopFreeCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongShopFreeCoinResponse::IsInitialized() const {
  return true;
}

void PaopaolongShopFreeCoinResponse::InternalSwap(PaopaolongShopFreeCoinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaopaolongShopFreeCoinResponse, code_)
      + sizeof(PaopaolongShopFreeCoinResponse::code_)
      - PROTOBUF_FIELD_OFFSET(PaopaolongShopFreeCoinResponse, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongShopFreeCoinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[112]);
}

// ===================================================================

class PaopaolongShopFreeCoin2Request::_Internal {
 public:
};

PaopaolongShopFreeCoin2Request::PaopaolongShopFreeCoin2Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongShopFreeCoin2Request)
}
PaopaolongShopFreeCoin2Request::PaopaolongShopFreeCoin2Request(const PaopaolongShopFreeCoin2Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongShopFreeCoin2Request)
}

void PaopaolongShopFreeCoin2Request::SharedCtor() {
}

PaopaolongShopFreeCoin2Request::~PaopaolongShopFreeCoin2Request() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongShopFreeCoin2Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongShopFreeCoin2Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongShopFreeCoin2Request::ArenaDtor(void* object) {
  PaopaolongShopFreeCoin2Request* _this = reinterpret_cast< PaopaolongShopFreeCoin2Request* >(object);
  (void)_this;
}
void PaopaolongShopFreeCoin2Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongShopFreeCoin2Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongShopFreeCoin2Request::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongShopFreeCoin2Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongShopFreeCoin2Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongShopFreeCoin2Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongShopFreeCoin2Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongShopFreeCoin2Request)
  return target;
}

size_t PaopaolongShopFreeCoin2Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongShopFreeCoin2Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongShopFreeCoin2Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongShopFreeCoin2Request)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongShopFreeCoin2Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongShopFreeCoin2Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongShopFreeCoin2Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongShopFreeCoin2Request)
    MergeFrom(*source);
  }
}

void PaopaolongShopFreeCoin2Request::MergeFrom(const PaopaolongShopFreeCoin2Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongShopFreeCoin2Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PaopaolongShopFreeCoin2Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongShopFreeCoin2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongShopFreeCoin2Request::CopyFrom(const PaopaolongShopFreeCoin2Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongShopFreeCoin2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongShopFreeCoin2Request::IsInitialized() const {
  return true;
}

void PaopaolongShopFreeCoin2Request::InternalSwap(PaopaolongShopFreeCoin2Request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongShopFreeCoin2Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[113]);
}

// ===================================================================

class PaopaolongShopFreeCoin2Response::_Internal {
 public:
};

PaopaolongShopFreeCoin2Response::PaopaolongShopFreeCoin2Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongShopFreeCoin2Response)
}
PaopaolongShopFreeCoin2Response::PaopaolongShopFreeCoin2Response(const PaopaolongShopFreeCoin2Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongShopFreeCoin2Response)
}

void PaopaolongShopFreeCoin2Response::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
}

PaopaolongShopFreeCoin2Response::~PaopaolongShopFreeCoin2Response() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongShopFreeCoin2Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongShopFreeCoin2Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongShopFreeCoin2Response::ArenaDtor(void* object) {
  PaopaolongShopFreeCoin2Response* _this = reinterpret_cast< PaopaolongShopFreeCoin2Response* >(object);
  (void)_this;
}
void PaopaolongShopFreeCoin2Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongShopFreeCoin2Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongShopFreeCoin2Response::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongShopFreeCoin2Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongShopFreeCoin2Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongShopFreeCoin2Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongShopFreeCoin2Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongShopFreeCoin2Response)
  return target;
}

size_t PaopaolongShopFreeCoin2Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongShopFreeCoin2Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongShopFreeCoin2Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongShopFreeCoin2Response)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongShopFreeCoin2Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongShopFreeCoin2Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongShopFreeCoin2Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongShopFreeCoin2Response)
    MergeFrom(*source);
  }
}

void PaopaolongShopFreeCoin2Response::MergeFrom(const PaopaolongShopFreeCoin2Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongShopFreeCoin2Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PaopaolongShopFreeCoin2Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongShopFreeCoin2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongShopFreeCoin2Response::CopyFrom(const PaopaolongShopFreeCoin2Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongShopFreeCoin2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongShopFreeCoin2Response::IsInitialized() const {
  return true;
}

void PaopaolongShopFreeCoin2Response::InternalSwap(PaopaolongShopFreeCoin2Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaopaolongShopFreeCoin2Response, code_)
      + sizeof(PaopaolongShopFreeCoin2Response::code_)
      - PROTOBUF_FIELD_OFFSET(PaopaolongShopFreeCoin2Response, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongShopFreeCoin2Response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[114]);
}

// ===================================================================

class PaopaolongShopBuyRequest::_Internal {
 public:
};

PaopaolongShopBuyRequest::PaopaolongShopBuyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongShopBuyRequest)
}
PaopaolongShopBuyRequest::PaopaolongShopBuyRequest(const PaopaolongShopBuyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongShopBuyRequest)
}

void PaopaolongShopBuyRequest::SharedCtor() {
id_ = 0;
}

PaopaolongShopBuyRequest::~PaopaolongShopBuyRequest() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongShopBuyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongShopBuyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongShopBuyRequest::ArenaDtor(void* object) {
  PaopaolongShopBuyRequest* _this = reinterpret_cast< PaopaolongShopBuyRequest* >(object);
  (void)_this;
}
void PaopaolongShopBuyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongShopBuyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongShopBuyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongShopBuyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongShopBuyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongShopBuyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongShopBuyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongShopBuyRequest)
  return target;
}

size_t PaopaolongShopBuyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongShopBuyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongShopBuyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongShopBuyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongShopBuyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongShopBuyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongShopBuyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongShopBuyRequest)
    MergeFrom(*source);
  }
}

void PaopaolongShopBuyRequest::MergeFrom(const PaopaolongShopBuyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongShopBuyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void PaopaolongShopBuyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongShopBuyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongShopBuyRequest::CopyFrom(const PaopaolongShopBuyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongShopBuyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongShopBuyRequest::IsInitialized() const {
  return true;
}

void PaopaolongShopBuyRequest::InternalSwap(PaopaolongShopBuyRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongShopBuyRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[115]);
}

// ===================================================================

class PaopaolongShopBuyResponse::_Internal {
 public:
};

PaopaolongShopBuyResponse::PaopaolongShopBuyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongShopBuyResponse)
}
PaopaolongShopBuyResponse::PaopaolongShopBuyResponse(const PaopaolongShopBuyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongShopBuyResponse)
}

void PaopaolongShopBuyResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(id_));
}

PaopaolongShopBuyResponse::~PaopaolongShopBuyResponse() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongShopBuyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongShopBuyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongShopBuyResponse::ArenaDtor(void* object) {
  PaopaolongShopBuyResponse* _this = reinterpret_cast< PaopaolongShopBuyResponse* >(object);
  (void)_this;
}
void PaopaolongShopBuyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongShopBuyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongShopBuyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongShopBuyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongShopBuyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongShopBuyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongShopBuyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  // int32 Id = 3;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongShopBuyResponse)
  return target;
}

size_t PaopaolongShopBuyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongShopBuyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 Id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongShopBuyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongShopBuyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongShopBuyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongShopBuyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongShopBuyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongShopBuyResponse)
    MergeFrom(*source);
  }
}

void PaopaolongShopBuyResponse::MergeFrom(const PaopaolongShopBuyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongShopBuyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void PaopaolongShopBuyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongShopBuyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongShopBuyResponse::CopyFrom(const PaopaolongShopBuyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongShopBuyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongShopBuyResponse::IsInitialized() const {
  return true;
}

void PaopaolongShopBuyResponse::InternalSwap(PaopaolongShopBuyResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaopaolongShopBuyResponse, id_)
      + sizeof(PaopaolongShopBuyResponse::id_)
      - PROTOBUF_FIELD_OFFSET(PaopaolongShopBuyResponse, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongShopBuyResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[116]);
}

// ===================================================================

class PaopaolongNewPackRequest::_Internal {
 public:
};

PaopaolongNewPackRequest::PaopaolongNewPackRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongNewPackRequest)
}
PaopaolongNewPackRequest::PaopaolongNewPackRequest(const PaopaolongNewPackRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongNewPackRequest)
}

void PaopaolongNewPackRequest::SharedCtor() {
}

PaopaolongNewPackRequest::~PaopaolongNewPackRequest() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongNewPackRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongNewPackRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongNewPackRequest::ArenaDtor(void* object) {
  PaopaolongNewPackRequest* _this = reinterpret_cast< PaopaolongNewPackRequest* >(object);
  (void)_this;
}
void PaopaolongNewPackRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongNewPackRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongNewPackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongNewPackRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongNewPackRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongNewPackRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongNewPackRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongNewPackRequest)
  return target;
}

size_t PaopaolongNewPackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongNewPackRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongNewPackRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongNewPackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongNewPackRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongNewPackRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongNewPackRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongNewPackRequest)
    MergeFrom(*source);
  }
}

void PaopaolongNewPackRequest::MergeFrom(const PaopaolongNewPackRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongNewPackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PaopaolongNewPackRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongNewPackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongNewPackRequest::CopyFrom(const PaopaolongNewPackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongNewPackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongNewPackRequest::IsInitialized() const {
  return true;
}

void PaopaolongNewPackRequest::InternalSwap(PaopaolongNewPackRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongNewPackRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[117]);
}

// ===================================================================

class PaopaolongNewPackResponse::_Internal {
 public:
};

PaopaolongNewPackResponse::PaopaolongNewPackResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.PaopaolongNewPackResponse)
}
PaopaolongNewPackResponse::PaopaolongNewPackResponse(const PaopaolongNewPackResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.PaopaolongNewPackResponse)
}

void PaopaolongNewPackResponse::SharedCtor() {
code_ = 0;
}

PaopaolongNewPackResponse::~PaopaolongNewPackResponse() {
  // @@protoc_insertion_point(destructor:gamepb.PaopaolongNewPackResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaopaolongNewPackResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PaopaolongNewPackResponse::ArenaDtor(void* object) {
  PaopaolongNewPackResponse* _this = reinterpret_cast< PaopaolongNewPackResponse* >(object);
  (void)_this;
}
void PaopaolongNewPackResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaopaolongNewPackResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PaopaolongNewPackResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.PaopaolongNewPackResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaopaolongNewPackResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaopaolongNewPackResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.PaopaolongNewPackResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.PaopaolongNewPackResponse)
  return target;
}

size_t PaopaolongNewPackResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.PaopaolongNewPackResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaopaolongNewPackResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.PaopaolongNewPackResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PaopaolongNewPackResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaopaolongNewPackResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.PaopaolongNewPackResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.PaopaolongNewPackResponse)
    MergeFrom(*source);
  }
}

void PaopaolongNewPackResponse::MergeFrom(const PaopaolongNewPackResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.PaopaolongNewPackResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PaopaolongNewPackResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.PaopaolongNewPackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaopaolongNewPackResponse::CopyFrom(const PaopaolongNewPackResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.PaopaolongNewPackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaopaolongNewPackResponse::IsInitialized() const {
  return true;
}

void PaopaolongNewPackResponse::InternalSwap(PaopaolongNewPackResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaopaolongNewPackResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[118]);
}

// ===================================================================

class TanchishedazuozhanGetDataRequest::_Internal {
 public:
};

TanchishedazuozhanGetDataRequest::TanchishedazuozhanGetDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TanchishedazuozhanGetDataRequest)
}
TanchishedazuozhanGetDataRequest::TanchishedazuozhanGetDataRequest(const TanchishedazuozhanGetDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.TanchishedazuozhanGetDataRequest)
}

void TanchishedazuozhanGetDataRequest::SharedCtor() {
}

TanchishedazuozhanGetDataRequest::~TanchishedazuozhanGetDataRequest() {
  // @@protoc_insertion_point(destructor:gamepb.TanchishedazuozhanGetDataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TanchishedazuozhanGetDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TanchishedazuozhanGetDataRequest::ArenaDtor(void* object) {
  TanchishedazuozhanGetDataRequest* _this = reinterpret_cast< TanchishedazuozhanGetDataRequest* >(object);
  (void)_this;
}
void TanchishedazuozhanGetDataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TanchishedazuozhanGetDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TanchishedazuozhanGetDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TanchishedazuozhanGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TanchishedazuozhanGetDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TanchishedazuozhanGetDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TanchishedazuozhanGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TanchishedazuozhanGetDataRequest)
  return target;
}

size_t TanchishedazuozhanGetDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TanchishedazuozhanGetDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TanchishedazuozhanGetDataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TanchishedazuozhanGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TanchishedazuozhanGetDataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TanchishedazuozhanGetDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TanchishedazuozhanGetDataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TanchishedazuozhanGetDataRequest)
    MergeFrom(*source);
  }
}

void TanchishedazuozhanGetDataRequest::MergeFrom(const TanchishedazuozhanGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TanchishedazuozhanGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TanchishedazuozhanGetDataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TanchishedazuozhanGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TanchishedazuozhanGetDataRequest::CopyFrom(const TanchishedazuozhanGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TanchishedazuozhanGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TanchishedazuozhanGetDataRequest::IsInitialized() const {
  return true;
}

void TanchishedazuozhanGetDataRequest::InternalSwap(TanchishedazuozhanGetDataRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TanchishedazuozhanGetDataRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[119]);
}

// ===================================================================

class TanchishedazuozhanGetDataResponse::_Internal {
 public:
};

TanchishedazuozhanGetDataResponse::TanchishedazuozhanGetDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TanchishedazuozhanGetDataResponse)
}
TanchishedazuozhanGetDataResponse::TanchishedazuozhanGetDataResponse(const TanchishedazuozhanGetDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  skinarr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_skinarr().empty()) {
    skinarr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_skinarr(), 
      GetArenaForAllocation());
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gameid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.TanchishedazuozhanGetDataResponse)
}

void TanchishedazuozhanGetDataResponse::SharedCtor() {
skinarr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&userid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&gameid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
}

TanchishedazuozhanGetDataResponse::~TanchishedazuozhanGetDataResponse() {
  // @@protoc_insertion_point(destructor:gamepb.TanchishedazuozhanGetDataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TanchishedazuozhanGetDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  skinarr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TanchishedazuozhanGetDataResponse::ArenaDtor(void* object) {
  TanchishedazuozhanGetDataResponse* _this = reinterpret_cast< TanchishedazuozhanGetDataResponse* >(object);
  (void)_this;
}
void TanchishedazuozhanGetDataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TanchishedazuozhanGetDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TanchishedazuozhanGetDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TanchishedazuozhanGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skinarr_.ClearToEmpty();
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gameid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TanchishedazuozhanGetDataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Userid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SkinId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          skinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string SkinArr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_skinarr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.TanchishedazuozhanGetDataResponse.SkinArr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GameId = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          gameid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TanchishedazuozhanGetDataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TanchishedazuozhanGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_userid(), target);
  }

  // int32 SkinId = 3;
  if (this->skinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_skinid(), target);
  }

  // string SkinArr = 4;
  if (!this->skinarr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_skinarr().data(), static_cast<int>(this->_internal_skinarr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.TanchishedazuozhanGetDataResponse.SkinArr");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_skinarr(), target);
  }

  // int32 GameId = 10;
  if (this->gameid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_gameid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TanchishedazuozhanGetDataResponse)
  return target;
}

size_t TanchishedazuozhanGetDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TanchishedazuozhanGetDataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SkinArr = 4;
  if (!this->skinarr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_skinarr());
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_userid());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 SkinId = 3;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skinid());
  }

  // int32 GameId = 10;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gameid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TanchishedazuozhanGetDataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TanchishedazuozhanGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TanchishedazuozhanGetDataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TanchishedazuozhanGetDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TanchishedazuozhanGetDataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TanchishedazuozhanGetDataResponse)
    MergeFrom(*source);
  }
}

void TanchishedazuozhanGetDataResponse::MergeFrom(const TanchishedazuozhanGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TanchishedazuozhanGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.skinarr().empty()) {
    _internal_set_skinarr(from._internal_skinarr());
  }
  if (from.userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.skinid() != 0) {
    _internal_set_skinid(from._internal_skinid());
  }
  if (from.gameid() != 0) {
    _internal_set_gameid(from._internal_gameid());
  }
}

void TanchishedazuozhanGetDataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TanchishedazuozhanGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TanchishedazuozhanGetDataResponse::CopyFrom(const TanchishedazuozhanGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TanchishedazuozhanGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TanchishedazuozhanGetDataResponse::IsInitialized() const {
  return true;
}

void TanchishedazuozhanGetDataResponse::InternalSwap(TanchishedazuozhanGetDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &skinarr_, GetArenaForAllocation(),
      &other->skinarr_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TanchishedazuozhanGetDataResponse, gameid_)
      + sizeof(TanchishedazuozhanGetDataResponse::gameid_)
      - PROTOBUF_FIELD_OFFSET(TanchishedazuozhanGetDataResponse, userid_)>(
          reinterpret_cast<char*>(&userid_),
          reinterpret_cast<char*>(&other->userid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TanchishedazuozhanGetDataResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[120]);
}

// ===================================================================

class TanchishedazuozhanStartRequest::_Internal {
 public:
};

TanchishedazuozhanStartRequest::TanchishedazuozhanStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TanchishedazuozhanStartRequest)
}
TanchishedazuozhanStartRequest::TanchishedazuozhanStartRequest(const TanchishedazuozhanStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:gamepb.TanchishedazuozhanStartRequest)
}

void TanchishedazuozhanStartRequest::SharedCtor() {
mode_ = 0;
}

TanchishedazuozhanStartRequest::~TanchishedazuozhanStartRequest() {
  // @@protoc_insertion_point(destructor:gamepb.TanchishedazuozhanStartRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TanchishedazuozhanStartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TanchishedazuozhanStartRequest::ArenaDtor(void* object) {
  TanchishedazuozhanStartRequest* _this = reinterpret_cast< TanchishedazuozhanStartRequest* >(object);
  (void)_this;
}
void TanchishedazuozhanStartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TanchishedazuozhanStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TanchishedazuozhanStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TanchishedazuozhanStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TanchishedazuozhanStartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Mode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TanchishedazuozhanStartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TanchishedazuozhanStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Mode = 1;
  if (this->mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TanchishedazuozhanStartRequest)
  return target;
}

size_t TanchishedazuozhanStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TanchishedazuozhanStartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Mode = 1;
  if (this->mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TanchishedazuozhanStartRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TanchishedazuozhanStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TanchishedazuozhanStartRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TanchishedazuozhanStartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TanchishedazuozhanStartRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TanchishedazuozhanStartRequest)
    MergeFrom(*source);
  }
}

void TanchishedazuozhanStartRequest::MergeFrom(const TanchishedazuozhanStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TanchishedazuozhanStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mode() != 0) {
    _internal_set_mode(from._internal_mode());
  }
}

void TanchishedazuozhanStartRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TanchishedazuozhanStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TanchishedazuozhanStartRequest::CopyFrom(const TanchishedazuozhanStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TanchishedazuozhanStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TanchishedazuozhanStartRequest::IsInitialized() const {
  return true;
}

void TanchishedazuozhanStartRequest::InternalSwap(TanchishedazuozhanStartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(mode_, other->mode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TanchishedazuozhanStartRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[121]);
}

// ===================================================================

class TanchishedazuozhanStartResponse::_Internal {
 public:
};

TanchishedazuozhanStartResponse::TanchishedazuozhanStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TanchishedazuozhanStartResponse)
}
TanchishedazuozhanStartResponse::TanchishedazuozhanStartResponse(const TanchishedazuozhanStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.TanchishedazuozhanStartResponse)
}

void TanchishedazuozhanStartResponse::SharedCtor() {
code_ = 0;
}

TanchishedazuozhanStartResponse::~TanchishedazuozhanStartResponse() {
  // @@protoc_insertion_point(destructor:gamepb.TanchishedazuozhanStartResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TanchishedazuozhanStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TanchishedazuozhanStartResponse::ArenaDtor(void* object) {
  TanchishedazuozhanStartResponse* _this = reinterpret_cast< TanchishedazuozhanStartResponse* >(object);
  (void)_this;
}
void TanchishedazuozhanStartResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TanchishedazuozhanStartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TanchishedazuozhanStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TanchishedazuozhanStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TanchishedazuozhanStartResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TanchishedazuozhanStartResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TanchishedazuozhanStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TanchishedazuozhanStartResponse)
  return target;
}

size_t TanchishedazuozhanStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TanchishedazuozhanStartResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TanchishedazuozhanStartResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TanchishedazuozhanStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TanchishedazuozhanStartResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TanchishedazuozhanStartResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TanchishedazuozhanStartResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TanchishedazuozhanStartResponse)
    MergeFrom(*source);
  }
}

void TanchishedazuozhanStartResponse::MergeFrom(const TanchishedazuozhanStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TanchishedazuozhanStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void TanchishedazuozhanStartResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TanchishedazuozhanStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TanchishedazuozhanStartResponse::CopyFrom(const TanchishedazuozhanStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TanchishedazuozhanStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TanchishedazuozhanStartResponse::IsInitialized() const {
  return true;
}

void TanchishedazuozhanStartResponse::InternalSwap(TanchishedazuozhanStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TanchishedazuozhanStartResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[122]);
}

// ===================================================================

class TanchishedazuozhanResultRequest::_Internal {
 public:
};

TanchishedazuozhanResultRequest::TanchishedazuozhanResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TanchishedazuozhanResultRequest)
}
TanchishedazuozhanResultRequest::TanchishedazuozhanResultRequest(const TanchishedazuozhanResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&result_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:gamepb.TanchishedazuozhanResultRequest)
}

void TanchishedazuozhanResultRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&result_)) + sizeof(score_));
}

TanchishedazuozhanResultRequest::~TanchishedazuozhanResultRequest() {
  // @@protoc_insertion_point(destructor:gamepb.TanchishedazuozhanResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TanchishedazuozhanResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TanchishedazuozhanResultRequest::ArenaDtor(void* object) {
  TanchishedazuozhanResultRequest* _this = reinterpret_cast< TanchishedazuozhanResultRequest* >(object);
  (void)_this;
}
void TanchishedazuozhanResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TanchishedazuozhanResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TanchishedazuozhanResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TanchishedazuozhanResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&result_)) + sizeof(score_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TanchishedazuozhanResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Mode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Score = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TanchishedazuozhanResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TanchishedazuozhanResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  // int32 Mode = 2;
  if (this->mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_mode(), target);
  }

  // int64 Score = 3;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TanchishedazuozhanResultRequest)
  return target;
}

size_t TanchishedazuozhanResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TanchishedazuozhanResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  // int32 Mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mode());
  }

  // int64 Score = 3;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TanchishedazuozhanResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TanchishedazuozhanResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TanchishedazuozhanResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TanchishedazuozhanResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TanchishedazuozhanResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TanchishedazuozhanResultRequest)
    MergeFrom(*source);
  }
}

void TanchishedazuozhanResultRequest::MergeFrom(const TanchishedazuozhanResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TanchishedazuozhanResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
  if (from.mode() != 0) {
    _internal_set_mode(from._internal_mode());
  }
  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
}

void TanchishedazuozhanResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TanchishedazuozhanResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TanchishedazuozhanResultRequest::CopyFrom(const TanchishedazuozhanResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TanchishedazuozhanResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TanchishedazuozhanResultRequest::IsInitialized() const {
  return true;
}

void TanchishedazuozhanResultRequest::InternalSwap(TanchishedazuozhanResultRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TanchishedazuozhanResultRequest, score_)
      + sizeof(TanchishedazuozhanResultRequest::score_)
      - PROTOBUF_FIELD_OFFSET(TanchishedazuozhanResultRequest, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TanchishedazuozhanResultRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[123]);
}

// ===================================================================

class TanchishedazuozhanResultResponse::_Internal {
 public:
};

TanchishedazuozhanResultResponse::TanchishedazuozhanResultResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TanchishedazuozhanResultResponse)
}
TanchishedazuozhanResultResponse::TanchishedazuozhanResultResponse(const TanchishedazuozhanResultResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.TanchishedazuozhanResultResponse)
}

void TanchishedazuozhanResultResponse::SharedCtor() {
code_ = 0;
}

TanchishedazuozhanResultResponse::~TanchishedazuozhanResultResponse() {
  // @@protoc_insertion_point(destructor:gamepb.TanchishedazuozhanResultResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TanchishedazuozhanResultResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TanchishedazuozhanResultResponse::ArenaDtor(void* object) {
  TanchishedazuozhanResultResponse* _this = reinterpret_cast< TanchishedazuozhanResultResponse* >(object);
  (void)_this;
}
void TanchishedazuozhanResultResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TanchishedazuozhanResultResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TanchishedazuozhanResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TanchishedazuozhanResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TanchishedazuozhanResultResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TanchishedazuozhanResultResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TanchishedazuozhanResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TanchishedazuozhanResultResponse)
  return target;
}

size_t TanchishedazuozhanResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TanchishedazuozhanResultResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TanchishedazuozhanResultResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TanchishedazuozhanResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TanchishedazuozhanResultResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TanchishedazuozhanResultResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TanchishedazuozhanResultResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TanchishedazuozhanResultResponse)
    MergeFrom(*source);
  }
}

void TanchishedazuozhanResultResponse::MergeFrom(const TanchishedazuozhanResultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TanchishedazuozhanResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void TanchishedazuozhanResultResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TanchishedazuozhanResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TanchishedazuozhanResultResponse::CopyFrom(const TanchishedazuozhanResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TanchishedazuozhanResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TanchishedazuozhanResultResponse::IsInitialized() const {
  return true;
}

void TanchishedazuozhanResultResponse::InternalSwap(TanchishedazuozhanResultResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TanchishedazuozhanResultResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[124]);
}

// ===================================================================

class TanchishedazuozhanBuySkinRequest::_Internal {
 public:
};

TanchishedazuozhanBuySkinRequest::TanchishedazuozhanBuySkinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TanchishedazuozhanBuySkinRequest)
}
TanchishedazuozhanBuySkinRequest::TanchishedazuozhanBuySkinRequest(const TanchishedazuozhanBuySkinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  skinid_ = from.skinid_;
  // @@protoc_insertion_point(copy_constructor:gamepb.TanchishedazuozhanBuySkinRequest)
}

void TanchishedazuozhanBuySkinRequest::SharedCtor() {
skinid_ = 0;
}

TanchishedazuozhanBuySkinRequest::~TanchishedazuozhanBuySkinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.TanchishedazuozhanBuySkinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TanchishedazuozhanBuySkinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TanchishedazuozhanBuySkinRequest::ArenaDtor(void* object) {
  TanchishedazuozhanBuySkinRequest* _this = reinterpret_cast< TanchishedazuozhanBuySkinRequest* >(object);
  (void)_this;
}
void TanchishedazuozhanBuySkinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TanchishedazuozhanBuySkinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TanchishedazuozhanBuySkinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TanchishedazuozhanBuySkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skinid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TanchishedazuozhanBuySkinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 SkinId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          skinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TanchishedazuozhanBuySkinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TanchishedazuozhanBuySkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SkinId = 1;
  if (this->skinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_skinid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TanchishedazuozhanBuySkinRequest)
  return target;
}

size_t TanchishedazuozhanBuySkinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TanchishedazuozhanBuySkinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 SkinId = 1;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skinid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TanchishedazuozhanBuySkinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TanchishedazuozhanBuySkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TanchishedazuozhanBuySkinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TanchishedazuozhanBuySkinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TanchishedazuozhanBuySkinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TanchishedazuozhanBuySkinRequest)
    MergeFrom(*source);
  }
}

void TanchishedazuozhanBuySkinRequest::MergeFrom(const TanchishedazuozhanBuySkinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TanchishedazuozhanBuySkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.skinid() != 0) {
    _internal_set_skinid(from._internal_skinid());
  }
}

void TanchishedazuozhanBuySkinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TanchishedazuozhanBuySkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TanchishedazuozhanBuySkinRequest::CopyFrom(const TanchishedazuozhanBuySkinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TanchishedazuozhanBuySkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TanchishedazuozhanBuySkinRequest::IsInitialized() const {
  return true;
}

void TanchishedazuozhanBuySkinRequest::InternalSwap(TanchishedazuozhanBuySkinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(skinid_, other->skinid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TanchishedazuozhanBuySkinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[125]);
}

// ===================================================================

class TanchishedazuozhanBuySkinResponse::_Internal {
 public:
};

TanchishedazuozhanBuySkinResponse::TanchishedazuozhanBuySkinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TanchishedazuozhanBuySkinResponse)
}
TanchishedazuozhanBuySkinResponse::TanchishedazuozhanBuySkinResponse(const TanchishedazuozhanBuySkinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&diamond_) -
    reinterpret_cast<char*>(&code_)) + sizeof(diamond_));
  // @@protoc_insertion_point(copy_constructor:gamepb.TanchishedazuozhanBuySkinResponse)
}

void TanchishedazuozhanBuySkinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&diamond_) -
    reinterpret_cast<char*>(&code_)) + sizeof(diamond_));
}

TanchishedazuozhanBuySkinResponse::~TanchishedazuozhanBuySkinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.TanchishedazuozhanBuySkinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TanchishedazuozhanBuySkinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TanchishedazuozhanBuySkinResponse::ArenaDtor(void* object) {
  TanchishedazuozhanBuySkinResponse* _this = reinterpret_cast< TanchishedazuozhanBuySkinResponse* >(object);
  (void)_this;
}
void TanchishedazuozhanBuySkinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TanchishedazuozhanBuySkinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TanchishedazuozhanBuySkinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TanchishedazuozhanBuySkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&diamond_) -
      reinterpret_cast<char*>(&code_)) + sizeof(diamond_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TanchishedazuozhanBuySkinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SkinId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          skinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Diamond = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          diamond_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TanchishedazuozhanBuySkinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TanchishedazuozhanBuySkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 SkinId = 2;
  if (this->skinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_skinid(), target);
  }

  // int64 Coin = 3;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_coin(), target);
  }

  // int64 Diamond = 4;
  if (this->diamond() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_diamond(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TanchishedazuozhanBuySkinResponse)
  return target;
}

size_t TanchishedazuozhanBuySkinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TanchishedazuozhanBuySkinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 SkinId = 2;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skinid());
  }

  // int64 Coin = 3;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int64 Diamond = 4;
  if (this->diamond() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_diamond());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TanchishedazuozhanBuySkinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TanchishedazuozhanBuySkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TanchishedazuozhanBuySkinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TanchishedazuozhanBuySkinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TanchishedazuozhanBuySkinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TanchishedazuozhanBuySkinResponse)
    MergeFrom(*source);
  }
}

void TanchishedazuozhanBuySkinResponse::MergeFrom(const TanchishedazuozhanBuySkinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TanchishedazuozhanBuySkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.skinid() != 0) {
    _internal_set_skinid(from._internal_skinid());
  }
  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.diamond() != 0) {
    _internal_set_diamond(from._internal_diamond());
  }
}

void TanchishedazuozhanBuySkinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TanchishedazuozhanBuySkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TanchishedazuozhanBuySkinResponse::CopyFrom(const TanchishedazuozhanBuySkinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TanchishedazuozhanBuySkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TanchishedazuozhanBuySkinResponse::IsInitialized() const {
  return true;
}

void TanchishedazuozhanBuySkinResponse::InternalSwap(TanchishedazuozhanBuySkinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TanchishedazuozhanBuySkinResponse, diamond_)
      + sizeof(TanchishedazuozhanBuySkinResponse::diamond_)
      - PROTOBUF_FIELD_OFFSET(TanchishedazuozhanBuySkinResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TanchishedazuozhanBuySkinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[126]);
}

// ===================================================================

class TanchishedazuozhanUseSkinRequest::_Internal {
 public:
};

TanchishedazuozhanUseSkinRequest::TanchishedazuozhanUseSkinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TanchishedazuozhanUseSkinRequest)
}
TanchishedazuozhanUseSkinRequest::TanchishedazuozhanUseSkinRequest(const TanchishedazuozhanUseSkinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  skinid_ = from.skinid_;
  // @@protoc_insertion_point(copy_constructor:gamepb.TanchishedazuozhanUseSkinRequest)
}

void TanchishedazuozhanUseSkinRequest::SharedCtor() {
skinid_ = 0;
}

TanchishedazuozhanUseSkinRequest::~TanchishedazuozhanUseSkinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.TanchishedazuozhanUseSkinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TanchishedazuozhanUseSkinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TanchishedazuozhanUseSkinRequest::ArenaDtor(void* object) {
  TanchishedazuozhanUseSkinRequest* _this = reinterpret_cast< TanchishedazuozhanUseSkinRequest* >(object);
  (void)_this;
}
void TanchishedazuozhanUseSkinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TanchishedazuozhanUseSkinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TanchishedazuozhanUseSkinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TanchishedazuozhanUseSkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skinid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TanchishedazuozhanUseSkinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 SkinId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          skinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TanchishedazuozhanUseSkinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TanchishedazuozhanUseSkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SkinId = 1;
  if (this->skinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_skinid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TanchishedazuozhanUseSkinRequest)
  return target;
}

size_t TanchishedazuozhanUseSkinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TanchishedazuozhanUseSkinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 SkinId = 1;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skinid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TanchishedazuozhanUseSkinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TanchishedazuozhanUseSkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TanchishedazuozhanUseSkinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TanchishedazuozhanUseSkinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TanchishedazuozhanUseSkinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TanchishedazuozhanUseSkinRequest)
    MergeFrom(*source);
  }
}

void TanchishedazuozhanUseSkinRequest::MergeFrom(const TanchishedazuozhanUseSkinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TanchishedazuozhanUseSkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.skinid() != 0) {
    _internal_set_skinid(from._internal_skinid());
  }
}

void TanchishedazuozhanUseSkinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TanchishedazuozhanUseSkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TanchishedazuozhanUseSkinRequest::CopyFrom(const TanchishedazuozhanUseSkinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TanchishedazuozhanUseSkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TanchishedazuozhanUseSkinRequest::IsInitialized() const {
  return true;
}

void TanchishedazuozhanUseSkinRequest::InternalSwap(TanchishedazuozhanUseSkinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(skinid_, other->skinid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TanchishedazuozhanUseSkinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[127]);
}

// ===================================================================

class TanchishedazuozhanUseSkinResponse::_Internal {
 public:
};

TanchishedazuozhanUseSkinResponse::TanchishedazuozhanUseSkinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TanchishedazuozhanUseSkinResponse)
}
TanchishedazuozhanUseSkinResponse::TanchishedazuozhanUseSkinResponse(const TanchishedazuozhanUseSkinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&skinid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(skinid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.TanchishedazuozhanUseSkinResponse)
}

void TanchishedazuozhanUseSkinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&skinid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(skinid_));
}

TanchishedazuozhanUseSkinResponse::~TanchishedazuozhanUseSkinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.TanchishedazuozhanUseSkinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TanchishedazuozhanUseSkinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TanchishedazuozhanUseSkinResponse::ArenaDtor(void* object) {
  TanchishedazuozhanUseSkinResponse* _this = reinterpret_cast< TanchishedazuozhanUseSkinResponse* >(object);
  (void)_this;
}
void TanchishedazuozhanUseSkinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TanchishedazuozhanUseSkinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TanchishedazuozhanUseSkinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TanchishedazuozhanUseSkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skinid_) -
      reinterpret_cast<char*>(&code_)) + sizeof(skinid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TanchishedazuozhanUseSkinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SkinId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          skinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TanchishedazuozhanUseSkinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TanchishedazuozhanUseSkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 SkinId = 2;
  if (this->skinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_skinid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TanchishedazuozhanUseSkinResponse)
  return target;
}

size_t TanchishedazuozhanUseSkinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TanchishedazuozhanUseSkinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 SkinId = 2;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skinid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TanchishedazuozhanUseSkinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TanchishedazuozhanUseSkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TanchishedazuozhanUseSkinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TanchishedazuozhanUseSkinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TanchishedazuozhanUseSkinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TanchishedazuozhanUseSkinResponse)
    MergeFrom(*source);
  }
}

void TanchishedazuozhanUseSkinResponse::MergeFrom(const TanchishedazuozhanUseSkinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TanchishedazuozhanUseSkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.skinid() != 0) {
    _internal_set_skinid(from._internal_skinid());
  }
}

void TanchishedazuozhanUseSkinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TanchishedazuozhanUseSkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TanchishedazuozhanUseSkinResponse::CopyFrom(const TanchishedazuozhanUseSkinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TanchishedazuozhanUseSkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TanchishedazuozhanUseSkinResponse::IsInitialized() const {
  return true;
}

void TanchishedazuozhanUseSkinResponse::InternalSwap(TanchishedazuozhanUseSkinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TanchishedazuozhanUseSkinResponse, skinid_)
      + sizeof(TanchishedazuozhanUseSkinResponse::skinid_)
      - PROTOBUF_FIELD_OFFSET(TanchishedazuozhanUseSkinResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TanchishedazuozhanUseSkinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[128]);
}

// ===================================================================

class TanchishedazuozhanGetCoinRequest::_Internal {
 public:
};

TanchishedazuozhanGetCoinRequest::TanchishedazuozhanGetCoinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TanchishedazuozhanGetCoinRequest)
}
TanchishedazuozhanGetCoinRequest::TanchishedazuozhanGetCoinRequest(const TanchishedazuozhanGetCoinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  coin_ = from.coin_;
  // @@protoc_insertion_point(copy_constructor:gamepb.TanchishedazuozhanGetCoinRequest)
}

void TanchishedazuozhanGetCoinRequest::SharedCtor() {
coin_ = int64_t{0};
}

TanchishedazuozhanGetCoinRequest::~TanchishedazuozhanGetCoinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.TanchishedazuozhanGetCoinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TanchishedazuozhanGetCoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TanchishedazuozhanGetCoinRequest::ArenaDtor(void* object) {
  TanchishedazuozhanGetCoinRequest* _this = reinterpret_cast< TanchishedazuozhanGetCoinRequest* >(object);
  (void)_this;
}
void TanchishedazuozhanGetCoinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TanchishedazuozhanGetCoinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TanchishedazuozhanGetCoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TanchishedazuozhanGetCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coin_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TanchishedazuozhanGetCoinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Coin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TanchishedazuozhanGetCoinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TanchishedazuozhanGetCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Coin = 1;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TanchishedazuozhanGetCoinRequest)
  return target;
}

size_t TanchishedazuozhanGetCoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TanchishedazuozhanGetCoinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 1;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TanchishedazuozhanGetCoinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TanchishedazuozhanGetCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TanchishedazuozhanGetCoinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TanchishedazuozhanGetCoinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TanchishedazuozhanGetCoinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TanchishedazuozhanGetCoinRequest)
    MergeFrom(*source);
  }
}

void TanchishedazuozhanGetCoinRequest::MergeFrom(const TanchishedazuozhanGetCoinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TanchishedazuozhanGetCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
}

void TanchishedazuozhanGetCoinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TanchishedazuozhanGetCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TanchishedazuozhanGetCoinRequest::CopyFrom(const TanchishedazuozhanGetCoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TanchishedazuozhanGetCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TanchishedazuozhanGetCoinRequest::IsInitialized() const {
  return true;
}

void TanchishedazuozhanGetCoinRequest::InternalSwap(TanchishedazuozhanGetCoinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(coin_, other->coin_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TanchishedazuozhanGetCoinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[129]);
}

// ===================================================================

class TanchishedazuozhanGetCoinResponse::_Internal {
 public:
};

TanchishedazuozhanGetCoinResponse::TanchishedazuozhanGetCoinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TanchishedazuozhanGetCoinResponse)
}
TanchishedazuozhanGetCoinResponse::TanchishedazuozhanGetCoinResponse(const TanchishedazuozhanGetCoinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.TanchishedazuozhanGetCoinResponse)
}

void TanchishedazuozhanGetCoinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
}

TanchishedazuozhanGetCoinResponse::~TanchishedazuozhanGetCoinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.TanchishedazuozhanGetCoinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TanchishedazuozhanGetCoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TanchishedazuozhanGetCoinResponse::ArenaDtor(void* object) {
  TanchishedazuozhanGetCoinResponse* _this = reinterpret_cast< TanchishedazuozhanGetCoinResponse* >(object);
  (void)_this;
}
void TanchishedazuozhanGetCoinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TanchishedazuozhanGetCoinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TanchishedazuozhanGetCoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TanchishedazuozhanGetCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TanchishedazuozhanGetCoinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TanchishedazuozhanGetCoinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TanchishedazuozhanGetCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TanchishedazuozhanGetCoinResponse)
  return target;
}

size_t TanchishedazuozhanGetCoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TanchishedazuozhanGetCoinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TanchishedazuozhanGetCoinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TanchishedazuozhanGetCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TanchishedazuozhanGetCoinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TanchishedazuozhanGetCoinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TanchishedazuozhanGetCoinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TanchishedazuozhanGetCoinResponse)
    MergeFrom(*source);
  }
}

void TanchishedazuozhanGetCoinResponse::MergeFrom(const TanchishedazuozhanGetCoinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TanchishedazuozhanGetCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void TanchishedazuozhanGetCoinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TanchishedazuozhanGetCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TanchishedazuozhanGetCoinResponse::CopyFrom(const TanchishedazuozhanGetCoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TanchishedazuozhanGetCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TanchishedazuozhanGetCoinResponse::IsInitialized() const {
  return true;
}

void TanchishedazuozhanGetCoinResponse::InternalSwap(TanchishedazuozhanGetCoinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TanchishedazuozhanGetCoinResponse, code_)
      + sizeof(TanchishedazuozhanGetCoinResponse::code_)
      - PROTOBUF_FIELD_OFFSET(TanchishedazuozhanGetCoinResponse, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TanchishedazuozhanGetCoinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[130]);
}

// ===================================================================

class TiantianpaokuGetDataRequest::_Internal {
 public:
};

TiantianpaokuGetDataRequest::TiantianpaokuGetDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TiantianpaokuGetDataRequest)
}
TiantianpaokuGetDataRequest::TiantianpaokuGetDataRequest(const TiantianpaokuGetDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.TiantianpaokuGetDataRequest)
}

void TiantianpaokuGetDataRequest::SharedCtor() {
}

TiantianpaokuGetDataRequest::~TiantianpaokuGetDataRequest() {
  // @@protoc_insertion_point(destructor:gamepb.TiantianpaokuGetDataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TiantianpaokuGetDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TiantianpaokuGetDataRequest::ArenaDtor(void* object) {
  TiantianpaokuGetDataRequest* _this = reinterpret_cast< TiantianpaokuGetDataRequest* >(object);
  (void)_this;
}
void TiantianpaokuGetDataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TiantianpaokuGetDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TiantianpaokuGetDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TiantianpaokuGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TiantianpaokuGetDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TiantianpaokuGetDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TiantianpaokuGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TiantianpaokuGetDataRequest)
  return target;
}

size_t TiantianpaokuGetDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TiantianpaokuGetDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiantianpaokuGetDataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TiantianpaokuGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TiantianpaokuGetDataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TiantianpaokuGetDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TiantianpaokuGetDataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TiantianpaokuGetDataRequest)
    MergeFrom(*source);
  }
}

void TiantianpaokuGetDataRequest::MergeFrom(const TiantianpaokuGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TiantianpaokuGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TiantianpaokuGetDataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TiantianpaokuGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiantianpaokuGetDataRequest::CopyFrom(const TiantianpaokuGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TiantianpaokuGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiantianpaokuGetDataRequest::IsInitialized() const {
  return true;
}

void TiantianpaokuGetDataRequest::InternalSwap(TiantianpaokuGetDataRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TiantianpaokuGetDataRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[131]);
}

// ===================================================================

class TiantianpaokuGetDataResponse::_Internal {
 public:
};

TiantianpaokuGetDataResponse::TiantianpaokuGetDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TiantianpaokuGetDataResponse)
}
TiantianpaokuGetDataResponse::TiantianpaokuGetDataResponse(const TiantianpaokuGetDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  skinarr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_skinarr().empty()) {
    skinarr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_skinarr(), 
      GetArenaForAllocation());
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gameid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.TiantianpaokuGetDataResponse)
}

void TiantianpaokuGetDataResponse::SharedCtor() {
skinarr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&userid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&gameid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
}

TiantianpaokuGetDataResponse::~TiantianpaokuGetDataResponse() {
  // @@protoc_insertion_point(destructor:gamepb.TiantianpaokuGetDataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TiantianpaokuGetDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  skinarr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TiantianpaokuGetDataResponse::ArenaDtor(void* object) {
  TiantianpaokuGetDataResponse* _this = reinterpret_cast< TiantianpaokuGetDataResponse* >(object);
  (void)_this;
}
void TiantianpaokuGetDataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TiantianpaokuGetDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TiantianpaokuGetDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TiantianpaokuGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skinarr_.ClearToEmpty();
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gameid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TiantianpaokuGetDataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Userid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SkinId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          skinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string SkinArr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_skinarr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.TiantianpaokuGetDataResponse.SkinArr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GameId = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          gameid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TiantianpaokuGetDataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TiantianpaokuGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_userid(), target);
  }

  // int32 SkinId = 3;
  if (this->skinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_skinid(), target);
  }

  // string SkinArr = 4;
  if (!this->skinarr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_skinarr().data(), static_cast<int>(this->_internal_skinarr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.TiantianpaokuGetDataResponse.SkinArr");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_skinarr(), target);
  }

  // int32 GameId = 10;
  if (this->gameid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_gameid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TiantianpaokuGetDataResponse)
  return target;
}

size_t TiantianpaokuGetDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TiantianpaokuGetDataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SkinArr = 4;
  if (!this->skinarr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_skinarr());
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_userid());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 SkinId = 3;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skinid());
  }

  // int32 GameId = 10;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gameid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiantianpaokuGetDataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TiantianpaokuGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TiantianpaokuGetDataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TiantianpaokuGetDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TiantianpaokuGetDataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TiantianpaokuGetDataResponse)
    MergeFrom(*source);
  }
}

void TiantianpaokuGetDataResponse::MergeFrom(const TiantianpaokuGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TiantianpaokuGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.skinarr().empty()) {
    _internal_set_skinarr(from._internal_skinarr());
  }
  if (from.userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.skinid() != 0) {
    _internal_set_skinid(from._internal_skinid());
  }
  if (from.gameid() != 0) {
    _internal_set_gameid(from._internal_gameid());
  }
}

void TiantianpaokuGetDataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TiantianpaokuGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiantianpaokuGetDataResponse::CopyFrom(const TiantianpaokuGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TiantianpaokuGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiantianpaokuGetDataResponse::IsInitialized() const {
  return true;
}

void TiantianpaokuGetDataResponse::InternalSwap(TiantianpaokuGetDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &skinarr_, GetArenaForAllocation(),
      &other->skinarr_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TiantianpaokuGetDataResponse, gameid_)
      + sizeof(TiantianpaokuGetDataResponse::gameid_)
      - PROTOBUF_FIELD_OFFSET(TiantianpaokuGetDataResponse, userid_)>(
          reinterpret_cast<char*>(&userid_),
          reinterpret_cast<char*>(&other->userid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TiantianpaokuGetDataResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[132]);
}

// ===================================================================

class TiantianpaokuGetCoinRequest::_Internal {
 public:
};

TiantianpaokuGetCoinRequest::TiantianpaokuGetCoinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TiantianpaokuGetCoinRequest)
}
TiantianpaokuGetCoinRequest::TiantianpaokuGetCoinRequest(const TiantianpaokuGetCoinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  coin_ = from.coin_;
  // @@protoc_insertion_point(copy_constructor:gamepb.TiantianpaokuGetCoinRequest)
}

void TiantianpaokuGetCoinRequest::SharedCtor() {
coin_ = int64_t{0};
}

TiantianpaokuGetCoinRequest::~TiantianpaokuGetCoinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.TiantianpaokuGetCoinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TiantianpaokuGetCoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TiantianpaokuGetCoinRequest::ArenaDtor(void* object) {
  TiantianpaokuGetCoinRequest* _this = reinterpret_cast< TiantianpaokuGetCoinRequest* >(object);
  (void)_this;
}
void TiantianpaokuGetCoinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TiantianpaokuGetCoinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TiantianpaokuGetCoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TiantianpaokuGetCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coin_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TiantianpaokuGetCoinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Coin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TiantianpaokuGetCoinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TiantianpaokuGetCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Coin = 1;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TiantianpaokuGetCoinRequest)
  return target;
}

size_t TiantianpaokuGetCoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TiantianpaokuGetCoinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 1;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiantianpaokuGetCoinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TiantianpaokuGetCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TiantianpaokuGetCoinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TiantianpaokuGetCoinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TiantianpaokuGetCoinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TiantianpaokuGetCoinRequest)
    MergeFrom(*source);
  }
}

void TiantianpaokuGetCoinRequest::MergeFrom(const TiantianpaokuGetCoinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TiantianpaokuGetCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
}

void TiantianpaokuGetCoinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TiantianpaokuGetCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiantianpaokuGetCoinRequest::CopyFrom(const TiantianpaokuGetCoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TiantianpaokuGetCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiantianpaokuGetCoinRequest::IsInitialized() const {
  return true;
}

void TiantianpaokuGetCoinRequest::InternalSwap(TiantianpaokuGetCoinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(coin_, other->coin_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TiantianpaokuGetCoinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[133]);
}

// ===================================================================

class TiantianpaokuGetCoinResponse::_Internal {
 public:
};

TiantianpaokuGetCoinResponse::TiantianpaokuGetCoinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TiantianpaokuGetCoinResponse)
}
TiantianpaokuGetCoinResponse::TiantianpaokuGetCoinResponse(const TiantianpaokuGetCoinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coin_, &from.coin_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.TiantianpaokuGetCoinResponse)
}

void TiantianpaokuGetCoinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coin_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&coin_)) + sizeof(code_));
}

TiantianpaokuGetCoinResponse::~TiantianpaokuGetCoinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.TiantianpaokuGetCoinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TiantianpaokuGetCoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TiantianpaokuGetCoinResponse::ArenaDtor(void* object) {
  TiantianpaokuGetCoinResponse* _this = reinterpret_cast< TiantianpaokuGetCoinResponse* >(object);
  (void)_this;
}
void TiantianpaokuGetCoinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TiantianpaokuGetCoinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TiantianpaokuGetCoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TiantianpaokuGetCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&coin_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TiantianpaokuGetCoinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TiantianpaokuGetCoinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TiantianpaokuGetCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Coin = 2;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TiantianpaokuGetCoinResponse)
  return target;
}

size_t TiantianpaokuGetCoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TiantianpaokuGetCoinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 2;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiantianpaokuGetCoinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TiantianpaokuGetCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TiantianpaokuGetCoinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TiantianpaokuGetCoinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TiantianpaokuGetCoinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TiantianpaokuGetCoinResponse)
    MergeFrom(*source);
  }
}

void TiantianpaokuGetCoinResponse::MergeFrom(const TiantianpaokuGetCoinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TiantianpaokuGetCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void TiantianpaokuGetCoinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TiantianpaokuGetCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiantianpaokuGetCoinResponse::CopyFrom(const TiantianpaokuGetCoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TiantianpaokuGetCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiantianpaokuGetCoinResponse::IsInitialized() const {
  return true;
}

void TiantianpaokuGetCoinResponse::InternalSwap(TiantianpaokuGetCoinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TiantianpaokuGetCoinResponse, code_)
      + sizeof(TiantianpaokuGetCoinResponse::code_)
      - PROTOBUF_FIELD_OFFSET(TiantianpaokuGetCoinResponse, coin_)>(
          reinterpret_cast<char*>(&coin_),
          reinterpret_cast<char*>(&other->coin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TiantianpaokuGetCoinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[134]);
}

// ===================================================================

class TiantianpaokuBuySkinRequest::_Internal {
 public:
};

TiantianpaokuBuySkinRequest::TiantianpaokuBuySkinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TiantianpaokuBuySkinRequest)
}
TiantianpaokuBuySkinRequest::TiantianpaokuBuySkinRequest(const TiantianpaokuBuySkinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  skinid_ = from.skinid_;
  // @@protoc_insertion_point(copy_constructor:gamepb.TiantianpaokuBuySkinRequest)
}

void TiantianpaokuBuySkinRequest::SharedCtor() {
skinid_ = 0;
}

TiantianpaokuBuySkinRequest::~TiantianpaokuBuySkinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.TiantianpaokuBuySkinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TiantianpaokuBuySkinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TiantianpaokuBuySkinRequest::ArenaDtor(void* object) {
  TiantianpaokuBuySkinRequest* _this = reinterpret_cast< TiantianpaokuBuySkinRequest* >(object);
  (void)_this;
}
void TiantianpaokuBuySkinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TiantianpaokuBuySkinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TiantianpaokuBuySkinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TiantianpaokuBuySkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skinid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TiantianpaokuBuySkinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 SkinId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          skinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TiantianpaokuBuySkinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TiantianpaokuBuySkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SkinId = 1;
  if (this->skinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_skinid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TiantianpaokuBuySkinRequest)
  return target;
}

size_t TiantianpaokuBuySkinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TiantianpaokuBuySkinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 SkinId = 1;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skinid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiantianpaokuBuySkinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TiantianpaokuBuySkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TiantianpaokuBuySkinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TiantianpaokuBuySkinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TiantianpaokuBuySkinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TiantianpaokuBuySkinRequest)
    MergeFrom(*source);
  }
}

void TiantianpaokuBuySkinRequest::MergeFrom(const TiantianpaokuBuySkinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TiantianpaokuBuySkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.skinid() != 0) {
    _internal_set_skinid(from._internal_skinid());
  }
}

void TiantianpaokuBuySkinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TiantianpaokuBuySkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiantianpaokuBuySkinRequest::CopyFrom(const TiantianpaokuBuySkinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TiantianpaokuBuySkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiantianpaokuBuySkinRequest::IsInitialized() const {
  return true;
}

void TiantianpaokuBuySkinRequest::InternalSwap(TiantianpaokuBuySkinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(skinid_, other->skinid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TiantianpaokuBuySkinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[135]);
}

// ===================================================================

class TiantianpaokuBuySkinResponse::_Internal {
 public:
};

TiantianpaokuBuySkinResponse::TiantianpaokuBuySkinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TiantianpaokuBuySkinResponse)
}
TiantianpaokuBuySkinResponse::TiantianpaokuBuySkinResponse(const TiantianpaokuBuySkinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&coin_) -
    reinterpret_cast<char*>(&code_)) + sizeof(coin_));
  // @@protoc_insertion_point(copy_constructor:gamepb.TiantianpaokuBuySkinResponse)
}

void TiantianpaokuBuySkinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&coin_) -
    reinterpret_cast<char*>(&code_)) + sizeof(coin_));
}

TiantianpaokuBuySkinResponse::~TiantianpaokuBuySkinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.TiantianpaokuBuySkinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TiantianpaokuBuySkinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TiantianpaokuBuySkinResponse::ArenaDtor(void* object) {
  TiantianpaokuBuySkinResponse* _this = reinterpret_cast< TiantianpaokuBuySkinResponse* >(object);
  (void)_this;
}
void TiantianpaokuBuySkinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TiantianpaokuBuySkinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TiantianpaokuBuySkinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TiantianpaokuBuySkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coin_) -
      reinterpret_cast<char*>(&code_)) + sizeof(coin_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TiantianpaokuBuySkinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SkinId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          skinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TiantianpaokuBuySkinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TiantianpaokuBuySkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 SkinId = 2;
  if (this->skinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_skinid(), target);
  }

  // int64 Coin = 3;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TiantianpaokuBuySkinResponse)
  return target;
}

size_t TiantianpaokuBuySkinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TiantianpaokuBuySkinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 SkinId = 2;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skinid());
  }

  // int64 Coin = 3;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiantianpaokuBuySkinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TiantianpaokuBuySkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TiantianpaokuBuySkinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TiantianpaokuBuySkinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TiantianpaokuBuySkinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TiantianpaokuBuySkinResponse)
    MergeFrom(*source);
  }
}

void TiantianpaokuBuySkinResponse::MergeFrom(const TiantianpaokuBuySkinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TiantianpaokuBuySkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.skinid() != 0) {
    _internal_set_skinid(from._internal_skinid());
  }
  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
}

void TiantianpaokuBuySkinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TiantianpaokuBuySkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiantianpaokuBuySkinResponse::CopyFrom(const TiantianpaokuBuySkinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TiantianpaokuBuySkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiantianpaokuBuySkinResponse::IsInitialized() const {
  return true;
}

void TiantianpaokuBuySkinResponse::InternalSwap(TiantianpaokuBuySkinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TiantianpaokuBuySkinResponse, coin_)
      + sizeof(TiantianpaokuBuySkinResponse::coin_)
      - PROTOBUF_FIELD_OFFSET(TiantianpaokuBuySkinResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TiantianpaokuBuySkinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[136]);
}

// ===================================================================

class TiantianpaokuUseSkinRequest::_Internal {
 public:
};

TiantianpaokuUseSkinRequest::TiantianpaokuUseSkinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TiantianpaokuUseSkinRequest)
}
TiantianpaokuUseSkinRequest::TiantianpaokuUseSkinRequest(const TiantianpaokuUseSkinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  skinid_ = from.skinid_;
  // @@protoc_insertion_point(copy_constructor:gamepb.TiantianpaokuUseSkinRequest)
}

void TiantianpaokuUseSkinRequest::SharedCtor() {
skinid_ = 0;
}

TiantianpaokuUseSkinRequest::~TiantianpaokuUseSkinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.TiantianpaokuUseSkinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TiantianpaokuUseSkinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TiantianpaokuUseSkinRequest::ArenaDtor(void* object) {
  TiantianpaokuUseSkinRequest* _this = reinterpret_cast< TiantianpaokuUseSkinRequest* >(object);
  (void)_this;
}
void TiantianpaokuUseSkinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TiantianpaokuUseSkinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TiantianpaokuUseSkinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TiantianpaokuUseSkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skinid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TiantianpaokuUseSkinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 SkinId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          skinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TiantianpaokuUseSkinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TiantianpaokuUseSkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SkinId = 1;
  if (this->skinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_skinid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TiantianpaokuUseSkinRequest)
  return target;
}

size_t TiantianpaokuUseSkinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TiantianpaokuUseSkinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 SkinId = 1;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skinid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiantianpaokuUseSkinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TiantianpaokuUseSkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TiantianpaokuUseSkinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TiantianpaokuUseSkinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TiantianpaokuUseSkinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TiantianpaokuUseSkinRequest)
    MergeFrom(*source);
  }
}

void TiantianpaokuUseSkinRequest::MergeFrom(const TiantianpaokuUseSkinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TiantianpaokuUseSkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.skinid() != 0) {
    _internal_set_skinid(from._internal_skinid());
  }
}

void TiantianpaokuUseSkinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TiantianpaokuUseSkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiantianpaokuUseSkinRequest::CopyFrom(const TiantianpaokuUseSkinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TiantianpaokuUseSkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiantianpaokuUseSkinRequest::IsInitialized() const {
  return true;
}

void TiantianpaokuUseSkinRequest::InternalSwap(TiantianpaokuUseSkinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(skinid_, other->skinid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TiantianpaokuUseSkinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[137]);
}

// ===================================================================

class TiantianpaokuUseSkinResponse::_Internal {
 public:
};

TiantianpaokuUseSkinResponse::TiantianpaokuUseSkinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TiantianpaokuUseSkinResponse)
}
TiantianpaokuUseSkinResponse::TiantianpaokuUseSkinResponse(const TiantianpaokuUseSkinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&skinid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(skinid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.TiantianpaokuUseSkinResponse)
}

void TiantianpaokuUseSkinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&skinid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(skinid_));
}

TiantianpaokuUseSkinResponse::~TiantianpaokuUseSkinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.TiantianpaokuUseSkinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TiantianpaokuUseSkinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TiantianpaokuUseSkinResponse::ArenaDtor(void* object) {
  TiantianpaokuUseSkinResponse* _this = reinterpret_cast< TiantianpaokuUseSkinResponse* >(object);
  (void)_this;
}
void TiantianpaokuUseSkinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TiantianpaokuUseSkinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TiantianpaokuUseSkinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TiantianpaokuUseSkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skinid_) -
      reinterpret_cast<char*>(&code_)) + sizeof(skinid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TiantianpaokuUseSkinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SkinId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          skinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TiantianpaokuUseSkinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TiantianpaokuUseSkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 SkinId = 2;
  if (this->skinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_skinid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TiantianpaokuUseSkinResponse)
  return target;
}

size_t TiantianpaokuUseSkinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TiantianpaokuUseSkinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 SkinId = 2;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_skinid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiantianpaokuUseSkinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TiantianpaokuUseSkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TiantianpaokuUseSkinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TiantianpaokuUseSkinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TiantianpaokuUseSkinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TiantianpaokuUseSkinResponse)
    MergeFrom(*source);
  }
}

void TiantianpaokuUseSkinResponse::MergeFrom(const TiantianpaokuUseSkinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TiantianpaokuUseSkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.skinid() != 0) {
    _internal_set_skinid(from._internal_skinid());
  }
}

void TiantianpaokuUseSkinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TiantianpaokuUseSkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiantianpaokuUseSkinResponse::CopyFrom(const TiantianpaokuUseSkinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TiantianpaokuUseSkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiantianpaokuUseSkinResponse::IsInitialized() const {
  return true;
}

void TiantianpaokuUseSkinResponse::InternalSwap(TiantianpaokuUseSkinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TiantianpaokuUseSkinResponse, skinid_)
      + sizeof(TiantianpaokuUseSkinResponse::skinid_)
      - PROTOBUF_FIELD_OFFSET(TiantianpaokuUseSkinResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TiantianpaokuUseSkinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[138]);
}

// ===================================================================

class TiantianpaokuStartRequest::_Internal {
 public:
};

TiantianpaokuStartRequest::TiantianpaokuStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TiantianpaokuStartRequest)
}
TiantianpaokuStartRequest::TiantianpaokuStartRequest(const TiantianpaokuStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.TiantianpaokuStartRequest)
}

void TiantianpaokuStartRequest::SharedCtor() {
}

TiantianpaokuStartRequest::~TiantianpaokuStartRequest() {
  // @@protoc_insertion_point(destructor:gamepb.TiantianpaokuStartRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TiantianpaokuStartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TiantianpaokuStartRequest::ArenaDtor(void* object) {
  TiantianpaokuStartRequest* _this = reinterpret_cast< TiantianpaokuStartRequest* >(object);
  (void)_this;
}
void TiantianpaokuStartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TiantianpaokuStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TiantianpaokuStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TiantianpaokuStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TiantianpaokuStartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TiantianpaokuStartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TiantianpaokuStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TiantianpaokuStartRequest)
  return target;
}

size_t TiantianpaokuStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TiantianpaokuStartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiantianpaokuStartRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TiantianpaokuStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TiantianpaokuStartRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TiantianpaokuStartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TiantianpaokuStartRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TiantianpaokuStartRequest)
    MergeFrom(*source);
  }
}

void TiantianpaokuStartRequest::MergeFrom(const TiantianpaokuStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TiantianpaokuStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TiantianpaokuStartRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TiantianpaokuStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiantianpaokuStartRequest::CopyFrom(const TiantianpaokuStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TiantianpaokuStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiantianpaokuStartRequest::IsInitialized() const {
  return true;
}

void TiantianpaokuStartRequest::InternalSwap(TiantianpaokuStartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TiantianpaokuStartRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[139]);
}

// ===================================================================

class TiantianpaokuStartResponse::_Internal {
 public:
};

TiantianpaokuStartResponse::TiantianpaokuStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TiantianpaokuStartResponse)
}
TiantianpaokuStartResponse::TiantianpaokuStartResponse(const TiantianpaokuStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.TiantianpaokuStartResponse)
}

void TiantianpaokuStartResponse::SharedCtor() {
code_ = 0;
}

TiantianpaokuStartResponse::~TiantianpaokuStartResponse() {
  // @@protoc_insertion_point(destructor:gamepb.TiantianpaokuStartResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TiantianpaokuStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TiantianpaokuStartResponse::ArenaDtor(void* object) {
  TiantianpaokuStartResponse* _this = reinterpret_cast< TiantianpaokuStartResponse* >(object);
  (void)_this;
}
void TiantianpaokuStartResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TiantianpaokuStartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TiantianpaokuStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TiantianpaokuStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TiantianpaokuStartResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TiantianpaokuStartResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TiantianpaokuStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TiantianpaokuStartResponse)
  return target;
}

size_t TiantianpaokuStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TiantianpaokuStartResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiantianpaokuStartResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TiantianpaokuStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TiantianpaokuStartResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TiantianpaokuStartResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TiantianpaokuStartResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TiantianpaokuStartResponse)
    MergeFrom(*source);
  }
}

void TiantianpaokuStartResponse::MergeFrom(const TiantianpaokuStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TiantianpaokuStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void TiantianpaokuStartResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TiantianpaokuStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiantianpaokuStartResponse::CopyFrom(const TiantianpaokuStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TiantianpaokuStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiantianpaokuStartResponse::IsInitialized() const {
  return true;
}

void TiantianpaokuStartResponse::InternalSwap(TiantianpaokuStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TiantianpaokuStartResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[140]);
}

// ===================================================================

class TiantianpaokuResultRequest::_Internal {
 public:
};

TiantianpaokuResultRequest::TiantianpaokuResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TiantianpaokuResultRequest)
}
TiantianpaokuResultRequest::TiantianpaokuResultRequest(const TiantianpaokuResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:gamepb.TiantianpaokuResultRequest)
}

void TiantianpaokuResultRequest::SharedCtor() {
score_ = int64_t{0};
}

TiantianpaokuResultRequest::~TiantianpaokuResultRequest() {
  // @@protoc_insertion_point(destructor:gamepb.TiantianpaokuResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TiantianpaokuResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TiantianpaokuResultRequest::ArenaDtor(void* object) {
  TiantianpaokuResultRequest* _this = reinterpret_cast< TiantianpaokuResultRequest* >(object);
  (void)_this;
}
void TiantianpaokuResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TiantianpaokuResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TiantianpaokuResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TiantianpaokuResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  score_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TiantianpaokuResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Score = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TiantianpaokuResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TiantianpaokuResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Score = 1;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TiantianpaokuResultRequest)
  return target;
}

size_t TiantianpaokuResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TiantianpaokuResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Score = 1;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiantianpaokuResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TiantianpaokuResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TiantianpaokuResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TiantianpaokuResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TiantianpaokuResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TiantianpaokuResultRequest)
    MergeFrom(*source);
  }
}

void TiantianpaokuResultRequest::MergeFrom(const TiantianpaokuResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TiantianpaokuResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
}

void TiantianpaokuResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TiantianpaokuResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiantianpaokuResultRequest::CopyFrom(const TiantianpaokuResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TiantianpaokuResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiantianpaokuResultRequest::IsInitialized() const {
  return true;
}

void TiantianpaokuResultRequest::InternalSwap(TiantianpaokuResultRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(score_, other->score_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TiantianpaokuResultRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[141]);
}

// ===================================================================

class TiantianpaokuResultResponse::_Internal {
 public:
};

TiantianpaokuResultResponse::TiantianpaokuResultResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.TiantianpaokuResultResponse)
}
TiantianpaokuResultResponse::TiantianpaokuResultResponse(const TiantianpaokuResultResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.TiantianpaokuResultResponse)
}

void TiantianpaokuResultResponse::SharedCtor() {
code_ = 0;
}

TiantianpaokuResultResponse::~TiantianpaokuResultResponse() {
  // @@protoc_insertion_point(destructor:gamepb.TiantianpaokuResultResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TiantianpaokuResultResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TiantianpaokuResultResponse::ArenaDtor(void* object) {
  TiantianpaokuResultResponse* _this = reinterpret_cast< TiantianpaokuResultResponse* >(object);
  (void)_this;
}
void TiantianpaokuResultResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TiantianpaokuResultResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TiantianpaokuResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.TiantianpaokuResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TiantianpaokuResultResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TiantianpaokuResultResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.TiantianpaokuResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.TiantianpaokuResultResponse)
  return target;
}

size_t TiantianpaokuResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.TiantianpaokuResultResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TiantianpaokuResultResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.TiantianpaokuResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TiantianpaokuResultResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TiantianpaokuResultResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.TiantianpaokuResultResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.TiantianpaokuResultResponse)
    MergeFrom(*source);
  }
}

void TiantianpaokuResultResponse::MergeFrom(const TiantianpaokuResultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.TiantianpaokuResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void TiantianpaokuResultResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.TiantianpaokuResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiantianpaokuResultResponse::CopyFrom(const TiantianpaokuResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.TiantianpaokuResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiantianpaokuResultResponse::IsInitialized() const {
  return true;
}

void TiantianpaokuResultResponse::InternalSwap(TiantianpaokuResultResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TiantianpaokuResultResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[142]);
}

// ===================================================================

class HuanlemaomibeiGetDataRequest::_Internal {
 public:
};

HuanlemaomibeiGetDataRequest::HuanlemaomibeiGetDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiGetDataRequest)
}
HuanlemaomibeiGetDataRequest::HuanlemaomibeiGetDataRequest(const HuanlemaomibeiGetDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiGetDataRequest)
}

void HuanlemaomibeiGetDataRequest::SharedCtor() {
}

HuanlemaomibeiGetDataRequest::~HuanlemaomibeiGetDataRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiGetDataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiGetDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiGetDataRequest::ArenaDtor(void* object) {
  HuanlemaomibeiGetDataRequest* _this = reinterpret_cast< HuanlemaomibeiGetDataRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiGetDataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiGetDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiGetDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiGetDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiGetDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiGetDataRequest)
  return target;
}

size_t HuanlemaomibeiGetDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiGetDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiGetDataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiGetDataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiGetDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiGetDataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiGetDataRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiGetDataRequest::MergeFrom(const HuanlemaomibeiGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HuanlemaomibeiGetDataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiGetDataRequest::CopyFrom(const HuanlemaomibeiGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiGetDataRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiGetDataRequest::InternalSwap(HuanlemaomibeiGetDataRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiGetDataRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[143]);
}

// ===================================================================

class HuanlemaomibeiLevel::_Internal {
 public:
};

HuanlemaomibeiLevel::HuanlemaomibeiLevel(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiLevel)
}
HuanlemaomibeiLevel::HuanlemaomibeiLevel(const HuanlemaomibeiLevel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&section_, &from.section_,
    static_cast<size_t>(reinterpret_cast<char*>(&coin_) -
    reinterpret_cast<char*>(&section_)) + sizeof(coin_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiLevel)
}

void HuanlemaomibeiLevel::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&section_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&coin_) -
    reinterpret_cast<char*>(&section_)) + sizeof(coin_));
}

HuanlemaomibeiLevel::~HuanlemaomibeiLevel() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiLevel)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiLevel::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiLevel::ArenaDtor(void* object) {
  HuanlemaomibeiLevel* _this = reinterpret_cast< HuanlemaomibeiLevel* >(object);
  (void)_this;
}
void HuanlemaomibeiLevel::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiLevel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiLevel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&section_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coin_) -
      reinterpret_cast<char*>(&section_)) + sizeof(coin_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiLevel::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Section = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          section_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Unlock = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          unlock_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Star = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          star_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiLevel::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiLevel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Section = 1;
  if (this->section() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_section(), target);
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_level(), target);
  }

  // int32 Unlock = 3;
  if (this->unlock() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_unlock(), target);
  }

  // int32 Star = 4;
  if (this->star() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_star(), target);
  }

  // int64 Coin = 5;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiLevel)
  return target;
}

size_t HuanlemaomibeiLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiLevel)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Section = 1;
  if (this->section() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_section());
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_level());
  }

  // int32 Unlock = 3;
  if (this->unlock() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_unlock());
  }

  // int32 Star = 4;
  if (this->star() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_star());
  }

  // int64 Coin = 5;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiLevel::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiLevel)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiLevel* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiLevel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiLevel)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiLevel)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiLevel::MergeFrom(const HuanlemaomibeiLevel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiLevel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.section() != 0) {
    _internal_set_section(from._internal_section());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.unlock() != 0) {
    _internal_set_unlock(from._internal_unlock());
  }
  if (from.star() != 0) {
    _internal_set_star(from._internal_star());
  }
  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
}

void HuanlemaomibeiLevel::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiLevel::CopyFrom(const HuanlemaomibeiLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiLevel::IsInitialized() const {
  return true;
}

void HuanlemaomibeiLevel::InternalSwap(HuanlemaomibeiLevel* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiLevel, coin_)
      + sizeof(HuanlemaomibeiLevel::coin_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiLevel, section_)>(
          reinterpret_cast<char*>(&section_),
          reinterpret_cast<char*>(&other->section_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiLevel::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[144]);
}

// ===================================================================

class HuanlemaomibeiGetDataResponse::_Internal {
 public:
};

HuanlemaomibeiGetDataResponse::HuanlemaomibeiGetDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  levelarr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiGetDataResponse)
}
HuanlemaomibeiGetDataResponse::HuanlemaomibeiGetDataResponse(const HuanlemaomibeiGetDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      levelarr_(from.levelarr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  inkarr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_inkarr().empty()) {
    inkarr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_inkarr(), 
      GetArenaForAllocation());
  }
  cuparr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cuparr().empty()) {
    cuparr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cuparr(), 
      GetArenaForAllocation());
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&hp_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(hp_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiGetDataResponse)
}

void HuanlemaomibeiGetDataResponse::SharedCtor() {
inkarr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
cuparr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&userid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&hp_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(hp_));
}

HuanlemaomibeiGetDataResponse::~HuanlemaomibeiGetDataResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiGetDataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiGetDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  inkarr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cuparr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void HuanlemaomibeiGetDataResponse::ArenaDtor(void* object) {
  HuanlemaomibeiGetDataResponse* _this = reinterpret_cast< HuanlemaomibeiGetDataResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiGetDataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiGetDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiGetDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  levelarr_.Clear();
  inkarr_.ClearToEmpty();
  cuparr_.ClearToEmpty();
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hp_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(hp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiGetDataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Userid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 FreedrawTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          freedrawtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string InkArr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_inkarr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.HuanlemaomibeiGetDataResponse.InkArr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string CupArr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_cuparr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.HuanlemaomibeiGetDataResponse.CupArr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 InkId = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          inkid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 CupId = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          cupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 OfflineTime = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          offlinetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GameId = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          gameid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gamepb.HuanlemaomibeiLevel LevelArr = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_levelarr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 Hp = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiGetDataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_userid(), target);
  }

  // int64 FreedrawTime = 3;
  if (this->freedrawtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_freedrawtime(), target);
  }

  // string InkArr = 4;
  if (!this->inkarr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_inkarr().data(), static_cast<int>(this->_internal_inkarr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.HuanlemaomibeiGetDataResponse.InkArr");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_inkarr(), target);
  }

  // string CupArr = 5;
  if (!this->cuparr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cuparr().data(), static_cast<int>(this->_internal_cuparr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.HuanlemaomibeiGetDataResponse.CupArr");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_cuparr(), target);
  }

  // int32 InkId = 6;
  if (this->inkid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_inkid(), target);
  }

  // int32 CupId = 7;
  if (this->cupid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_cupid(), target);
  }

  // int64 OfflineTime = 8;
  if (this->offlinetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_offlinetime(), target);
  }

  // int32 GameId = 10;
  if (this->gameid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_gameid(), target);
  }

  // repeated .gamepb.HuanlemaomibeiLevel LevelArr = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_levelarr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, this->_internal_levelarr(i), target, stream);
  }

  // int32 Hp = 12;
  if (this->hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_hp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiGetDataResponse)
  return target;
}

size_t HuanlemaomibeiGetDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiGetDataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gamepb.HuanlemaomibeiLevel LevelArr = 11;
  total_size += 1UL * this->_internal_levelarr_size();
  for (const auto& msg : this->levelarr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string InkArr = 4;
  if (!this->inkarr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_inkarr());
  }

  // string CupArr = 5;
  if (!this->cuparr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cuparr());
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_userid());
  }

  // int64 FreedrawTime = 3;
  if (this->freedrawtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_freedrawtime());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 InkId = 6;
  if (this->inkid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_inkid());
  }

  // int64 OfflineTime = 8;
  if (this->offlinetime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_offlinetime());
  }

  // int32 CupId = 7;
  if (this->cupid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cupid());
  }

  // int32 GameId = 10;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gameid());
  }

  // int32 Hp = 12;
  if (this->hp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiGetDataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiGetDataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiGetDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiGetDataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiGetDataResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiGetDataResponse::MergeFrom(const HuanlemaomibeiGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  levelarr_.MergeFrom(from.levelarr_);
  if (!from.inkarr().empty()) {
    _internal_set_inkarr(from._internal_inkarr());
  }
  if (!from.cuparr().empty()) {
    _internal_set_cuparr(from._internal_cuparr());
  }
  if (from.userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.freedrawtime() != 0) {
    _internal_set_freedrawtime(from._internal_freedrawtime());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.inkid() != 0) {
    _internal_set_inkid(from._internal_inkid());
  }
  if (from.offlinetime() != 0) {
    _internal_set_offlinetime(from._internal_offlinetime());
  }
  if (from.cupid() != 0) {
    _internal_set_cupid(from._internal_cupid());
  }
  if (from.gameid() != 0) {
    _internal_set_gameid(from._internal_gameid());
  }
  if (from.hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
}

void HuanlemaomibeiGetDataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiGetDataResponse::CopyFrom(const HuanlemaomibeiGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiGetDataResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiGetDataResponse::InternalSwap(HuanlemaomibeiGetDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  levelarr_.InternalSwap(&other->levelarr_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &inkarr_, GetArenaForAllocation(),
      &other->inkarr_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &cuparr_, GetArenaForAllocation(),
      &other->cuparr_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiGetDataResponse, hp_)
      + sizeof(HuanlemaomibeiGetDataResponse::hp_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiGetDataResponse, userid_)>(
          reinterpret_cast<char*>(&userid_),
          reinterpret_cast<char*>(&other->userid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiGetDataResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[145]);
}

// ===================================================================

class HuanlemaomibeiSignQueryRequest::_Internal {
 public:
};

HuanlemaomibeiSignQueryRequest::HuanlemaomibeiSignQueryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiSignQueryRequest)
}
HuanlemaomibeiSignQueryRequest::HuanlemaomibeiSignQueryRequest(const HuanlemaomibeiSignQueryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiSignQueryRequest)
}

void HuanlemaomibeiSignQueryRequest::SharedCtor() {
}

HuanlemaomibeiSignQueryRequest::~HuanlemaomibeiSignQueryRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiSignQueryRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiSignQueryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiSignQueryRequest::ArenaDtor(void* object) {
  HuanlemaomibeiSignQueryRequest* _this = reinterpret_cast< HuanlemaomibeiSignQueryRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiSignQueryRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiSignQueryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiSignQueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiSignQueryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiSignQueryRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiSignQueryRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiSignQueryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiSignQueryRequest)
  return target;
}

size_t HuanlemaomibeiSignQueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiSignQueryRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiSignQueryRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiSignQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiSignQueryRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiSignQueryRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiSignQueryRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiSignQueryRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiSignQueryRequest::MergeFrom(const HuanlemaomibeiSignQueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiSignQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HuanlemaomibeiSignQueryRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiSignQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiSignQueryRequest::CopyFrom(const HuanlemaomibeiSignQueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiSignQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiSignQueryRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiSignQueryRequest::InternalSwap(HuanlemaomibeiSignQueryRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiSignQueryRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[146]);
}

// ===================================================================

class HuanlemaomibeiSignQueryResponse::_Internal {
 public:
};

HuanlemaomibeiSignQueryResponse::HuanlemaomibeiSignQueryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiSignQueryResponse)
}
HuanlemaomibeiSignQueryResponse::HuanlemaomibeiSignQueryResponse(const HuanlemaomibeiSignQueryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&signday_) -
    reinterpret_cast<char*>(&code_)) + sizeof(signday_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiSignQueryResponse)
}

void HuanlemaomibeiSignQueryResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&signday_) -
    reinterpret_cast<char*>(&code_)) + sizeof(signday_));
}

HuanlemaomibeiSignQueryResponse::~HuanlemaomibeiSignQueryResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiSignQueryResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiSignQueryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiSignQueryResponse::ArenaDtor(void* object) {
  HuanlemaomibeiSignQueryResponse* _this = reinterpret_cast< HuanlemaomibeiSignQueryResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiSignQueryResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiSignQueryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiSignQueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiSignQueryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&signday_) -
      reinterpret_cast<char*>(&code_)) + sizeof(signday_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiSignQueryResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SignToday = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          signtoday_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SignDay = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          signday_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiSignQueryResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiSignQueryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 SignToday = 2;
  if (this->signtoday() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_signtoday(), target);
  }

  // int32 SignDay = 3;
  if (this->signday() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_signday(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiSignQueryResponse)
  return target;
}

size_t HuanlemaomibeiSignQueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiSignQueryResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 SignToday = 2;
  if (this->signtoday() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_signtoday());
  }

  // int32 SignDay = 3;
  if (this->signday() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_signday());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiSignQueryResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiSignQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiSignQueryResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiSignQueryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiSignQueryResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiSignQueryResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiSignQueryResponse::MergeFrom(const HuanlemaomibeiSignQueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiSignQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.signtoday() != 0) {
    _internal_set_signtoday(from._internal_signtoday());
  }
  if (from.signday() != 0) {
    _internal_set_signday(from._internal_signday());
  }
}

void HuanlemaomibeiSignQueryResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiSignQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiSignQueryResponse::CopyFrom(const HuanlemaomibeiSignQueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiSignQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiSignQueryResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiSignQueryResponse::InternalSwap(HuanlemaomibeiSignQueryResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiSignQueryResponse, signday_)
      + sizeof(HuanlemaomibeiSignQueryResponse::signday_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiSignQueryResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiSignQueryResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[147]);
}

// ===================================================================

class HuanlemaomibeiSignRequest::_Internal {
 public:
};

HuanlemaomibeiSignRequest::HuanlemaomibeiSignRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiSignRequest)
}
HuanlemaomibeiSignRequest::HuanlemaomibeiSignRequest(const HuanlemaomibeiSignRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiSignRequest)
}

void HuanlemaomibeiSignRequest::SharedCtor() {
}

HuanlemaomibeiSignRequest::~HuanlemaomibeiSignRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiSignRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiSignRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiSignRequest::ArenaDtor(void* object) {
  HuanlemaomibeiSignRequest* _this = reinterpret_cast< HuanlemaomibeiSignRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiSignRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiSignRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiSignRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiSignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiSignRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiSignRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiSignRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiSignRequest)
  return target;
}

size_t HuanlemaomibeiSignRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiSignRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiSignRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiSignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiSignRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiSignRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiSignRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiSignRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiSignRequest::MergeFrom(const HuanlemaomibeiSignRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiSignRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HuanlemaomibeiSignRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiSignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiSignRequest::CopyFrom(const HuanlemaomibeiSignRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiSignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiSignRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiSignRequest::InternalSwap(HuanlemaomibeiSignRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiSignRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[148]);
}

// ===================================================================

class HuanlemaomibeiSignResponse::_Internal {
 public:
};

HuanlemaomibeiSignResponse::HuanlemaomibeiSignResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiSignResponse)
}
HuanlemaomibeiSignResponse::HuanlemaomibeiSignResponse(const HuanlemaomibeiSignResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiSignResponse)
}

void HuanlemaomibeiSignResponse::SharedCtor() {
code_ = 0;
}

HuanlemaomibeiSignResponse::~HuanlemaomibeiSignResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiSignResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiSignResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiSignResponse::ArenaDtor(void* object) {
  HuanlemaomibeiSignResponse* _this = reinterpret_cast< HuanlemaomibeiSignResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiSignResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiSignResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiSignResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiSignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiSignResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiSignResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiSignResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiSignResponse)
  return target;
}

size_t HuanlemaomibeiSignResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiSignResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiSignResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiSignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiSignResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiSignResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiSignResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiSignResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiSignResponse::MergeFrom(const HuanlemaomibeiSignResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiSignResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void HuanlemaomibeiSignResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiSignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiSignResponse::CopyFrom(const HuanlemaomibeiSignResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiSignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiSignResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiSignResponse::InternalSwap(HuanlemaomibeiSignResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiSignResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[149]);
}

// ===================================================================

class HuanlemaomibeiFreeDrawQueryRequest::_Internal {
 public:
};

HuanlemaomibeiFreeDrawQueryRequest::HuanlemaomibeiFreeDrawQueryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiFreeDrawQueryRequest)
}
HuanlemaomibeiFreeDrawQueryRequest::HuanlemaomibeiFreeDrawQueryRequest(const HuanlemaomibeiFreeDrawQueryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiFreeDrawQueryRequest)
}

void HuanlemaomibeiFreeDrawQueryRequest::SharedCtor() {
}

HuanlemaomibeiFreeDrawQueryRequest::~HuanlemaomibeiFreeDrawQueryRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiFreeDrawQueryRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiFreeDrawQueryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiFreeDrawQueryRequest::ArenaDtor(void* object) {
  HuanlemaomibeiFreeDrawQueryRequest* _this = reinterpret_cast< HuanlemaomibeiFreeDrawQueryRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiFreeDrawQueryRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiFreeDrawQueryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiFreeDrawQueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiFreeDrawQueryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiFreeDrawQueryRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiFreeDrawQueryRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiFreeDrawQueryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiFreeDrawQueryRequest)
  return target;
}

size_t HuanlemaomibeiFreeDrawQueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiFreeDrawQueryRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiFreeDrawQueryRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiFreeDrawQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiFreeDrawQueryRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiFreeDrawQueryRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiFreeDrawQueryRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiFreeDrawQueryRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiFreeDrawQueryRequest::MergeFrom(const HuanlemaomibeiFreeDrawQueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiFreeDrawQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HuanlemaomibeiFreeDrawQueryRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiFreeDrawQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiFreeDrawQueryRequest::CopyFrom(const HuanlemaomibeiFreeDrawQueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiFreeDrawQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiFreeDrawQueryRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiFreeDrawQueryRequest::InternalSwap(HuanlemaomibeiFreeDrawQueryRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiFreeDrawQueryRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[150]);
}

// ===================================================================

class HuanlemaomibeiFreeDrawQueryResponse::_Internal {
 public:
};

HuanlemaomibeiFreeDrawQueryResponse::HuanlemaomibeiFreeDrawQueryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiFreeDrawQueryResponse)
}
HuanlemaomibeiFreeDrawQueryResponse::HuanlemaomibeiFreeDrawQueryResponse(const HuanlemaomibeiFreeDrawQueryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&freedrawcount_, &from.freedrawcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&freedrawcount_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiFreeDrawQueryResponse)
}

void HuanlemaomibeiFreeDrawQueryResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&freedrawcount_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&freedrawcount_)) + sizeof(code_));
}

HuanlemaomibeiFreeDrawQueryResponse::~HuanlemaomibeiFreeDrawQueryResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiFreeDrawQueryResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiFreeDrawQueryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiFreeDrawQueryResponse::ArenaDtor(void* object) {
  HuanlemaomibeiFreeDrawQueryResponse* _this = reinterpret_cast< HuanlemaomibeiFreeDrawQueryResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiFreeDrawQueryResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiFreeDrawQueryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiFreeDrawQueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiFreeDrawQueryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&freedrawcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&freedrawcount_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiFreeDrawQueryResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 FreedrawCount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          freedrawcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiFreeDrawQueryResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiFreeDrawQueryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 FreedrawCount = 2;
  if (this->freedrawcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_freedrawcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiFreeDrawQueryResponse)
  return target;
}

size_t HuanlemaomibeiFreeDrawQueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiFreeDrawQueryResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 FreedrawCount = 2;
  if (this->freedrawcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_freedrawcount());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiFreeDrawQueryResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiFreeDrawQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiFreeDrawQueryResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiFreeDrawQueryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiFreeDrawQueryResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiFreeDrawQueryResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiFreeDrawQueryResponse::MergeFrom(const HuanlemaomibeiFreeDrawQueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiFreeDrawQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.freedrawcount() != 0) {
    _internal_set_freedrawcount(from._internal_freedrawcount());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void HuanlemaomibeiFreeDrawQueryResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiFreeDrawQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiFreeDrawQueryResponse::CopyFrom(const HuanlemaomibeiFreeDrawQueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiFreeDrawQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiFreeDrawQueryResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiFreeDrawQueryResponse::InternalSwap(HuanlemaomibeiFreeDrawQueryResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiFreeDrawQueryResponse, code_)
      + sizeof(HuanlemaomibeiFreeDrawQueryResponse::code_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiFreeDrawQueryResponse, freedrawcount_)>(
          reinterpret_cast<char*>(&freedrawcount_),
          reinterpret_cast<char*>(&other->freedrawcount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiFreeDrawQueryResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[151]);
}

// ===================================================================

class HuanlemaomibeiFreeDrawRequest::_Internal {
 public:
};

HuanlemaomibeiFreeDrawRequest::HuanlemaomibeiFreeDrawRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiFreeDrawRequest)
}
HuanlemaomibeiFreeDrawRequest::HuanlemaomibeiFreeDrawRequest(const HuanlemaomibeiFreeDrawRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiFreeDrawRequest)
}

void HuanlemaomibeiFreeDrawRequest::SharedCtor() {
}

HuanlemaomibeiFreeDrawRequest::~HuanlemaomibeiFreeDrawRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiFreeDrawRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiFreeDrawRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiFreeDrawRequest::ArenaDtor(void* object) {
  HuanlemaomibeiFreeDrawRequest* _this = reinterpret_cast< HuanlemaomibeiFreeDrawRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiFreeDrawRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiFreeDrawRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiFreeDrawRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiFreeDrawRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiFreeDrawRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiFreeDrawRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiFreeDrawRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiFreeDrawRequest)
  return target;
}

size_t HuanlemaomibeiFreeDrawRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiFreeDrawRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiFreeDrawRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiFreeDrawRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiFreeDrawRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiFreeDrawRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiFreeDrawRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiFreeDrawRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiFreeDrawRequest::MergeFrom(const HuanlemaomibeiFreeDrawRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiFreeDrawRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HuanlemaomibeiFreeDrawRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiFreeDrawRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiFreeDrawRequest::CopyFrom(const HuanlemaomibeiFreeDrawRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiFreeDrawRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiFreeDrawRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiFreeDrawRequest::InternalSwap(HuanlemaomibeiFreeDrawRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiFreeDrawRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[152]);
}

// ===================================================================

class HuanlemaomibeiFreeDrawResponse::_Internal {
 public:
};

HuanlemaomibeiFreeDrawResponse::HuanlemaomibeiFreeDrawResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiFreeDrawResponse)
}
HuanlemaomibeiFreeDrawResponse::HuanlemaomibeiFreeDrawResponse(const HuanlemaomibeiFreeDrawResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&freedrawtime_) -
    reinterpret_cast<char*>(&code_)) + sizeof(freedrawtime_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiFreeDrawResponse)
}

void HuanlemaomibeiFreeDrawResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&freedrawtime_) -
    reinterpret_cast<char*>(&code_)) + sizeof(freedrawtime_));
}

HuanlemaomibeiFreeDrawResponse::~HuanlemaomibeiFreeDrawResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiFreeDrawResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiFreeDrawResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiFreeDrawResponse::ArenaDtor(void* object) {
  HuanlemaomibeiFreeDrawResponse* _this = reinterpret_cast< HuanlemaomibeiFreeDrawResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiFreeDrawResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiFreeDrawResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiFreeDrawResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiFreeDrawResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&freedrawtime_) -
      reinterpret_cast<char*>(&code_)) + sizeof(freedrawtime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiFreeDrawResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GiftIndex = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          giftindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 FreedrawTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          freedrawtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiFreeDrawResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiFreeDrawResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 GiftIndex = 2;
  if (this->giftindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_giftindex(), target);
  }

  // int64 FreedrawTime = 3;
  if (this->freedrawtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_freedrawtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiFreeDrawResponse)
  return target;
}

size_t HuanlemaomibeiFreeDrawResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiFreeDrawResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 GiftIndex = 2;
  if (this->giftindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_giftindex());
  }

  // int64 FreedrawTime = 3;
  if (this->freedrawtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_freedrawtime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiFreeDrawResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiFreeDrawResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiFreeDrawResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiFreeDrawResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiFreeDrawResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiFreeDrawResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiFreeDrawResponse::MergeFrom(const HuanlemaomibeiFreeDrawResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiFreeDrawResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.giftindex() != 0) {
    _internal_set_giftindex(from._internal_giftindex());
  }
  if (from.freedrawtime() != 0) {
    _internal_set_freedrawtime(from._internal_freedrawtime());
  }
}

void HuanlemaomibeiFreeDrawResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiFreeDrawResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiFreeDrawResponse::CopyFrom(const HuanlemaomibeiFreeDrawResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiFreeDrawResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiFreeDrawResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiFreeDrawResponse::InternalSwap(HuanlemaomibeiFreeDrawResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiFreeDrawResponse, freedrawtime_)
      + sizeof(HuanlemaomibeiFreeDrawResponse::freedrawtime_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiFreeDrawResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiFreeDrawResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[153]);
}

// ===================================================================

class HuanlemaomibeiFlyQueryRequest::_Internal {
 public:
};

HuanlemaomibeiFlyQueryRequest::HuanlemaomibeiFlyQueryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiFlyQueryRequest)
}
HuanlemaomibeiFlyQueryRequest::HuanlemaomibeiFlyQueryRequest(const HuanlemaomibeiFlyQueryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiFlyQueryRequest)
}

void HuanlemaomibeiFlyQueryRequest::SharedCtor() {
}

HuanlemaomibeiFlyQueryRequest::~HuanlemaomibeiFlyQueryRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiFlyQueryRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiFlyQueryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiFlyQueryRequest::ArenaDtor(void* object) {
  HuanlemaomibeiFlyQueryRequest* _this = reinterpret_cast< HuanlemaomibeiFlyQueryRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiFlyQueryRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiFlyQueryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiFlyQueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiFlyQueryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiFlyQueryRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiFlyQueryRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiFlyQueryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiFlyQueryRequest)
  return target;
}

size_t HuanlemaomibeiFlyQueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiFlyQueryRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiFlyQueryRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiFlyQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiFlyQueryRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiFlyQueryRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiFlyQueryRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiFlyQueryRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiFlyQueryRequest::MergeFrom(const HuanlemaomibeiFlyQueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiFlyQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HuanlemaomibeiFlyQueryRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiFlyQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiFlyQueryRequest::CopyFrom(const HuanlemaomibeiFlyQueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiFlyQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiFlyQueryRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiFlyQueryRequest::InternalSwap(HuanlemaomibeiFlyQueryRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiFlyQueryRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[154]);
}

// ===================================================================

class HuanlemaomibeiFlyQueryResponse::_Internal {
 public:
};

HuanlemaomibeiFlyQueryResponse::HuanlemaomibeiFlyQueryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiFlyQueryResponse)
}
HuanlemaomibeiFlyQueryResponse::HuanlemaomibeiFlyQueryResponse(const HuanlemaomibeiFlyQueryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&flycount_, &from.flycount_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&flycount_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiFlyQueryResponse)
}

void HuanlemaomibeiFlyQueryResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&flycount_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&flycount_)) + sizeof(code_));
}

HuanlemaomibeiFlyQueryResponse::~HuanlemaomibeiFlyQueryResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiFlyQueryResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiFlyQueryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiFlyQueryResponse::ArenaDtor(void* object) {
  HuanlemaomibeiFlyQueryResponse* _this = reinterpret_cast< HuanlemaomibeiFlyQueryResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiFlyQueryResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiFlyQueryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiFlyQueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiFlyQueryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&flycount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&flycount_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiFlyQueryResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 FlyCount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flycount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiFlyQueryResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiFlyQueryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 FlyCount = 2;
  if (this->flycount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_flycount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiFlyQueryResponse)
  return target;
}

size_t HuanlemaomibeiFlyQueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiFlyQueryResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 FlyCount = 2;
  if (this->flycount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flycount());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiFlyQueryResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiFlyQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiFlyQueryResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiFlyQueryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiFlyQueryResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiFlyQueryResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiFlyQueryResponse::MergeFrom(const HuanlemaomibeiFlyQueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiFlyQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.flycount() != 0) {
    _internal_set_flycount(from._internal_flycount());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void HuanlemaomibeiFlyQueryResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiFlyQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiFlyQueryResponse::CopyFrom(const HuanlemaomibeiFlyQueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiFlyQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiFlyQueryResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiFlyQueryResponse::InternalSwap(HuanlemaomibeiFlyQueryResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiFlyQueryResponse, code_)
      + sizeof(HuanlemaomibeiFlyQueryResponse::code_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiFlyQueryResponse, flycount_)>(
          reinterpret_cast<char*>(&flycount_),
          reinterpret_cast<char*>(&other->flycount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiFlyQueryResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[155]);
}

// ===================================================================

class HuanlemaomibeiFlyRequest::_Internal {
 public:
};

HuanlemaomibeiFlyRequest::HuanlemaomibeiFlyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiFlyRequest)
}
HuanlemaomibeiFlyRequest::HuanlemaomibeiFlyRequest(const HuanlemaomibeiFlyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiFlyRequest)
}

void HuanlemaomibeiFlyRequest::SharedCtor() {
}

HuanlemaomibeiFlyRequest::~HuanlemaomibeiFlyRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiFlyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiFlyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiFlyRequest::ArenaDtor(void* object) {
  HuanlemaomibeiFlyRequest* _this = reinterpret_cast< HuanlemaomibeiFlyRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiFlyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiFlyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiFlyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiFlyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiFlyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiFlyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiFlyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiFlyRequest)
  return target;
}

size_t HuanlemaomibeiFlyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiFlyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiFlyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiFlyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiFlyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiFlyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiFlyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiFlyRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiFlyRequest::MergeFrom(const HuanlemaomibeiFlyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiFlyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HuanlemaomibeiFlyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiFlyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiFlyRequest::CopyFrom(const HuanlemaomibeiFlyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiFlyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiFlyRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiFlyRequest::InternalSwap(HuanlemaomibeiFlyRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiFlyRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[156]);
}

// ===================================================================

class HuanlemaomibeiFlyResponse::_Internal {
 public:
};

HuanlemaomibeiFlyResponse::HuanlemaomibeiFlyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiFlyResponse)
}
HuanlemaomibeiFlyResponse::HuanlemaomibeiFlyResponse(const HuanlemaomibeiFlyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&flytime_) -
    reinterpret_cast<char*>(&code_)) + sizeof(flytime_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiFlyResponse)
}

void HuanlemaomibeiFlyResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flytime_) -
    reinterpret_cast<char*>(&code_)) + sizeof(flytime_));
}

HuanlemaomibeiFlyResponse::~HuanlemaomibeiFlyResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiFlyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiFlyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiFlyResponse::ArenaDtor(void* object) {
  HuanlemaomibeiFlyResponse* _this = reinterpret_cast< HuanlemaomibeiFlyResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiFlyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiFlyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiFlyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiFlyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flytime_) -
      reinterpret_cast<char*>(&code_)) + sizeof(flytime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiFlyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GiftIndex = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          giftindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 FlyTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          flytime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiFlyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiFlyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 GiftIndex = 2;
  if (this->giftindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_giftindex(), target);
  }

  // int64 FlyTime = 3;
  if (this->flytime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_flytime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiFlyResponse)
  return target;
}

size_t HuanlemaomibeiFlyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiFlyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 GiftIndex = 2;
  if (this->giftindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_giftindex());
  }

  // int64 FlyTime = 3;
  if (this->flytime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flytime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiFlyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiFlyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiFlyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiFlyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiFlyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiFlyResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiFlyResponse::MergeFrom(const HuanlemaomibeiFlyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiFlyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.giftindex() != 0) {
    _internal_set_giftindex(from._internal_giftindex());
  }
  if (from.flytime() != 0) {
    _internal_set_flytime(from._internal_flytime());
  }
}

void HuanlemaomibeiFlyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiFlyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiFlyResponse::CopyFrom(const HuanlemaomibeiFlyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiFlyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiFlyResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiFlyResponse::InternalSwap(HuanlemaomibeiFlyResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiFlyResponse, flytime_)
      + sizeof(HuanlemaomibeiFlyResponse::flytime_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiFlyResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiFlyResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[157]);
}

// ===================================================================

class HuanlemaomibeiOfflineCoinRequest::_Internal {
 public:
};

HuanlemaomibeiOfflineCoinRequest::HuanlemaomibeiOfflineCoinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiOfflineCoinRequest)
}
HuanlemaomibeiOfflineCoinRequest::HuanlemaomibeiOfflineCoinRequest(const HuanlemaomibeiOfflineCoinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiOfflineCoinRequest)
}

void HuanlemaomibeiOfflineCoinRequest::SharedCtor() {
}

HuanlemaomibeiOfflineCoinRequest::~HuanlemaomibeiOfflineCoinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiOfflineCoinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiOfflineCoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiOfflineCoinRequest::ArenaDtor(void* object) {
  HuanlemaomibeiOfflineCoinRequest* _this = reinterpret_cast< HuanlemaomibeiOfflineCoinRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiOfflineCoinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiOfflineCoinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiOfflineCoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiOfflineCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiOfflineCoinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiOfflineCoinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiOfflineCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiOfflineCoinRequest)
  return target;
}

size_t HuanlemaomibeiOfflineCoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiOfflineCoinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiOfflineCoinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiOfflineCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiOfflineCoinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiOfflineCoinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiOfflineCoinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiOfflineCoinRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiOfflineCoinRequest::MergeFrom(const HuanlemaomibeiOfflineCoinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiOfflineCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HuanlemaomibeiOfflineCoinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiOfflineCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiOfflineCoinRequest::CopyFrom(const HuanlemaomibeiOfflineCoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiOfflineCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiOfflineCoinRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiOfflineCoinRequest::InternalSwap(HuanlemaomibeiOfflineCoinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiOfflineCoinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[158]);
}

// ===================================================================

class HuanlemaomibeiOfflineCoinResponse::_Internal {
 public:
};

HuanlemaomibeiOfflineCoinResponse::HuanlemaomibeiOfflineCoinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiOfflineCoinResponse)
}
HuanlemaomibeiOfflineCoinResponse::HuanlemaomibeiOfflineCoinResponse(const HuanlemaomibeiOfflineCoinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&offlinetime_, &from.offlinetime_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&offlinetime_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiOfflineCoinResponse)
}

void HuanlemaomibeiOfflineCoinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&offlinetime_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&offlinetime_)) + sizeof(code_));
}

HuanlemaomibeiOfflineCoinResponse::~HuanlemaomibeiOfflineCoinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiOfflineCoinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiOfflineCoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiOfflineCoinResponse::ArenaDtor(void* object) {
  HuanlemaomibeiOfflineCoinResponse* _this = reinterpret_cast< HuanlemaomibeiOfflineCoinResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiOfflineCoinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiOfflineCoinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiOfflineCoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiOfflineCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&offlinetime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&offlinetime_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiOfflineCoinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 OfflineTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          offlinetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiOfflineCoinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiOfflineCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 OfflineTime = 2;
  if (this->offlinetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_offlinetime(), target);
  }

  // int64 Coin = 3;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiOfflineCoinResponse)
  return target;
}

size_t HuanlemaomibeiOfflineCoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiOfflineCoinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 OfflineTime = 2;
  if (this->offlinetime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_offlinetime());
  }

  // int64 Coin = 3;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiOfflineCoinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiOfflineCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiOfflineCoinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiOfflineCoinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiOfflineCoinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiOfflineCoinResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiOfflineCoinResponse::MergeFrom(const HuanlemaomibeiOfflineCoinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiOfflineCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.offlinetime() != 0) {
    _internal_set_offlinetime(from._internal_offlinetime());
  }
  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void HuanlemaomibeiOfflineCoinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiOfflineCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiOfflineCoinResponse::CopyFrom(const HuanlemaomibeiOfflineCoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiOfflineCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiOfflineCoinResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiOfflineCoinResponse::InternalSwap(HuanlemaomibeiOfflineCoinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiOfflineCoinResponse, code_)
      + sizeof(HuanlemaomibeiOfflineCoinResponse::code_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiOfflineCoinResponse, offlinetime_)>(
          reinterpret_cast<char*>(&offlinetime_),
          reinterpret_cast<char*>(&other->offlinetime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiOfflineCoinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[159]);
}

// ===================================================================

class HuanlemaomibeiBuySkinRequest::_Internal {
 public:
};

HuanlemaomibeiBuySkinRequest::HuanlemaomibeiBuySkinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiBuySkinRequest)
}
HuanlemaomibeiBuySkinRequest::HuanlemaomibeiBuySkinRequest(const HuanlemaomibeiBuySkinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&inkid_, &from.inkid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cupid_) -
    reinterpret_cast<char*>(&inkid_)) + sizeof(cupid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiBuySkinRequest)
}

void HuanlemaomibeiBuySkinRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&inkid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cupid_) -
    reinterpret_cast<char*>(&inkid_)) + sizeof(cupid_));
}

HuanlemaomibeiBuySkinRequest::~HuanlemaomibeiBuySkinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiBuySkinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiBuySkinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiBuySkinRequest::ArenaDtor(void* object) {
  HuanlemaomibeiBuySkinRequest* _this = reinterpret_cast< HuanlemaomibeiBuySkinRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiBuySkinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiBuySkinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiBuySkinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiBuySkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&inkid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cupid_) -
      reinterpret_cast<char*>(&inkid_)) + sizeof(cupid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiBuySkinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 InkId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          inkid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 CupId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          cupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiBuySkinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiBuySkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 InkId = 1;
  if (this->inkid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_inkid(), target);
  }

  // int32 CupId = 2;
  if (this->cupid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_cupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiBuySkinRequest)
  return target;
}

size_t HuanlemaomibeiBuySkinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiBuySkinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 InkId = 1;
  if (this->inkid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_inkid());
  }

  // int32 CupId = 2;
  if (this->cupid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiBuySkinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiBuySkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiBuySkinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiBuySkinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiBuySkinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiBuySkinRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiBuySkinRequest::MergeFrom(const HuanlemaomibeiBuySkinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiBuySkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.inkid() != 0) {
    _internal_set_inkid(from._internal_inkid());
  }
  if (from.cupid() != 0) {
    _internal_set_cupid(from._internal_cupid());
  }
}

void HuanlemaomibeiBuySkinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiBuySkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiBuySkinRequest::CopyFrom(const HuanlemaomibeiBuySkinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiBuySkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiBuySkinRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiBuySkinRequest::InternalSwap(HuanlemaomibeiBuySkinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiBuySkinRequest, cupid_)
      + sizeof(HuanlemaomibeiBuySkinRequest::cupid_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiBuySkinRequest, inkid_)>(
          reinterpret_cast<char*>(&inkid_),
          reinterpret_cast<char*>(&other->inkid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiBuySkinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[160]);
}

// ===================================================================

class HuanlemaomibeiBuySkinResponse::_Internal {
 public:
};

HuanlemaomibeiBuySkinResponse::HuanlemaomibeiBuySkinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiBuySkinResponse)
}
HuanlemaomibeiBuySkinResponse::HuanlemaomibeiBuySkinResponse(const HuanlemaomibeiBuySkinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&cupid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(cupid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiBuySkinResponse)
}

void HuanlemaomibeiBuySkinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cupid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(cupid_));
}

HuanlemaomibeiBuySkinResponse::~HuanlemaomibeiBuySkinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiBuySkinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiBuySkinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiBuySkinResponse::ArenaDtor(void* object) {
  HuanlemaomibeiBuySkinResponse* _this = reinterpret_cast< HuanlemaomibeiBuySkinResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiBuySkinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiBuySkinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiBuySkinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiBuySkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cupid_) -
      reinterpret_cast<char*>(&code_)) + sizeof(cupid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiBuySkinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 InkId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          inkid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 CupId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          cupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiBuySkinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiBuySkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 InkId = 2;
  if (this->inkid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_inkid(), target);
  }

  // int32 CupId = 3;
  if (this->cupid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_cupid(), target);
  }

  // int64 Coin = 4;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiBuySkinResponse)
  return target;
}

size_t HuanlemaomibeiBuySkinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiBuySkinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 InkId = 2;
  if (this->inkid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_inkid());
  }

  // int64 Coin = 4;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 CupId = 3;
  if (this->cupid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiBuySkinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiBuySkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiBuySkinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiBuySkinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiBuySkinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiBuySkinResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiBuySkinResponse::MergeFrom(const HuanlemaomibeiBuySkinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiBuySkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.inkid() != 0) {
    _internal_set_inkid(from._internal_inkid());
  }
  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.cupid() != 0) {
    _internal_set_cupid(from._internal_cupid());
  }
}

void HuanlemaomibeiBuySkinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiBuySkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiBuySkinResponse::CopyFrom(const HuanlemaomibeiBuySkinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiBuySkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiBuySkinResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiBuySkinResponse::InternalSwap(HuanlemaomibeiBuySkinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiBuySkinResponse, cupid_)
      + sizeof(HuanlemaomibeiBuySkinResponse::cupid_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiBuySkinResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiBuySkinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[161]);
}

// ===================================================================

class HuanlemaomibeiUseSkinRequest::_Internal {
 public:
};

HuanlemaomibeiUseSkinRequest::HuanlemaomibeiUseSkinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiUseSkinRequest)
}
HuanlemaomibeiUseSkinRequest::HuanlemaomibeiUseSkinRequest(const HuanlemaomibeiUseSkinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&inkid_, &from.inkid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cupid_) -
    reinterpret_cast<char*>(&inkid_)) + sizeof(cupid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiUseSkinRequest)
}

void HuanlemaomibeiUseSkinRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&inkid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cupid_) -
    reinterpret_cast<char*>(&inkid_)) + sizeof(cupid_));
}

HuanlemaomibeiUseSkinRequest::~HuanlemaomibeiUseSkinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiUseSkinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiUseSkinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiUseSkinRequest::ArenaDtor(void* object) {
  HuanlemaomibeiUseSkinRequest* _this = reinterpret_cast< HuanlemaomibeiUseSkinRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiUseSkinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiUseSkinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiUseSkinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiUseSkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&inkid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cupid_) -
      reinterpret_cast<char*>(&inkid_)) + sizeof(cupid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiUseSkinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 InkId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          inkid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 CupId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          cupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiUseSkinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiUseSkinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 InkId = 1;
  if (this->inkid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_inkid(), target);
  }

  // int32 CupId = 2;
  if (this->cupid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_cupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiUseSkinRequest)
  return target;
}

size_t HuanlemaomibeiUseSkinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiUseSkinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 InkId = 1;
  if (this->inkid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_inkid());
  }

  // int32 CupId = 2;
  if (this->cupid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiUseSkinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiUseSkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiUseSkinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiUseSkinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiUseSkinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiUseSkinRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiUseSkinRequest::MergeFrom(const HuanlemaomibeiUseSkinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiUseSkinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.inkid() != 0) {
    _internal_set_inkid(from._internal_inkid());
  }
  if (from.cupid() != 0) {
    _internal_set_cupid(from._internal_cupid());
  }
}

void HuanlemaomibeiUseSkinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiUseSkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiUseSkinRequest::CopyFrom(const HuanlemaomibeiUseSkinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiUseSkinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiUseSkinRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiUseSkinRequest::InternalSwap(HuanlemaomibeiUseSkinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiUseSkinRequest, cupid_)
      + sizeof(HuanlemaomibeiUseSkinRequest::cupid_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiUseSkinRequest, inkid_)>(
          reinterpret_cast<char*>(&inkid_),
          reinterpret_cast<char*>(&other->inkid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiUseSkinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[162]);
}

// ===================================================================

class HuanlemaomibeiUseSkinResponse::_Internal {
 public:
};

HuanlemaomibeiUseSkinResponse::HuanlemaomibeiUseSkinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiUseSkinResponse)
}
HuanlemaomibeiUseSkinResponse::HuanlemaomibeiUseSkinResponse(const HuanlemaomibeiUseSkinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&cupid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(cupid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiUseSkinResponse)
}

void HuanlemaomibeiUseSkinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cupid_) -
    reinterpret_cast<char*>(&code_)) + sizeof(cupid_));
}

HuanlemaomibeiUseSkinResponse::~HuanlemaomibeiUseSkinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiUseSkinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiUseSkinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiUseSkinResponse::ArenaDtor(void* object) {
  HuanlemaomibeiUseSkinResponse* _this = reinterpret_cast< HuanlemaomibeiUseSkinResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiUseSkinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiUseSkinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiUseSkinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiUseSkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cupid_) -
      reinterpret_cast<char*>(&code_)) + sizeof(cupid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiUseSkinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 InkId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          inkid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 CupId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          cupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiUseSkinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiUseSkinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 InkId = 2;
  if (this->inkid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_inkid(), target);
  }

  // int32 CupId = 3;
  if (this->cupid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_cupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiUseSkinResponse)
  return target;
}

size_t HuanlemaomibeiUseSkinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiUseSkinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 InkId = 2;
  if (this->inkid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_inkid());
  }

  // int32 CupId = 3;
  if (this->cupid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiUseSkinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiUseSkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiUseSkinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiUseSkinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiUseSkinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiUseSkinResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiUseSkinResponse::MergeFrom(const HuanlemaomibeiUseSkinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiUseSkinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.inkid() != 0) {
    _internal_set_inkid(from._internal_inkid());
  }
  if (from.cupid() != 0) {
    _internal_set_cupid(from._internal_cupid());
  }
}

void HuanlemaomibeiUseSkinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiUseSkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiUseSkinResponse::CopyFrom(const HuanlemaomibeiUseSkinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiUseSkinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiUseSkinResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiUseSkinResponse::InternalSwap(HuanlemaomibeiUseSkinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiUseSkinResponse, cupid_)
      + sizeof(HuanlemaomibeiUseSkinResponse::cupid_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiUseSkinResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiUseSkinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[163]);
}

// ===================================================================

class HuanlemaomibeiStartRequest::_Internal {
 public:
};

HuanlemaomibeiStartRequest::HuanlemaomibeiStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiStartRequest)
}
HuanlemaomibeiStartRequest::HuanlemaomibeiStartRequest(const HuanlemaomibeiStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&section_, &from.section_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&section_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiStartRequest)
}

void HuanlemaomibeiStartRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&section_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&section_)) + sizeof(level_));
}

HuanlemaomibeiStartRequest::~HuanlemaomibeiStartRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiStartRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiStartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiStartRequest::ArenaDtor(void* object) {
  HuanlemaomibeiStartRequest* _this = reinterpret_cast< HuanlemaomibeiStartRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiStartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&section_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&section_)) + sizeof(level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiStartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Section = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          section_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiStartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Section = 1;
  if (this->section() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_section(), target);
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiStartRequest)
  return target;
}

size_t HuanlemaomibeiStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiStartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Section = 1;
  if (this->section() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_section());
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiStartRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiStartRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiStartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiStartRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiStartRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiStartRequest::MergeFrom(const HuanlemaomibeiStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.section() != 0) {
    _internal_set_section(from._internal_section());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
}

void HuanlemaomibeiStartRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiStartRequest::CopyFrom(const HuanlemaomibeiStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiStartRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiStartRequest::InternalSwap(HuanlemaomibeiStartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiStartRequest, level_)
      + sizeof(HuanlemaomibeiStartRequest::level_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiStartRequest, section_)>(
          reinterpret_cast<char*>(&section_),
          reinterpret_cast<char*>(&other->section_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiStartRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[164]);
}

// ===================================================================

class HuanlemaomibeiStartResponse::_Internal {
 public:
};

HuanlemaomibeiStartResponse::HuanlemaomibeiStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiStartResponse)
}
HuanlemaomibeiStartResponse::HuanlemaomibeiStartResponse(const HuanlemaomibeiStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&code_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiStartResponse)
}

void HuanlemaomibeiStartResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&code_)) + sizeof(level_));
}

HuanlemaomibeiStartResponse::~HuanlemaomibeiStartResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiStartResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiStartResponse::ArenaDtor(void* object) {
  HuanlemaomibeiStartResponse* _this = reinterpret_cast< HuanlemaomibeiStartResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiStartResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiStartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&code_)) + sizeof(level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiStartResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Section = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          section_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiStartResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 Section = 2;
  if (this->section() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_section(), target);
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiStartResponse)
  return target;
}

size_t HuanlemaomibeiStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiStartResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 Section = 2;
  if (this->section() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_section());
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiStartResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiStartResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiStartResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiStartResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiStartResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiStartResponse::MergeFrom(const HuanlemaomibeiStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.section() != 0) {
    _internal_set_section(from._internal_section());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
}

void HuanlemaomibeiStartResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiStartResponse::CopyFrom(const HuanlemaomibeiStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiStartResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiStartResponse::InternalSwap(HuanlemaomibeiStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiStartResponse, level_)
      + sizeof(HuanlemaomibeiStartResponse::level_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiStartResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiStartResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[165]);
}

// ===================================================================

class HuanlemaomibeiResultRequest::_Internal {
 public:
};

HuanlemaomibeiResultRequest::HuanlemaomibeiResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiResultRequest)
}
HuanlemaomibeiResultRequest::HuanlemaomibeiResultRequest(const HuanlemaomibeiResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&section_, &from.section_,
    static_cast<size_t>(reinterpret_cast<char*>(&star_) -
    reinterpret_cast<char*>(&section_)) + sizeof(star_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiResultRequest)
}

void HuanlemaomibeiResultRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&section_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&star_) -
    reinterpret_cast<char*>(&section_)) + sizeof(star_));
}

HuanlemaomibeiResultRequest::~HuanlemaomibeiResultRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiResultRequest::ArenaDtor(void* object) {
  HuanlemaomibeiResultRequest* _this = reinterpret_cast< HuanlemaomibeiResultRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&section_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&star_) -
      reinterpret_cast<char*>(&section_)) + sizeof(star_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Section = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          section_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Star = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          star_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Section = 1;
  if (this->section() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_section(), target);
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_level(), target);
  }

  // int32 Star = 3;
  if (this->star() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_star(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiResultRequest)
  return target;
}

size_t HuanlemaomibeiResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Section = 1;
  if (this->section() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_section());
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_level());
  }

  // int32 Star = 3;
  if (this->star() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_star());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiResultRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiResultRequest::MergeFrom(const HuanlemaomibeiResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.section() != 0) {
    _internal_set_section(from._internal_section());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.star() != 0) {
    _internal_set_star(from._internal_star());
  }
}

void HuanlemaomibeiResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiResultRequest::CopyFrom(const HuanlemaomibeiResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiResultRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiResultRequest::InternalSwap(HuanlemaomibeiResultRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiResultRequest, star_)
      + sizeof(HuanlemaomibeiResultRequest::star_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiResultRequest, section_)>(
          reinterpret_cast<char*>(&section_),
          reinterpret_cast<char*>(&other->section_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiResultRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[166]);
}

// ===================================================================

class HuanlemaomibeiResultResponse::_Internal {
 public:
};

HuanlemaomibeiResultResponse::HuanlemaomibeiResultResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiResultResponse)
}
HuanlemaomibeiResultResponse::HuanlemaomibeiResultResponse(const HuanlemaomibeiResultResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&code_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiResultResponse)
}

void HuanlemaomibeiResultResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&code_)) + sizeof(level_));
}

HuanlemaomibeiResultResponse::~HuanlemaomibeiResultResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiResultResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiResultResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiResultResponse::ArenaDtor(void* object) {
  HuanlemaomibeiResultResponse* _this = reinterpret_cast< HuanlemaomibeiResultResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiResultResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiResultResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&code_)) + sizeof(level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiResultResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Section = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          section_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiResultResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 Section = 2;
  if (this->section() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_section(), target);
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiResultResponse)
  return target;
}

size_t HuanlemaomibeiResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiResultResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 Section = 2;
  if (this->section() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_section());
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiResultResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiResultResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiResultResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiResultResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiResultResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiResultResponse::MergeFrom(const HuanlemaomibeiResultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.section() != 0) {
    _internal_set_section(from._internal_section());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
}

void HuanlemaomibeiResultResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiResultResponse::CopyFrom(const HuanlemaomibeiResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiResultResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiResultResponse::InternalSwap(HuanlemaomibeiResultResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiResultResponse, level_)
      + sizeof(HuanlemaomibeiResultResponse::level_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiResultResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiResultResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[167]);
}

// ===================================================================

class HuanlemaomibeiLevelCoinRequest::_Internal {
 public:
};

HuanlemaomibeiLevelCoinRequest::HuanlemaomibeiLevelCoinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiLevelCoinRequest)
}
HuanlemaomibeiLevelCoinRequest::HuanlemaomibeiLevelCoinRequest(const HuanlemaomibeiLevelCoinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&section_, &from.section_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&section_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiLevelCoinRequest)
}

void HuanlemaomibeiLevelCoinRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&section_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&section_)) + sizeof(level_));
}

HuanlemaomibeiLevelCoinRequest::~HuanlemaomibeiLevelCoinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiLevelCoinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiLevelCoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiLevelCoinRequest::ArenaDtor(void* object) {
  HuanlemaomibeiLevelCoinRequest* _this = reinterpret_cast< HuanlemaomibeiLevelCoinRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiLevelCoinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiLevelCoinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiLevelCoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiLevelCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&section_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&section_)) + sizeof(level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiLevelCoinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Section = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          section_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiLevelCoinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiLevelCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Section = 1;
  if (this->section() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_section(), target);
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiLevelCoinRequest)
  return target;
}

size_t HuanlemaomibeiLevelCoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiLevelCoinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Section = 1;
  if (this->section() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_section());
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiLevelCoinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiLevelCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiLevelCoinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiLevelCoinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiLevelCoinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiLevelCoinRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiLevelCoinRequest::MergeFrom(const HuanlemaomibeiLevelCoinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiLevelCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.section() != 0) {
    _internal_set_section(from._internal_section());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
}

void HuanlemaomibeiLevelCoinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiLevelCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiLevelCoinRequest::CopyFrom(const HuanlemaomibeiLevelCoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiLevelCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiLevelCoinRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiLevelCoinRequest::InternalSwap(HuanlemaomibeiLevelCoinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiLevelCoinRequest, level_)
      + sizeof(HuanlemaomibeiLevelCoinRequest::level_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiLevelCoinRequest, section_)>(
          reinterpret_cast<char*>(&section_),
          reinterpret_cast<char*>(&other->section_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiLevelCoinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[168]);
}

// ===================================================================

class HuanlemaomibeiLevelCoinResponse::_Internal {
 public:
};

HuanlemaomibeiLevelCoinResponse::HuanlemaomibeiLevelCoinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiLevelCoinResponse)
}
HuanlemaomibeiLevelCoinResponse::HuanlemaomibeiLevelCoinResponse(const HuanlemaomibeiLevelCoinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&code_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiLevelCoinResponse)
}

void HuanlemaomibeiLevelCoinResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&code_)) + sizeof(level_));
}

HuanlemaomibeiLevelCoinResponse::~HuanlemaomibeiLevelCoinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiLevelCoinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiLevelCoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiLevelCoinResponse::ArenaDtor(void* object) {
  HuanlemaomibeiLevelCoinResponse* _this = reinterpret_cast< HuanlemaomibeiLevelCoinResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiLevelCoinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiLevelCoinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiLevelCoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiLevelCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&code_)) + sizeof(level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiLevelCoinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Section = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          section_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiLevelCoinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiLevelCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 Section = 2;
  if (this->section() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_section(), target);
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_level(), target);
  }

  // int64 Coin = 4;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiLevelCoinResponse)
  return target;
}

size_t HuanlemaomibeiLevelCoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiLevelCoinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 Section = 2;
  if (this->section() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_section());
  }

  // int64 Coin = 4;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiLevelCoinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiLevelCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiLevelCoinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiLevelCoinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiLevelCoinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiLevelCoinResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiLevelCoinResponse::MergeFrom(const HuanlemaomibeiLevelCoinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiLevelCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.section() != 0) {
    _internal_set_section(from._internal_section());
  }
  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
}

void HuanlemaomibeiLevelCoinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiLevelCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiLevelCoinResponse::CopyFrom(const HuanlemaomibeiLevelCoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiLevelCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiLevelCoinResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiLevelCoinResponse::InternalSwap(HuanlemaomibeiLevelCoinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiLevelCoinResponse, level_)
      + sizeof(HuanlemaomibeiLevelCoinResponse::level_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiLevelCoinResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiLevelCoinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[169]);
}

// ===================================================================

class HuanlemaomibeiLevelUnlockRequest::_Internal {
 public:
};

HuanlemaomibeiLevelUnlockRequest::HuanlemaomibeiLevelUnlockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiLevelUnlockRequest)
}
HuanlemaomibeiLevelUnlockRequest::HuanlemaomibeiLevelUnlockRequest(const HuanlemaomibeiLevelUnlockRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&section_, &from.section_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&section_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiLevelUnlockRequest)
}

void HuanlemaomibeiLevelUnlockRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&section_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&section_)) + sizeof(level_));
}

HuanlemaomibeiLevelUnlockRequest::~HuanlemaomibeiLevelUnlockRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiLevelUnlockRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiLevelUnlockRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiLevelUnlockRequest::ArenaDtor(void* object) {
  HuanlemaomibeiLevelUnlockRequest* _this = reinterpret_cast< HuanlemaomibeiLevelUnlockRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiLevelUnlockRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiLevelUnlockRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiLevelUnlockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiLevelUnlockRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&section_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&section_)) + sizeof(level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiLevelUnlockRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Section = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          section_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiLevelUnlockRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiLevelUnlockRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Section = 1;
  if (this->section() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_section(), target);
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiLevelUnlockRequest)
  return target;
}

size_t HuanlemaomibeiLevelUnlockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiLevelUnlockRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Section = 1;
  if (this->section() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_section());
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiLevelUnlockRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiLevelUnlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiLevelUnlockRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiLevelUnlockRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiLevelUnlockRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiLevelUnlockRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiLevelUnlockRequest::MergeFrom(const HuanlemaomibeiLevelUnlockRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiLevelUnlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.section() != 0) {
    _internal_set_section(from._internal_section());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
}

void HuanlemaomibeiLevelUnlockRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiLevelUnlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiLevelUnlockRequest::CopyFrom(const HuanlemaomibeiLevelUnlockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiLevelUnlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiLevelUnlockRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiLevelUnlockRequest::InternalSwap(HuanlemaomibeiLevelUnlockRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiLevelUnlockRequest, level_)
      + sizeof(HuanlemaomibeiLevelUnlockRequest::level_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiLevelUnlockRequest, section_)>(
          reinterpret_cast<char*>(&section_),
          reinterpret_cast<char*>(&other->section_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiLevelUnlockRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[170]);
}

// ===================================================================

class HuanlemaomibeiLevelUnlockResponse::_Internal {
 public:
};

HuanlemaomibeiLevelUnlockResponse::HuanlemaomibeiLevelUnlockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiLevelUnlockResponse)
}
HuanlemaomibeiLevelUnlockResponse::HuanlemaomibeiLevelUnlockResponse(const HuanlemaomibeiLevelUnlockResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&code_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiLevelUnlockResponse)
}

void HuanlemaomibeiLevelUnlockResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&code_)) + sizeof(level_));
}

HuanlemaomibeiLevelUnlockResponse::~HuanlemaomibeiLevelUnlockResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiLevelUnlockResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiLevelUnlockResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiLevelUnlockResponse::ArenaDtor(void* object) {
  HuanlemaomibeiLevelUnlockResponse* _this = reinterpret_cast< HuanlemaomibeiLevelUnlockResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiLevelUnlockResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiLevelUnlockResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiLevelUnlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiLevelUnlockResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&code_)) + sizeof(level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiLevelUnlockResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Section = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          section_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Coin = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiLevelUnlockResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiLevelUnlockResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 Section = 2;
  if (this->section() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_section(), target);
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_level(), target);
  }

  // int64 Coin = 4;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiLevelUnlockResponse)
  return target;
}

size_t HuanlemaomibeiLevelUnlockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiLevelUnlockResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 Section = 2;
  if (this->section() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_section());
  }

  // int64 Coin = 4;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  // int32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiLevelUnlockResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiLevelUnlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiLevelUnlockResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiLevelUnlockResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiLevelUnlockResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiLevelUnlockResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiLevelUnlockResponse::MergeFrom(const HuanlemaomibeiLevelUnlockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiLevelUnlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.section() != 0) {
    _internal_set_section(from._internal_section());
  }
  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
}

void HuanlemaomibeiLevelUnlockResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiLevelUnlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiLevelUnlockResponse::CopyFrom(const HuanlemaomibeiLevelUnlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiLevelUnlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiLevelUnlockResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiLevelUnlockResponse::InternalSwap(HuanlemaomibeiLevelUnlockResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiLevelUnlockResponse, level_)
      + sizeof(HuanlemaomibeiLevelUnlockResponse::level_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiLevelUnlockResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiLevelUnlockResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[171]);
}

// ===================================================================

class HuanlemaomibeiAddHpRequest::_Internal {
 public:
};

HuanlemaomibeiAddHpRequest::HuanlemaomibeiAddHpRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiAddHpRequest)
}
HuanlemaomibeiAddHpRequest::HuanlemaomibeiAddHpRequest(const HuanlemaomibeiAddHpRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hp_ = from.hp_;
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiAddHpRequest)
}

void HuanlemaomibeiAddHpRequest::SharedCtor() {
hp_ = 0;
}

HuanlemaomibeiAddHpRequest::~HuanlemaomibeiAddHpRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiAddHpRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiAddHpRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiAddHpRequest::ArenaDtor(void* object) {
  HuanlemaomibeiAddHpRequest* _this = reinterpret_cast< HuanlemaomibeiAddHpRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiAddHpRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiAddHpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiAddHpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiAddHpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiAddHpRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Hp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiAddHpRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiAddHpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Hp = 1;
  if (this->hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_hp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiAddHpRequest)
  return target;
}

size_t HuanlemaomibeiAddHpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiAddHpRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Hp = 1;
  if (this->hp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiAddHpRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiAddHpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiAddHpRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiAddHpRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiAddHpRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiAddHpRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiAddHpRequest::MergeFrom(const HuanlemaomibeiAddHpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiAddHpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
}

void HuanlemaomibeiAddHpRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiAddHpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiAddHpRequest::CopyFrom(const HuanlemaomibeiAddHpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiAddHpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiAddHpRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiAddHpRequest::InternalSwap(HuanlemaomibeiAddHpRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hp_, other->hp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiAddHpRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[172]);
}

// ===================================================================

class HuanlemaomibeiAddHpResponse::_Internal {
 public:
};

HuanlemaomibeiAddHpResponse::HuanlemaomibeiAddHpResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiAddHpResponse)
}
HuanlemaomibeiAddHpResponse::HuanlemaomibeiAddHpResponse(const HuanlemaomibeiAddHpResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&hp_) -
    reinterpret_cast<char*>(&code_)) + sizeof(hp_));
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiAddHpResponse)
}

void HuanlemaomibeiAddHpResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&hp_) -
    reinterpret_cast<char*>(&code_)) + sizeof(hp_));
}

HuanlemaomibeiAddHpResponse::~HuanlemaomibeiAddHpResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiAddHpResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiAddHpResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiAddHpResponse::ArenaDtor(void* object) {
  HuanlemaomibeiAddHpResponse* _this = reinterpret_cast< HuanlemaomibeiAddHpResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiAddHpResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiAddHpResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiAddHpResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiAddHpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hp_) -
      reinterpret_cast<char*>(&code_)) + sizeof(hp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiAddHpResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Hp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiAddHpResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiAddHpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_hp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiAddHpResponse)
  return target;
}

size_t HuanlemaomibeiAddHpResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiAddHpResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiAddHpResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiAddHpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiAddHpResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiAddHpResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiAddHpResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiAddHpResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiAddHpResponse::MergeFrom(const HuanlemaomibeiAddHpResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiAddHpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
}

void HuanlemaomibeiAddHpResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiAddHpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiAddHpResponse::CopyFrom(const HuanlemaomibeiAddHpResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiAddHpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiAddHpResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiAddHpResponse::InternalSwap(HuanlemaomibeiAddHpResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HuanlemaomibeiAddHpResponse, hp_)
      + sizeof(HuanlemaomibeiAddHpResponse::hp_)
      - PROTOBUF_FIELD_OFFSET(HuanlemaomibeiAddHpResponse, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiAddHpResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[173]);
}

// ===================================================================

class HuanlemaomibeiLevelStartRequest::_Internal {
 public:
};

HuanlemaomibeiLevelStartRequest::HuanlemaomibeiLevelStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiLevelStartRequest)
}
HuanlemaomibeiLevelStartRequest::HuanlemaomibeiLevelStartRequest(const HuanlemaomibeiLevelStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiLevelStartRequest)
}

void HuanlemaomibeiLevelStartRequest::SharedCtor() {
}

HuanlemaomibeiLevelStartRequest::~HuanlemaomibeiLevelStartRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiLevelStartRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiLevelStartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiLevelStartRequest::ArenaDtor(void* object) {
  HuanlemaomibeiLevelStartRequest* _this = reinterpret_cast< HuanlemaomibeiLevelStartRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiLevelStartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiLevelStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiLevelStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiLevelStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiLevelStartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiLevelStartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiLevelStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiLevelStartRequest)
  return target;
}

size_t HuanlemaomibeiLevelStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiLevelStartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiLevelStartRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiLevelStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiLevelStartRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiLevelStartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiLevelStartRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiLevelStartRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiLevelStartRequest::MergeFrom(const HuanlemaomibeiLevelStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiLevelStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HuanlemaomibeiLevelStartRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiLevelStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiLevelStartRequest::CopyFrom(const HuanlemaomibeiLevelStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiLevelStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiLevelStartRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiLevelStartRequest::InternalSwap(HuanlemaomibeiLevelStartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiLevelStartRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[174]);
}

// ===================================================================

class HuanlemaomibeiLevelStartResponse::_Internal {
 public:
};

HuanlemaomibeiLevelStartResponse::HuanlemaomibeiLevelStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiLevelStartResponse)
}
HuanlemaomibeiLevelStartResponse::HuanlemaomibeiLevelStartResponse(const HuanlemaomibeiLevelStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiLevelStartResponse)
}

void HuanlemaomibeiLevelStartResponse::SharedCtor() {
code_ = 0;
}

HuanlemaomibeiLevelStartResponse::~HuanlemaomibeiLevelStartResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiLevelStartResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiLevelStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiLevelStartResponse::ArenaDtor(void* object) {
  HuanlemaomibeiLevelStartResponse* _this = reinterpret_cast< HuanlemaomibeiLevelStartResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiLevelStartResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiLevelStartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiLevelStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiLevelStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiLevelStartResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiLevelStartResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiLevelStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiLevelStartResponse)
  return target;
}

size_t HuanlemaomibeiLevelStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiLevelStartResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiLevelStartResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiLevelStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiLevelStartResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiLevelStartResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiLevelStartResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiLevelStartResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiLevelStartResponse::MergeFrom(const HuanlemaomibeiLevelStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiLevelStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void HuanlemaomibeiLevelStartResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiLevelStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiLevelStartResponse::CopyFrom(const HuanlemaomibeiLevelStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiLevelStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiLevelStartResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiLevelStartResponse::InternalSwap(HuanlemaomibeiLevelStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiLevelStartResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[175]);
}

// ===================================================================

class HuanlemaomibeiLevelResultRequest::_Internal {
 public:
};

HuanlemaomibeiLevelResultRequest::HuanlemaomibeiLevelResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiLevelResultRequest)
}
HuanlemaomibeiLevelResultRequest::HuanlemaomibeiLevelResultRequest(const HuanlemaomibeiLevelResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiLevelResultRequest)
}

void HuanlemaomibeiLevelResultRequest::SharedCtor() {
score_ = int64_t{0};
}

HuanlemaomibeiLevelResultRequest::~HuanlemaomibeiLevelResultRequest() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiLevelResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiLevelResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiLevelResultRequest::ArenaDtor(void* object) {
  HuanlemaomibeiLevelResultRequest* _this = reinterpret_cast< HuanlemaomibeiLevelResultRequest* >(object);
  (void)_this;
}
void HuanlemaomibeiLevelResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiLevelResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiLevelResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiLevelResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  score_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiLevelResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Score = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiLevelResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiLevelResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Score = 1;
  if (this->score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiLevelResultRequest)
  return target;
}

size_t HuanlemaomibeiLevelResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiLevelResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Score = 1;
  if (this->score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_score());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiLevelResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiLevelResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiLevelResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiLevelResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiLevelResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiLevelResultRequest)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiLevelResultRequest::MergeFrom(const HuanlemaomibeiLevelResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiLevelResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.score() != 0) {
    _internal_set_score(from._internal_score());
  }
}

void HuanlemaomibeiLevelResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiLevelResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiLevelResultRequest::CopyFrom(const HuanlemaomibeiLevelResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiLevelResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiLevelResultRequest::IsInitialized() const {
  return true;
}

void HuanlemaomibeiLevelResultRequest::InternalSwap(HuanlemaomibeiLevelResultRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(score_, other->score_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiLevelResultRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[176]);
}

// ===================================================================

class HuanlemaomibeiLevelResultResponse::_Internal {
 public:
};

HuanlemaomibeiLevelResultResponse::HuanlemaomibeiLevelResultResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.HuanlemaomibeiLevelResultResponse)
}
HuanlemaomibeiLevelResultResponse::HuanlemaomibeiLevelResultResponse(const HuanlemaomibeiLevelResultResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.HuanlemaomibeiLevelResultResponse)
}

void HuanlemaomibeiLevelResultResponse::SharedCtor() {
code_ = 0;
}

HuanlemaomibeiLevelResultResponse::~HuanlemaomibeiLevelResultResponse() {
  // @@protoc_insertion_point(destructor:gamepb.HuanlemaomibeiLevelResultResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HuanlemaomibeiLevelResultResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HuanlemaomibeiLevelResultResponse::ArenaDtor(void* object) {
  HuanlemaomibeiLevelResultResponse* _this = reinterpret_cast< HuanlemaomibeiLevelResultResponse* >(object);
  (void)_this;
}
void HuanlemaomibeiLevelResultResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HuanlemaomibeiLevelResultResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HuanlemaomibeiLevelResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.HuanlemaomibeiLevelResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HuanlemaomibeiLevelResultResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HuanlemaomibeiLevelResultResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.HuanlemaomibeiLevelResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.HuanlemaomibeiLevelResultResponse)
  return target;
}

size_t HuanlemaomibeiLevelResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.HuanlemaomibeiLevelResultResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HuanlemaomibeiLevelResultResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.HuanlemaomibeiLevelResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HuanlemaomibeiLevelResultResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HuanlemaomibeiLevelResultResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.HuanlemaomibeiLevelResultResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.HuanlemaomibeiLevelResultResponse)
    MergeFrom(*source);
  }
}

void HuanlemaomibeiLevelResultResponse::MergeFrom(const HuanlemaomibeiLevelResultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.HuanlemaomibeiLevelResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void HuanlemaomibeiLevelResultResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.HuanlemaomibeiLevelResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanlemaomibeiLevelResultResponse::CopyFrom(const HuanlemaomibeiLevelResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.HuanlemaomibeiLevelResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanlemaomibeiLevelResultResponse::IsInitialized() const {
  return true;
}

void HuanlemaomibeiLevelResultResponse::InternalSwap(HuanlemaomibeiLevelResultResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HuanlemaomibeiLevelResultResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[177]);
}

// ===================================================================

class YangzhunongchangItem::_Internal {
 public:
};

YangzhunongchangItem::YangzhunongchangItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangItem)
}
YangzhunongchangItem::YangzhunongchangItem(const YangzhunongchangItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangItem)
}

void YangzhunongchangItem::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(num_));
}

YangzhunongchangItem::~YangzhunongchangItem() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangItem::ArenaDtor(void* object) {
  YangzhunongchangItem* _this = reinterpret_cast< YangzhunongchangItem* >(object);
  (void)_this;
}
void YangzhunongchangItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangItem::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangItem)
  return target;
}

size_t YangzhunongchangItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangItem)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangItem)
    MergeFrom(*source);
  }
}

void YangzhunongchangItem::MergeFrom(const YangzhunongchangItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.num() != 0) {
    _internal_set_num(from._internal_num());
  }
}

void YangzhunongchangItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangItem::CopyFrom(const YangzhunongchangItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangItem::IsInitialized() const {
  return true;
}

void YangzhunongchangItem::InternalSwap(YangzhunongchangItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(YangzhunongchangItem, num_)
      + sizeof(YangzhunongchangItem::num_)
      - PROTOBUF_FIELD_OFFSET(YangzhunongchangItem, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangItem::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[178]);
}

// ===================================================================

class YangzhunongchangPig::_Internal {
 public:
};

YangzhunongchangPig::YangzhunongchangPig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangPig)
}
YangzhunongchangPig::YangzhunongchangPig(const YangzhunongchangPig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  createtime_ = from.createtime_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangPig)
}

void YangzhunongchangPig::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
createtime_ = int64_t{0};
}

YangzhunongchangPig::~YangzhunongchangPig() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangPig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangPig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void YangzhunongchangPig::ArenaDtor(void* object) {
  YangzhunongchangPig* _this = reinterpret_cast< YangzhunongchangPig* >(object);
  (void)_this;
}
void YangzhunongchangPig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangPig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangPig::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangPig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  data_.ClearToEmpty();
  createtime_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangPig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangPig.Id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangPig.Data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Createtime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          createtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangPig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangPig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangPig.Id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string Data = 2;
  if (!this->data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangPig.Data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data(), target);
  }

  // int64 Createtime = 3;
  if (this->createtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_createtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangPig)
  return target;
}

size_t YangzhunongchangPig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangPig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string Data = 2;
  if (!this->data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  // int64 Createtime = 3;
  if (this->createtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_createtime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangPig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangPig)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangPig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangPig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangPig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangPig)
    MergeFrom(*source);
  }
}

void YangzhunongchangPig::MergeFrom(const YangzhunongchangPig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangPig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from.data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from.createtime() != 0) {
    _internal_set_createtime(from._internal_createtime());
  }
}

void YangzhunongchangPig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangPig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangPig::CopyFrom(const YangzhunongchangPig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangPig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangPig::IsInitialized() const {
  return true;
}

void YangzhunongchangPig::InternalSwap(YangzhunongchangPig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, GetArenaForAllocation(),
      &other->data_, other->GetArenaForAllocation()
  );
  swap(createtime_, other->createtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangPig::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[179]);
}

// ===================================================================

class YangzhunongchangBreedPig::_Internal {
 public:
};

YangzhunongchangBreedPig::YangzhunongchangBreedPig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangBreedPig)
}
YangzhunongchangBreedPig::YangzhunongchangBreedPig(const YangzhunongchangBreedPig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangBreedPig)
}

void YangzhunongchangBreedPig::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

YangzhunongchangBreedPig::~YangzhunongchangBreedPig() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangBreedPig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangBreedPig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void YangzhunongchangBreedPig::ArenaDtor(void* object) {
  YangzhunongchangBreedPig* _this = reinterpret_cast< YangzhunongchangBreedPig* >(object);
  (void)_this;
}
void YangzhunongchangBreedPig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangBreedPig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangBreedPig::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangBreedPig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangBreedPig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangBreedPig.Id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangBreedPig.Data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangBreedPig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangBreedPig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangBreedPig.Id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string Data = 2;
  if (!this->data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangBreedPig.Data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangBreedPig)
  return target;
}

size_t YangzhunongchangBreedPig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangBreedPig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string Data = 2;
  if (!this->data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangBreedPig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangBreedPig)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangBreedPig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangBreedPig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangBreedPig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangBreedPig)
    MergeFrom(*source);
  }
}

void YangzhunongchangBreedPig::MergeFrom(const YangzhunongchangBreedPig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangBreedPig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from.data().empty()) {
    _internal_set_data(from._internal_data());
  }
}

void YangzhunongchangBreedPig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangBreedPig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangBreedPig::CopyFrom(const YangzhunongchangBreedPig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangBreedPig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangBreedPig::IsInitialized() const {
  return true;
}

void YangzhunongchangBreedPig::InternalSwap(YangzhunongchangBreedPig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, GetArenaForAllocation(),
      &other->data_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangBreedPig::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[180]);
}

// ===================================================================

class YangzhunongchangUsu::_Internal {
 public:
};

YangzhunongchangUsu::YangzhunongchangUsu(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangUsu)
}
YangzhunongchangUsu::YangzhunongchangUsu(const YangzhunongchangUsu& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangUsu)
}

void YangzhunongchangUsu::SharedCtor() {
id_ = 0;
}

YangzhunongchangUsu::~YangzhunongchangUsu() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangUsu)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangUsu::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangUsu::ArenaDtor(void* object) {
  YangzhunongchangUsu* _this = reinterpret_cast< YangzhunongchangUsu* >(object);
  (void)_this;
}
void YangzhunongchangUsu::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangUsu::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangUsu::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangUsu)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangUsu::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangUsu::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangUsu)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangUsu)
  return target;
}

size_t YangzhunongchangUsu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangUsu)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangUsu::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangUsu)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangUsu* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangUsu>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangUsu)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangUsu)
    MergeFrom(*source);
  }
}

void YangzhunongchangUsu::MergeFrom(const YangzhunongchangUsu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangUsu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void YangzhunongchangUsu::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangUsu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangUsu::CopyFrom(const YangzhunongchangUsu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangUsu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangUsu::IsInitialized() const {
  return true;
}

void YangzhunongchangUsu::InternalSwap(YangzhunongchangUsu* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangUsu::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[181]);
}

// ===================================================================

class YangzhunongchangFood::_Internal {
 public:
};

YangzhunongchangFood::YangzhunongchangFood(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangFood)
}
YangzhunongchangFood::YangzhunongchangFood(const YangzhunongchangFood& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangFood)
}

void YangzhunongchangFood::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

YangzhunongchangFood::~YangzhunongchangFood() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangFood)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangFood::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void YangzhunongchangFood::ArenaDtor(void* object) {
  YangzhunongchangFood* _this = reinterpret_cast< YangzhunongchangFood* >(object);
  (void)_this;
}
void YangzhunongchangFood::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangFood::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangFood::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangFood)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangFood::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangFood.Id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangFood.Data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangFood::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangFood)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangFood.Id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string Data = 2;
  if (!this->data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangFood.Data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangFood)
  return target;
}

size_t YangzhunongchangFood::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangFood)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string Data = 2;
  if (!this->data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangFood::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangFood)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangFood* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangFood>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangFood)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangFood)
    MergeFrom(*source);
  }
}

void YangzhunongchangFood::MergeFrom(const YangzhunongchangFood& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangFood)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from.data().empty()) {
    _internal_set_data(from._internal_data());
  }
}

void YangzhunongchangFood::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangFood)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangFood::CopyFrom(const YangzhunongchangFood& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangFood)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangFood::IsInitialized() const {
  return true;
}

void YangzhunongchangFood::InternalSwap(YangzhunongchangFood* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, GetArenaForAllocation(),
      &other->data_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangFood::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[182]);
}

// ===================================================================

class YangzhunongchangTask::_Internal {
 public:
};

YangzhunongchangTask::YangzhunongchangTask(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangTask)
}
YangzhunongchangTask::YangzhunongchangTask(const YangzhunongchangTask& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  count_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_count().empty()) {
    count_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_count(), 
      GetArenaForAllocation());
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangTask)
}

void YangzhunongchangTask::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
count_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
index_ = 0;
}

YangzhunongchangTask::~YangzhunongchangTask() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangTask)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangTask::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  count_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void YangzhunongchangTask::ArenaDtor(void* object) {
  YangzhunongchangTask* _this = reinterpret_cast< YangzhunongchangTask* >(object);
  (void)_this;
}
void YangzhunongchangTask::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangTask::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangTask::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangTask)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  count_.ClearToEmpty();
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangTask::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangTask.Id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_count();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangTask.Count"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangTask::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangTask)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangTask.Id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // int32 Index = 2;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_index(), target);
  }

  // string Count = 3;
  if (!this->count().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_count().data(), static_cast<int>(this->_internal_count().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangTask.Count");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangTask)
  return target;
}

size_t YangzhunongchangTask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangTask)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string Count = 3;
  if (!this->count().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_count());
  }

  // int32 Index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangTask::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangTask)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangTask* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangTask>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangTask)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangTask)
    MergeFrom(*source);
  }
}

void YangzhunongchangTask::MergeFrom(const YangzhunongchangTask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangTask)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from.count().empty()) {
    _internal_set_count(from._internal_count());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void YangzhunongchangTask::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangTask::CopyFrom(const YangzhunongchangTask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangTask::IsInitialized() const {
  return true;
}

void YangzhunongchangTask::InternalSwap(YangzhunongchangTask* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &count_, GetArenaForAllocation(),
      &other->count_, other->GetArenaForAllocation()
  );
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangTask::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[183]);
}

// ===================================================================

class YangzhunongchangGetDataRequest::_Internal {
 public:
};

YangzhunongchangGetDataRequest::YangzhunongchangGetDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangGetDataRequest)
}
YangzhunongchangGetDataRequest::YangzhunongchangGetDataRequest(const YangzhunongchangGetDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangGetDataRequest)
}

void YangzhunongchangGetDataRequest::SharedCtor() {
}

YangzhunongchangGetDataRequest::~YangzhunongchangGetDataRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangGetDataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangGetDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangGetDataRequest::ArenaDtor(void* object) {
  YangzhunongchangGetDataRequest* _this = reinterpret_cast< YangzhunongchangGetDataRequest* >(object);
  (void)_this;
}
void YangzhunongchangGetDataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangGetDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangGetDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangGetDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangGetDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangGetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangGetDataRequest)
  return target;
}

size_t YangzhunongchangGetDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangGetDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangGetDataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangGetDataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangGetDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangGetDataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangGetDataRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangGetDataRequest::MergeFrom(const YangzhunongchangGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void YangzhunongchangGetDataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangGetDataRequest::CopyFrom(const YangzhunongchangGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangGetDataRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangGetDataRequest::InternalSwap(YangzhunongchangGetDataRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangGetDataRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[184]);
}

// ===================================================================

class YangzhunongchangGetDataResponse::_Internal {
 public:
};

YangzhunongchangGetDataResponse::YangzhunongchangGetDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  itemarr_(arena),
  pigarr_(arena),
  breedpigarr_(arena),
  usuarr_(arena),
  foodarr_(arena),
  taskarr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangGetDataResponse)
}
YangzhunongchangGetDataResponse::YangzhunongchangGetDataResponse(const YangzhunongchangGetDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      itemarr_(from.itemarr_),
      pigarr_(from.pigarr_),
      breedpigarr_(from.breedpigarr_),
      usuarr_(from.usuarr_),
      foodarr_(from.foodarr_),
      taskarr_(from.taskarr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  farmlvname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_farmlvname().empty()) {
    farmlvname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_farmlvname(), 
      GetArenaForAllocation());
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gameid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangGetDataResponse)
}

void YangzhunongchangGetDataResponse::SharedCtor() {
farmlvname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&userid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&gameid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
}

YangzhunongchangGetDataResponse::~YangzhunongchangGetDataResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangGetDataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangGetDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  farmlvname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void YangzhunongchangGetDataResponse::ArenaDtor(void* object) {
  YangzhunongchangGetDataResponse* _this = reinterpret_cast< YangzhunongchangGetDataResponse* >(object);
  (void)_this;
}
void YangzhunongchangGetDataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangGetDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangGetDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  itemarr_.Clear();
  pigarr_.Clear();
  breedpigarr_.Clear();
  usuarr_.Clear();
  foodarr_.Clear();
  taskarr_.Clear();
  farmlvname_.ClearToEmpty();
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gameid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(gameid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangGetDataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 Userid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gamepb.YangzhunongchangItem ItemArr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_itemarr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 FarmLv = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          farmlv_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string FarmLvName = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_farmlvname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangGetDataResponse.FarmLvName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 FarmLvExp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          farmlvexp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 FarmLvExpCur = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          farmlvexpcur_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 AwardNum = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          awardnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gamepb.YangzhunongchangPig PigArr = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pigarr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .gamepb.YangzhunongchangBreedPig BreedPigArr = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_breedpigarr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .gamepb.YangzhunongchangUsu UsuArr = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_usuarr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .gamepb.YangzhunongchangFood FoodArr = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_foodarr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .gamepb.YangzhunongchangTask TaskArr = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_taskarr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 GameId = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          gameid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangGetDataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangGetDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_userid(), target);
  }

  // repeated .gamepb.YangzhunongchangItem ItemArr = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_itemarr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_itemarr(i), target, stream);
  }

  // int32 FarmLv = 4;
  if (this->farmlv() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_farmlv(), target);
  }

  // string FarmLvName = 5;
  if (!this->farmlvname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_farmlvname().data(), static_cast<int>(this->_internal_farmlvname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangGetDataResponse.FarmLvName");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_farmlvname(), target);
  }

  // int32 FarmLvExp = 6;
  if (this->farmlvexp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_farmlvexp(), target);
  }

  // int32 FarmLvExpCur = 7;
  if (this->farmlvexpcur() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_farmlvexpcur(), target);
  }

  // int32 AwardNum = 8;
  if (this->awardnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_awardnum(), target);
  }

  // repeated .gamepb.YangzhunongchangPig PigArr = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pigarr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, this->_internal_pigarr(i), target, stream);
  }

  // repeated .gamepb.YangzhunongchangBreedPig BreedPigArr = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_breedpigarr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_breedpigarr(i), target, stream);
  }

  // repeated .gamepb.YangzhunongchangUsu UsuArr = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_usuarr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, this->_internal_usuarr(i), target, stream);
  }

  // repeated .gamepb.YangzhunongchangFood FoodArr = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_foodarr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, this->_internal_foodarr(i), target, stream);
  }

  // repeated .gamepb.YangzhunongchangTask TaskArr = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_taskarr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, this->_internal_taskarr(i), target, stream);
  }

  // int32 GameId = 14;
  if (this->gameid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(14, this->_internal_gameid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangGetDataResponse)
  return target;
}

size_t YangzhunongchangGetDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangGetDataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gamepb.YangzhunongchangItem ItemArr = 3;
  total_size += 1UL * this->_internal_itemarr_size();
  for (const auto& msg : this->itemarr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .gamepb.YangzhunongchangPig PigArr = 9;
  total_size += 1UL * this->_internal_pigarr_size();
  for (const auto& msg : this->pigarr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .gamepb.YangzhunongchangBreedPig BreedPigArr = 10;
  total_size += 1UL * this->_internal_breedpigarr_size();
  for (const auto& msg : this->breedpigarr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .gamepb.YangzhunongchangUsu UsuArr = 11;
  total_size += 1UL * this->_internal_usuarr_size();
  for (const auto& msg : this->usuarr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .gamepb.YangzhunongchangFood FoodArr = 12;
  total_size += 1UL * this->_internal_foodarr_size();
  for (const auto& msg : this->foodarr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .gamepb.YangzhunongchangTask TaskArr = 13;
  total_size += 1UL * this->_internal_taskarr_size();
  for (const auto& msg : this->taskarr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string FarmLvName = 5;
  if (!this->farmlvname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_farmlvname());
  }

  // int64 Userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_userid());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 FarmLv = 4;
  if (this->farmlv() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_farmlv());
  }

  // int32 FarmLvExp = 6;
  if (this->farmlvexp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_farmlvexp());
  }

  // int32 FarmLvExpCur = 7;
  if (this->farmlvexpcur() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_farmlvexpcur());
  }

  // int32 AwardNum = 8;
  if (this->awardnum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_awardnum());
  }

  // int32 GameId = 14;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gameid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangGetDataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangGetDataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangGetDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangGetDataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangGetDataResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangGetDataResponse::MergeFrom(const YangzhunongchangGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  itemarr_.MergeFrom(from.itemarr_);
  pigarr_.MergeFrom(from.pigarr_);
  breedpigarr_.MergeFrom(from.breedpigarr_);
  usuarr_.MergeFrom(from.usuarr_);
  foodarr_.MergeFrom(from.foodarr_);
  taskarr_.MergeFrom(from.taskarr_);
  if (!from.farmlvname().empty()) {
    _internal_set_farmlvname(from._internal_farmlvname());
  }
  if (from.userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.farmlv() != 0) {
    _internal_set_farmlv(from._internal_farmlv());
  }
  if (from.farmlvexp() != 0) {
    _internal_set_farmlvexp(from._internal_farmlvexp());
  }
  if (from.farmlvexpcur() != 0) {
    _internal_set_farmlvexpcur(from._internal_farmlvexpcur());
  }
  if (from.awardnum() != 0) {
    _internal_set_awardnum(from._internal_awardnum());
  }
  if (from.gameid() != 0) {
    _internal_set_gameid(from._internal_gameid());
  }
}

void YangzhunongchangGetDataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangGetDataResponse::CopyFrom(const YangzhunongchangGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangGetDataResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangGetDataResponse::InternalSwap(YangzhunongchangGetDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  itemarr_.InternalSwap(&other->itemarr_);
  pigarr_.InternalSwap(&other->pigarr_);
  breedpigarr_.InternalSwap(&other->breedpigarr_);
  usuarr_.InternalSwap(&other->usuarr_);
  foodarr_.InternalSwap(&other->foodarr_);
  taskarr_.InternalSwap(&other->taskarr_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &farmlvname_, GetArenaForAllocation(),
      &other->farmlvname_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(YangzhunongchangGetDataResponse, gameid_)
      + sizeof(YangzhunongchangGetDataResponse::gameid_)
      - PROTOBUF_FIELD_OFFSET(YangzhunongchangGetDataResponse, userid_)>(
          reinterpret_cast<char*>(&userid_),
          reinterpret_cast<char*>(&other->userid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangGetDataResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[185]);
}

// ===================================================================

class YangzhunongchangAddExpRequest::_Internal {
 public:
};

YangzhunongchangAddExpRequest::YangzhunongchangAddExpRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddExpRequest)
}
YangzhunongchangAddExpRequest::YangzhunongchangAddExpRequest(const YangzhunongchangAddExpRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  exp_ = from.exp_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddExpRequest)
}

void YangzhunongchangAddExpRequest::SharedCtor() {
exp_ = 0;
}

YangzhunongchangAddExpRequest::~YangzhunongchangAddExpRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddExpRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddExpRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAddExpRequest::ArenaDtor(void* object) {
  YangzhunongchangAddExpRequest* _this = reinterpret_cast< YangzhunongchangAddExpRequest* >(object);
  (void)_this;
}
void YangzhunongchangAddExpRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddExpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddExpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddExpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddExpRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Exp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddExpRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddExpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Exp = 1;
  if (this->exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_exp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddExpRequest)
  return target;
}

size_t YangzhunongchangAddExpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddExpRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Exp = 1;
  if (this->exp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_exp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddExpRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddExpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddExpRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddExpRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddExpRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddExpRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddExpRequest::MergeFrom(const YangzhunongchangAddExpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddExpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.exp() != 0) {
    _internal_set_exp(from._internal_exp());
  }
}

void YangzhunongchangAddExpRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddExpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddExpRequest::CopyFrom(const YangzhunongchangAddExpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddExpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddExpRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangAddExpRequest::InternalSwap(YangzhunongchangAddExpRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(exp_, other->exp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddExpRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[186]);
}

// ===================================================================

class YangzhunongchangAddExpResponse::_Internal {
 public:
};

YangzhunongchangAddExpResponse::YangzhunongchangAddExpResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddExpResponse)
}
YangzhunongchangAddExpResponse::YangzhunongchangAddExpResponse(const YangzhunongchangAddExpResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddExpResponse)
}

void YangzhunongchangAddExpResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangAddExpResponse::~YangzhunongchangAddExpResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddExpResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddExpResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAddExpResponse::ArenaDtor(void* object) {
  YangzhunongchangAddExpResponse* _this = reinterpret_cast< YangzhunongchangAddExpResponse* >(object);
  (void)_this;
}
void YangzhunongchangAddExpResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddExpResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddExpResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddExpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddExpResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddExpResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddExpResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddExpResponse)
  return target;
}

size_t YangzhunongchangAddExpResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddExpResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddExpResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddExpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddExpResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddExpResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddExpResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddExpResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddExpResponse::MergeFrom(const YangzhunongchangAddExpResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddExpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangAddExpResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddExpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddExpResponse::CopyFrom(const YangzhunongchangAddExpResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddExpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddExpResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangAddExpResponse::InternalSwap(YangzhunongchangAddExpResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddExpResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[187]);
}

// ===================================================================

class YangzhunongchangAddLevelRequest::_Internal {
 public:
};

YangzhunongchangAddLevelRequest::YangzhunongchangAddLevelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddLevelRequest)
}
YangzhunongchangAddLevelRequest::YangzhunongchangAddLevelRequest(const YangzhunongchangAddLevelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  farmlvname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_farmlvname().empty()) {
    farmlvname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_farmlvname(), 
      GetArenaForAllocation());
  }
  ::memcpy(&farmlv_, &from.farmlv_,
    static_cast<size_t>(reinterpret_cast<char*>(&farmlvexpcur_) -
    reinterpret_cast<char*>(&farmlv_)) + sizeof(farmlvexpcur_));
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddLevelRequest)
}

void YangzhunongchangAddLevelRequest::SharedCtor() {
farmlvname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&farmlv_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&farmlvexpcur_) -
    reinterpret_cast<char*>(&farmlv_)) + sizeof(farmlvexpcur_));
}

YangzhunongchangAddLevelRequest::~YangzhunongchangAddLevelRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddLevelRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddLevelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  farmlvname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void YangzhunongchangAddLevelRequest::ArenaDtor(void* object) {
  YangzhunongchangAddLevelRequest* _this = reinterpret_cast< YangzhunongchangAddLevelRequest* >(object);
  (void)_this;
}
void YangzhunongchangAddLevelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddLevelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddLevelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddLevelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  farmlvname_.ClearToEmpty();
  ::memset(&farmlv_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&farmlvexpcur_) -
      reinterpret_cast<char*>(&farmlv_)) + sizeof(farmlvexpcur_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddLevelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 FarmLv = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          farmlv_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string FarmLvName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_farmlvname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangAddLevelRequest.FarmLvName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 FarmLvExpCur = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          farmlvexpcur_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddLevelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddLevelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 FarmLv = 1;
  if (this->farmlv() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_farmlv(), target);
  }

  // string FarmLvName = 2;
  if (!this->farmlvname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_farmlvname().data(), static_cast<int>(this->_internal_farmlvname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangAddLevelRequest.FarmLvName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_farmlvname(), target);
  }

  // int32 FarmLvExpCur = 3;
  if (this->farmlvexpcur() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_farmlvexpcur(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddLevelRequest)
  return target;
}

size_t YangzhunongchangAddLevelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddLevelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string FarmLvName = 2;
  if (!this->farmlvname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_farmlvname());
  }

  // int32 FarmLv = 1;
  if (this->farmlv() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_farmlv());
  }

  // int32 FarmLvExpCur = 3;
  if (this->farmlvexpcur() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_farmlvexpcur());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddLevelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddLevelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddLevelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddLevelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddLevelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddLevelRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddLevelRequest::MergeFrom(const YangzhunongchangAddLevelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddLevelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.farmlvname().empty()) {
    _internal_set_farmlvname(from._internal_farmlvname());
  }
  if (from.farmlv() != 0) {
    _internal_set_farmlv(from._internal_farmlv());
  }
  if (from.farmlvexpcur() != 0) {
    _internal_set_farmlvexpcur(from._internal_farmlvexpcur());
  }
}

void YangzhunongchangAddLevelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddLevelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddLevelRequest::CopyFrom(const YangzhunongchangAddLevelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddLevelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddLevelRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangAddLevelRequest::InternalSwap(YangzhunongchangAddLevelRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &farmlvname_, GetArenaForAllocation(),
      &other->farmlvname_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(YangzhunongchangAddLevelRequest, farmlvexpcur_)
      + sizeof(YangzhunongchangAddLevelRequest::farmlvexpcur_)
      - PROTOBUF_FIELD_OFFSET(YangzhunongchangAddLevelRequest, farmlv_)>(
          reinterpret_cast<char*>(&farmlv_),
          reinterpret_cast<char*>(&other->farmlv_));
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddLevelRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[188]);
}

// ===================================================================

class YangzhunongchangAddLevelResponse::_Internal {
 public:
};

YangzhunongchangAddLevelResponse::YangzhunongchangAddLevelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddLevelResponse)
}
YangzhunongchangAddLevelResponse::YangzhunongchangAddLevelResponse(const YangzhunongchangAddLevelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddLevelResponse)
}

void YangzhunongchangAddLevelResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangAddLevelResponse::~YangzhunongchangAddLevelResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddLevelResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddLevelResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAddLevelResponse::ArenaDtor(void* object) {
  YangzhunongchangAddLevelResponse* _this = reinterpret_cast< YangzhunongchangAddLevelResponse* >(object);
  (void)_this;
}
void YangzhunongchangAddLevelResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddLevelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddLevelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddLevelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddLevelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddLevelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddLevelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddLevelResponse)
  return target;
}

size_t YangzhunongchangAddLevelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddLevelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddLevelResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddLevelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddLevelResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddLevelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddLevelResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddLevelResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddLevelResponse::MergeFrom(const YangzhunongchangAddLevelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddLevelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangAddLevelResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddLevelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddLevelResponse::CopyFrom(const YangzhunongchangAddLevelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddLevelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddLevelResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangAddLevelResponse::InternalSwap(YangzhunongchangAddLevelResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddLevelResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[189]);
}

// ===================================================================

class YangzhunongchangAddCoinRequest::_Internal {
 public:
};

YangzhunongchangAddCoinRequest::YangzhunongchangAddCoinRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddCoinRequest)
}
YangzhunongchangAddCoinRequest::YangzhunongchangAddCoinRequest(const YangzhunongchangAddCoinRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  coin_ = from.coin_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddCoinRequest)
}

void YangzhunongchangAddCoinRequest::SharedCtor() {
coin_ = int64_t{0};
}

YangzhunongchangAddCoinRequest::~YangzhunongchangAddCoinRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddCoinRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddCoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAddCoinRequest::ArenaDtor(void* object) {
  YangzhunongchangAddCoinRequest* _this = reinterpret_cast< YangzhunongchangAddCoinRequest* >(object);
  (void)_this;
}
void YangzhunongchangAddCoinRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddCoinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddCoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coin_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddCoinRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Coin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddCoinRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddCoinRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Coin = 1;
  if (this->coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_coin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddCoinRequest)
  return target;
}

size_t YangzhunongchangAddCoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddCoinRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Coin = 1;
  if (this->coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_coin());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddCoinRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddCoinRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddCoinRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddCoinRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddCoinRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddCoinRequest::MergeFrom(const YangzhunongchangAddCoinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddCoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coin() != 0) {
    _internal_set_coin(from._internal_coin());
  }
}

void YangzhunongchangAddCoinRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddCoinRequest::CopyFrom(const YangzhunongchangAddCoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddCoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddCoinRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangAddCoinRequest::InternalSwap(YangzhunongchangAddCoinRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(coin_, other->coin_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddCoinRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[190]);
}

// ===================================================================

class YangzhunongchangAddCoinResponse::_Internal {
 public:
};

YangzhunongchangAddCoinResponse::YangzhunongchangAddCoinResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddCoinResponse)
}
YangzhunongchangAddCoinResponse::YangzhunongchangAddCoinResponse(const YangzhunongchangAddCoinResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddCoinResponse)
}

void YangzhunongchangAddCoinResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangAddCoinResponse::~YangzhunongchangAddCoinResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddCoinResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddCoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAddCoinResponse::ArenaDtor(void* object) {
  YangzhunongchangAddCoinResponse* _this = reinterpret_cast< YangzhunongchangAddCoinResponse* >(object);
  (void)_this;
}
void YangzhunongchangAddCoinResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddCoinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddCoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddCoinResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddCoinResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddCoinResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddCoinResponse)
  return target;
}

size_t YangzhunongchangAddCoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddCoinResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddCoinResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddCoinResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddCoinResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddCoinResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddCoinResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddCoinResponse::MergeFrom(const YangzhunongchangAddCoinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddCoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangAddCoinResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddCoinResponse::CopyFrom(const YangzhunongchangAddCoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddCoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddCoinResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangAddCoinResponse::InternalSwap(YangzhunongchangAddCoinResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddCoinResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[191]);
}

// ===================================================================

class YangzhunongchangAddDiamondRequest::_Internal {
 public:
};

YangzhunongchangAddDiamondRequest::YangzhunongchangAddDiamondRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddDiamondRequest)
}
YangzhunongchangAddDiamondRequest::YangzhunongchangAddDiamondRequest(const YangzhunongchangAddDiamondRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  diamond_ = from.diamond_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddDiamondRequest)
}

void YangzhunongchangAddDiamondRequest::SharedCtor() {
diamond_ = int64_t{0};
}

YangzhunongchangAddDiamondRequest::~YangzhunongchangAddDiamondRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddDiamondRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddDiamondRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAddDiamondRequest::ArenaDtor(void* object) {
  YangzhunongchangAddDiamondRequest* _this = reinterpret_cast< YangzhunongchangAddDiamondRequest* >(object);
  (void)_this;
}
void YangzhunongchangAddDiamondRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddDiamondRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddDiamondRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddDiamondRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  diamond_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddDiamondRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Diamond = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          diamond_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddDiamondRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddDiamondRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Diamond = 1;
  if (this->diamond() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_diamond(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddDiamondRequest)
  return target;
}

size_t YangzhunongchangAddDiamondRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddDiamondRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Diamond = 1;
  if (this->diamond() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_diamond());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddDiamondRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddDiamondRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddDiamondRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddDiamondRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddDiamondRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddDiamondRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddDiamondRequest::MergeFrom(const YangzhunongchangAddDiamondRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddDiamondRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.diamond() != 0) {
    _internal_set_diamond(from._internal_diamond());
  }
}

void YangzhunongchangAddDiamondRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddDiamondRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddDiamondRequest::CopyFrom(const YangzhunongchangAddDiamondRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddDiamondRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddDiamondRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangAddDiamondRequest::InternalSwap(YangzhunongchangAddDiamondRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(diamond_, other->diamond_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddDiamondRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[192]);
}

// ===================================================================

class YangzhunongchangAddDiamondResponse::_Internal {
 public:
};

YangzhunongchangAddDiamondResponse::YangzhunongchangAddDiamondResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddDiamondResponse)
}
YangzhunongchangAddDiamondResponse::YangzhunongchangAddDiamondResponse(const YangzhunongchangAddDiamondResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddDiamondResponse)
}

void YangzhunongchangAddDiamondResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangAddDiamondResponse::~YangzhunongchangAddDiamondResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddDiamondResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddDiamondResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAddDiamondResponse::ArenaDtor(void* object) {
  YangzhunongchangAddDiamondResponse* _this = reinterpret_cast< YangzhunongchangAddDiamondResponse* >(object);
  (void)_this;
}
void YangzhunongchangAddDiamondResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddDiamondResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddDiamondResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddDiamondResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddDiamondResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddDiamondResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddDiamondResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddDiamondResponse)
  return target;
}

size_t YangzhunongchangAddDiamondResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddDiamondResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddDiamondResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddDiamondResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddDiamondResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddDiamondResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddDiamondResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddDiamondResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddDiamondResponse::MergeFrom(const YangzhunongchangAddDiamondResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddDiamondResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangAddDiamondResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddDiamondResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddDiamondResponse::CopyFrom(const YangzhunongchangAddDiamondResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddDiamondResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddDiamondResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangAddDiamondResponse::InternalSwap(YangzhunongchangAddDiamondResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddDiamondResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[193]);
}

// ===================================================================

class YangzhunongchangAddItemRequest::_Internal {
 public:
};

YangzhunongchangAddItemRequest::YangzhunongchangAddItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddItemRequest)
}
YangzhunongchangAddItemRequest::YangzhunongchangAddItemRequest(const YangzhunongchangAddItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddItemRequest)
}

void YangzhunongchangAddItemRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(num_));
}

YangzhunongchangAddItemRequest::~YangzhunongchangAddItemRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddItemRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAddItemRequest::ArenaDtor(void* object) {
  YangzhunongchangAddItemRequest* _this = reinterpret_cast< YangzhunongchangAddItemRequest* >(object);
  (void)_this;
}
void YangzhunongchangAddItemRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddItemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddItemRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddItemRequest)
  return target;
}

size_t YangzhunongchangAddItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddItemRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddItemRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddItemRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddItemRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddItemRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddItemRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddItemRequest::MergeFrom(const YangzhunongchangAddItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.num() != 0) {
    _internal_set_num(from._internal_num());
  }
}

void YangzhunongchangAddItemRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddItemRequest::CopyFrom(const YangzhunongchangAddItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddItemRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangAddItemRequest::InternalSwap(YangzhunongchangAddItemRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(YangzhunongchangAddItemRequest, num_)
      + sizeof(YangzhunongchangAddItemRequest::num_)
      - PROTOBUF_FIELD_OFFSET(YangzhunongchangAddItemRequest, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddItemRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[194]);
}

// ===================================================================

class YangzhunongchangAddItemResponse::_Internal {
 public:
};

YangzhunongchangAddItemResponse::YangzhunongchangAddItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddItemResponse)
}
YangzhunongchangAddItemResponse::YangzhunongchangAddItemResponse(const YangzhunongchangAddItemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddItemResponse)
}

void YangzhunongchangAddItemResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangAddItemResponse::~YangzhunongchangAddItemResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddItemResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddItemResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAddItemResponse::ArenaDtor(void* object) {
  YangzhunongchangAddItemResponse* _this = reinterpret_cast< YangzhunongchangAddItemResponse* >(object);
  (void)_this;
}
void YangzhunongchangAddItemResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddItemResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddItemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddItemResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddItemResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddItemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddItemResponse)
  return target;
}

size_t YangzhunongchangAddItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddItemResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddItemResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddItemResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddItemResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddItemResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddItemResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddItemResponse::MergeFrom(const YangzhunongchangAddItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangAddItemResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddItemResponse::CopyFrom(const YangzhunongchangAddItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddItemResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangAddItemResponse::InternalSwap(YangzhunongchangAddItemResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddItemResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[195]);
}

// ===================================================================

class YangzhunongchangAddPigRequest::_Internal {
 public:
};

YangzhunongchangAddPigRequest::YangzhunongchangAddPigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddPigRequest)
}
YangzhunongchangAddPigRequest::YangzhunongchangAddPigRequest(const YangzhunongchangAddPigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddPigRequest)
}

void YangzhunongchangAddPigRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

YangzhunongchangAddPigRequest::~YangzhunongchangAddPigRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddPigRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddPigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void YangzhunongchangAddPigRequest::ArenaDtor(void* object) {
  YangzhunongchangAddPigRequest* _this = reinterpret_cast< YangzhunongchangAddPigRequest* >(object);
  (void)_this;
}
void YangzhunongchangAddPigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddPigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddPigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddPigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddPigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangAddPigRequest.Id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangAddPigRequest.Data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddPigRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddPigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangAddPigRequest.Id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string Data = 2;
  if (!this->data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangAddPigRequest.Data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddPigRequest)
  return target;
}

size_t YangzhunongchangAddPigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddPigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string Data = 2;
  if (!this->data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddPigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddPigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddPigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddPigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddPigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddPigRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddPigRequest::MergeFrom(const YangzhunongchangAddPigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddPigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from.data().empty()) {
    _internal_set_data(from._internal_data());
  }
}

void YangzhunongchangAddPigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddPigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddPigRequest::CopyFrom(const YangzhunongchangAddPigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddPigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddPigRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangAddPigRequest::InternalSwap(YangzhunongchangAddPigRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, GetArenaForAllocation(),
      &other->data_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddPigRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[196]);
}

// ===================================================================

class YangzhunongchangAddPigResponse::_Internal {
 public:
};

YangzhunongchangAddPigResponse::YangzhunongchangAddPigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddPigResponse)
}
YangzhunongchangAddPigResponse::YangzhunongchangAddPigResponse(const YangzhunongchangAddPigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddPigResponse)
}

void YangzhunongchangAddPigResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangAddPigResponse::~YangzhunongchangAddPigResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddPigResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddPigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAddPigResponse::ArenaDtor(void* object) {
  YangzhunongchangAddPigResponse* _this = reinterpret_cast< YangzhunongchangAddPigResponse* >(object);
  (void)_this;
}
void YangzhunongchangAddPigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddPigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddPigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddPigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddPigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddPigResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddPigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddPigResponse)
  return target;
}

size_t YangzhunongchangAddPigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddPigResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddPigResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddPigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddPigResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddPigResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddPigResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddPigResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddPigResponse::MergeFrom(const YangzhunongchangAddPigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddPigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangAddPigResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddPigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddPigResponse::CopyFrom(const YangzhunongchangAddPigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddPigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddPigResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangAddPigResponse::InternalSwap(YangzhunongchangAddPigResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddPigResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[197]);
}

// ===================================================================

class YangzhunongchangDelPigRequest::_Internal {
 public:
};

YangzhunongchangDelPigRequest::YangzhunongchangDelPigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangDelPigRequest)
}
YangzhunongchangDelPigRequest::YangzhunongchangDelPigRequest(const YangzhunongchangDelPigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangDelPigRequest)
}

void YangzhunongchangDelPigRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

YangzhunongchangDelPigRequest::~YangzhunongchangDelPigRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangDelPigRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangDelPigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void YangzhunongchangDelPigRequest::ArenaDtor(void* object) {
  YangzhunongchangDelPigRequest* _this = reinterpret_cast< YangzhunongchangDelPigRequest* >(object);
  (void)_this;
}
void YangzhunongchangDelPigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangDelPigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangDelPigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangDelPigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangDelPigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangDelPigRequest.Id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangDelPigRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangDelPigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangDelPigRequest.Id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangDelPigRequest)
  return target;
}

size_t YangzhunongchangDelPigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangDelPigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangDelPigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangDelPigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangDelPigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangDelPigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangDelPigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangDelPigRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangDelPigRequest::MergeFrom(const YangzhunongchangDelPigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangDelPigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
}

void YangzhunongchangDelPigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangDelPigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangDelPigRequest::CopyFrom(const YangzhunongchangDelPigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangDelPigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangDelPigRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangDelPigRequest::InternalSwap(YangzhunongchangDelPigRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangDelPigRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[198]);
}

// ===================================================================

class YangzhunongchangDelPigResponse::_Internal {
 public:
};

YangzhunongchangDelPigResponse::YangzhunongchangDelPigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangDelPigResponse)
}
YangzhunongchangDelPigResponse::YangzhunongchangDelPigResponse(const YangzhunongchangDelPigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangDelPigResponse)
}

void YangzhunongchangDelPigResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangDelPigResponse::~YangzhunongchangDelPigResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangDelPigResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangDelPigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangDelPigResponse::ArenaDtor(void* object) {
  YangzhunongchangDelPigResponse* _this = reinterpret_cast< YangzhunongchangDelPigResponse* >(object);
  (void)_this;
}
void YangzhunongchangDelPigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangDelPigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangDelPigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangDelPigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangDelPigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangDelPigResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangDelPigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangDelPigResponse)
  return target;
}

size_t YangzhunongchangDelPigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangDelPigResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangDelPigResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangDelPigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangDelPigResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangDelPigResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangDelPigResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangDelPigResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangDelPigResponse::MergeFrom(const YangzhunongchangDelPigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangDelPigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangDelPigResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangDelPigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangDelPigResponse::CopyFrom(const YangzhunongchangDelPigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangDelPigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangDelPigResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangDelPigResponse::InternalSwap(YangzhunongchangDelPigResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangDelPigResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[199]);
}

// ===================================================================

class YangzhunongchangAddBreedPigRequest::_Internal {
 public:
};

YangzhunongchangAddBreedPigRequest::YangzhunongchangAddBreedPigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddBreedPigRequest)
}
YangzhunongchangAddBreedPigRequest::YangzhunongchangAddBreedPigRequest(const YangzhunongchangAddBreedPigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddBreedPigRequest)
}

void YangzhunongchangAddBreedPigRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

YangzhunongchangAddBreedPigRequest::~YangzhunongchangAddBreedPigRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddBreedPigRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddBreedPigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void YangzhunongchangAddBreedPigRequest::ArenaDtor(void* object) {
  YangzhunongchangAddBreedPigRequest* _this = reinterpret_cast< YangzhunongchangAddBreedPigRequest* >(object);
  (void)_this;
}
void YangzhunongchangAddBreedPigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddBreedPigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddBreedPigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddBreedPigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddBreedPigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangAddBreedPigRequest.Id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangAddBreedPigRequest.Data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddBreedPigRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddBreedPigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangAddBreedPigRequest.Id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string Data = 2;
  if (!this->data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangAddBreedPigRequest.Data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddBreedPigRequest)
  return target;
}

size_t YangzhunongchangAddBreedPigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddBreedPigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string Data = 2;
  if (!this->data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddBreedPigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddBreedPigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddBreedPigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddBreedPigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddBreedPigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddBreedPigRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddBreedPigRequest::MergeFrom(const YangzhunongchangAddBreedPigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddBreedPigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from.data().empty()) {
    _internal_set_data(from._internal_data());
  }
}

void YangzhunongchangAddBreedPigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddBreedPigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddBreedPigRequest::CopyFrom(const YangzhunongchangAddBreedPigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddBreedPigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddBreedPigRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangAddBreedPigRequest::InternalSwap(YangzhunongchangAddBreedPigRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, GetArenaForAllocation(),
      &other->data_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddBreedPigRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[200]);
}

// ===================================================================

class YangzhunongchangAddBreedPigResponse::_Internal {
 public:
};

YangzhunongchangAddBreedPigResponse::YangzhunongchangAddBreedPigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddBreedPigResponse)
}
YangzhunongchangAddBreedPigResponse::YangzhunongchangAddBreedPigResponse(const YangzhunongchangAddBreedPigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddBreedPigResponse)
}

void YangzhunongchangAddBreedPigResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangAddBreedPigResponse::~YangzhunongchangAddBreedPigResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddBreedPigResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddBreedPigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAddBreedPigResponse::ArenaDtor(void* object) {
  YangzhunongchangAddBreedPigResponse* _this = reinterpret_cast< YangzhunongchangAddBreedPigResponse* >(object);
  (void)_this;
}
void YangzhunongchangAddBreedPigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddBreedPigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddBreedPigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddBreedPigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddBreedPigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddBreedPigResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddBreedPigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddBreedPigResponse)
  return target;
}

size_t YangzhunongchangAddBreedPigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddBreedPigResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddBreedPigResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddBreedPigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddBreedPigResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddBreedPigResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddBreedPigResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddBreedPigResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddBreedPigResponse::MergeFrom(const YangzhunongchangAddBreedPigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddBreedPigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangAddBreedPigResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddBreedPigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddBreedPigResponse::CopyFrom(const YangzhunongchangAddBreedPigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddBreedPigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddBreedPigResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangAddBreedPigResponse::InternalSwap(YangzhunongchangAddBreedPigResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddBreedPigResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[201]);
}

// ===================================================================

class YangzhunongchangDelBreedPigRequest::_Internal {
 public:
};

YangzhunongchangDelBreedPigRequest::YangzhunongchangDelBreedPigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangDelBreedPigRequest)
}
YangzhunongchangDelBreedPigRequest::YangzhunongchangDelBreedPigRequest(const YangzhunongchangDelBreedPigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangDelBreedPigRequest)
}

void YangzhunongchangDelBreedPigRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

YangzhunongchangDelBreedPigRequest::~YangzhunongchangDelBreedPigRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangDelBreedPigRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangDelBreedPigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void YangzhunongchangDelBreedPigRequest::ArenaDtor(void* object) {
  YangzhunongchangDelBreedPigRequest* _this = reinterpret_cast< YangzhunongchangDelBreedPigRequest* >(object);
  (void)_this;
}
void YangzhunongchangDelBreedPigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangDelBreedPigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangDelBreedPigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangDelBreedPigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangDelBreedPigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangDelBreedPigRequest.Id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangDelBreedPigRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangDelBreedPigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangDelBreedPigRequest.Id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangDelBreedPigRequest)
  return target;
}

size_t YangzhunongchangDelBreedPigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangDelBreedPigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangDelBreedPigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangDelBreedPigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangDelBreedPigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangDelBreedPigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangDelBreedPigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangDelBreedPigRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangDelBreedPigRequest::MergeFrom(const YangzhunongchangDelBreedPigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangDelBreedPigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
}

void YangzhunongchangDelBreedPigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangDelBreedPigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangDelBreedPigRequest::CopyFrom(const YangzhunongchangDelBreedPigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangDelBreedPigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangDelBreedPigRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangDelBreedPigRequest::InternalSwap(YangzhunongchangDelBreedPigRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangDelBreedPigRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[202]);
}

// ===================================================================

class YangzhunongchangDelBreedPigResponse::_Internal {
 public:
};

YangzhunongchangDelBreedPigResponse::YangzhunongchangDelBreedPigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangDelBreedPigResponse)
}
YangzhunongchangDelBreedPigResponse::YangzhunongchangDelBreedPigResponse(const YangzhunongchangDelBreedPigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangDelBreedPigResponse)
}

void YangzhunongchangDelBreedPigResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangDelBreedPigResponse::~YangzhunongchangDelBreedPigResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangDelBreedPigResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangDelBreedPigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangDelBreedPigResponse::ArenaDtor(void* object) {
  YangzhunongchangDelBreedPigResponse* _this = reinterpret_cast< YangzhunongchangDelBreedPigResponse* >(object);
  (void)_this;
}
void YangzhunongchangDelBreedPigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangDelBreedPigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangDelBreedPigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangDelBreedPigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangDelBreedPigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangDelBreedPigResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangDelBreedPigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangDelBreedPigResponse)
  return target;
}

size_t YangzhunongchangDelBreedPigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangDelBreedPigResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangDelBreedPigResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangDelBreedPigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangDelBreedPigResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangDelBreedPigResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangDelBreedPigResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangDelBreedPigResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangDelBreedPigResponse::MergeFrom(const YangzhunongchangDelBreedPigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangDelBreedPigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangDelBreedPigResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangDelBreedPigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangDelBreedPigResponse::CopyFrom(const YangzhunongchangDelBreedPigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangDelBreedPigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangDelBreedPigResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangDelBreedPigResponse::InternalSwap(YangzhunongchangDelBreedPigResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangDelBreedPigResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[203]);
}

// ===================================================================

class YangzhunongchangAddUsuRequest::_Internal {
 public:
};

YangzhunongchangAddUsuRequest::YangzhunongchangAddUsuRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddUsuRequest)
}
YangzhunongchangAddUsuRequest::YangzhunongchangAddUsuRequest(const YangzhunongchangAddUsuRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddUsuRequest)
}

void YangzhunongchangAddUsuRequest::SharedCtor() {
id_ = 0;
}

YangzhunongchangAddUsuRequest::~YangzhunongchangAddUsuRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddUsuRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddUsuRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAddUsuRequest::ArenaDtor(void* object) {
  YangzhunongchangAddUsuRequest* _this = reinterpret_cast< YangzhunongchangAddUsuRequest* >(object);
  (void)_this;
}
void YangzhunongchangAddUsuRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddUsuRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddUsuRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddUsuRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddUsuRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddUsuRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddUsuRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddUsuRequest)
  return target;
}

size_t YangzhunongchangAddUsuRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddUsuRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddUsuRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddUsuRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddUsuRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddUsuRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddUsuRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddUsuRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddUsuRequest::MergeFrom(const YangzhunongchangAddUsuRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddUsuRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void YangzhunongchangAddUsuRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddUsuRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddUsuRequest::CopyFrom(const YangzhunongchangAddUsuRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddUsuRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddUsuRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangAddUsuRequest::InternalSwap(YangzhunongchangAddUsuRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddUsuRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[204]);
}

// ===================================================================

class YangzhunongchangAddUsuResponse::_Internal {
 public:
};

YangzhunongchangAddUsuResponse::YangzhunongchangAddUsuResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddUsuResponse)
}
YangzhunongchangAddUsuResponse::YangzhunongchangAddUsuResponse(const YangzhunongchangAddUsuResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddUsuResponse)
}

void YangzhunongchangAddUsuResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangAddUsuResponse::~YangzhunongchangAddUsuResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddUsuResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddUsuResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAddUsuResponse::ArenaDtor(void* object) {
  YangzhunongchangAddUsuResponse* _this = reinterpret_cast< YangzhunongchangAddUsuResponse* >(object);
  (void)_this;
}
void YangzhunongchangAddUsuResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddUsuResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddUsuResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddUsuResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddUsuResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddUsuResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddUsuResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddUsuResponse)
  return target;
}

size_t YangzhunongchangAddUsuResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddUsuResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddUsuResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddUsuResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddUsuResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddUsuResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddUsuResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddUsuResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddUsuResponse::MergeFrom(const YangzhunongchangAddUsuResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddUsuResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangAddUsuResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddUsuResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddUsuResponse::CopyFrom(const YangzhunongchangAddUsuResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddUsuResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddUsuResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangAddUsuResponse::InternalSwap(YangzhunongchangAddUsuResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddUsuResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[205]);
}

// ===================================================================

class YangzhunongchangAddFoodRequest::_Internal {
 public:
};

YangzhunongchangAddFoodRequest::YangzhunongchangAddFoodRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddFoodRequest)
}
YangzhunongchangAddFoodRequest::YangzhunongchangAddFoodRequest(const YangzhunongchangAddFoodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddFoodRequest)
}

void YangzhunongchangAddFoodRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

YangzhunongchangAddFoodRequest::~YangzhunongchangAddFoodRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddFoodRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddFoodRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void YangzhunongchangAddFoodRequest::ArenaDtor(void* object) {
  YangzhunongchangAddFoodRequest* _this = reinterpret_cast< YangzhunongchangAddFoodRequest* >(object);
  (void)_this;
}
void YangzhunongchangAddFoodRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddFoodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddFoodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddFoodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddFoodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangAddFoodRequest.Id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangAddFoodRequest.Data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddFoodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddFoodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangAddFoodRequest.Id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string Data = 2;
  if (!this->data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangAddFoodRequest.Data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddFoodRequest)
  return target;
}

size_t YangzhunongchangAddFoodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddFoodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string Data = 2;
  if (!this->data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddFoodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddFoodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddFoodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddFoodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddFoodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddFoodRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddFoodRequest::MergeFrom(const YangzhunongchangAddFoodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddFoodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from.data().empty()) {
    _internal_set_data(from._internal_data());
  }
}

void YangzhunongchangAddFoodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddFoodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddFoodRequest::CopyFrom(const YangzhunongchangAddFoodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddFoodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddFoodRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangAddFoodRequest::InternalSwap(YangzhunongchangAddFoodRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, GetArenaForAllocation(),
      &other->data_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddFoodRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[206]);
}

// ===================================================================

class YangzhunongchangAddFoodResponse::_Internal {
 public:
};

YangzhunongchangAddFoodResponse::YangzhunongchangAddFoodResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddFoodResponse)
}
YangzhunongchangAddFoodResponse::YangzhunongchangAddFoodResponse(const YangzhunongchangAddFoodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddFoodResponse)
}

void YangzhunongchangAddFoodResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangAddFoodResponse::~YangzhunongchangAddFoodResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddFoodResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddFoodResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAddFoodResponse::ArenaDtor(void* object) {
  YangzhunongchangAddFoodResponse* _this = reinterpret_cast< YangzhunongchangAddFoodResponse* >(object);
  (void)_this;
}
void YangzhunongchangAddFoodResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddFoodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddFoodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddFoodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddFoodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddFoodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddFoodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddFoodResponse)
  return target;
}

size_t YangzhunongchangAddFoodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddFoodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddFoodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddFoodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddFoodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddFoodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddFoodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddFoodResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddFoodResponse::MergeFrom(const YangzhunongchangAddFoodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddFoodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangAddFoodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddFoodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddFoodResponse::CopyFrom(const YangzhunongchangAddFoodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddFoodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddFoodResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangAddFoodResponse::InternalSwap(YangzhunongchangAddFoodResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddFoodResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[207]);
}

// ===================================================================

class YangzhunongchangDelFoodRequest::_Internal {
 public:
};

YangzhunongchangDelFoodRequest::YangzhunongchangDelFoodRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangDelFoodRequest)
}
YangzhunongchangDelFoodRequest::YangzhunongchangDelFoodRequest(const YangzhunongchangDelFoodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangDelFoodRequest)
}

void YangzhunongchangDelFoodRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

YangzhunongchangDelFoodRequest::~YangzhunongchangDelFoodRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangDelFoodRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangDelFoodRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void YangzhunongchangDelFoodRequest::ArenaDtor(void* object) {
  YangzhunongchangDelFoodRequest* _this = reinterpret_cast< YangzhunongchangDelFoodRequest* >(object);
  (void)_this;
}
void YangzhunongchangDelFoodRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangDelFoodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangDelFoodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangDelFoodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangDelFoodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangDelFoodRequest.Id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangDelFoodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangDelFoodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangDelFoodRequest.Id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangDelFoodRequest)
  return target;
}

size_t YangzhunongchangDelFoodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangDelFoodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangDelFoodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangDelFoodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangDelFoodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangDelFoodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangDelFoodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangDelFoodRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangDelFoodRequest::MergeFrom(const YangzhunongchangDelFoodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangDelFoodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
}

void YangzhunongchangDelFoodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangDelFoodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangDelFoodRequest::CopyFrom(const YangzhunongchangDelFoodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangDelFoodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangDelFoodRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangDelFoodRequest::InternalSwap(YangzhunongchangDelFoodRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangDelFoodRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[208]);
}

// ===================================================================

class YangzhunongchangDelFoodResponse::_Internal {
 public:
};

YangzhunongchangDelFoodResponse::YangzhunongchangDelFoodResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangDelFoodResponse)
}
YangzhunongchangDelFoodResponse::YangzhunongchangDelFoodResponse(const YangzhunongchangDelFoodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangDelFoodResponse)
}

void YangzhunongchangDelFoodResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangDelFoodResponse::~YangzhunongchangDelFoodResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangDelFoodResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangDelFoodResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangDelFoodResponse::ArenaDtor(void* object) {
  YangzhunongchangDelFoodResponse* _this = reinterpret_cast< YangzhunongchangDelFoodResponse* >(object);
  (void)_this;
}
void YangzhunongchangDelFoodResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangDelFoodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangDelFoodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangDelFoodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangDelFoodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangDelFoodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangDelFoodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangDelFoodResponse)
  return target;
}

size_t YangzhunongchangDelFoodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangDelFoodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangDelFoodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangDelFoodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangDelFoodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangDelFoodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangDelFoodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangDelFoodResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangDelFoodResponse::MergeFrom(const YangzhunongchangDelFoodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangDelFoodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangDelFoodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangDelFoodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangDelFoodResponse::CopyFrom(const YangzhunongchangDelFoodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangDelFoodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangDelFoodResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangDelFoodResponse::InternalSwap(YangzhunongchangDelFoodResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangDelFoodResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[209]);
}

// ===================================================================

class YangzhunongchangAddTaskRequest::_Internal {
 public:
};

YangzhunongchangAddTaskRequest::YangzhunongchangAddTaskRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddTaskRequest)
}
YangzhunongchangAddTaskRequest::YangzhunongchangAddTaskRequest(const YangzhunongchangAddTaskRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  count_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_count().empty()) {
    count_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_count(), 
      GetArenaForAllocation());
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddTaskRequest)
}

void YangzhunongchangAddTaskRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
count_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
index_ = 0;
}

YangzhunongchangAddTaskRequest::~YangzhunongchangAddTaskRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddTaskRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddTaskRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  count_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void YangzhunongchangAddTaskRequest::ArenaDtor(void* object) {
  YangzhunongchangAddTaskRequest* _this = reinterpret_cast< YangzhunongchangAddTaskRequest* >(object);
  (void)_this;
}
void YangzhunongchangAddTaskRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddTaskRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddTaskRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  count_.ClearToEmpty();
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddTaskRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangAddTaskRequest.Id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_count();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gamepb.YangzhunongchangAddTaskRequest.Count"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddTaskRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddTaskRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangAddTaskRequest.Id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // int32 Index = 2;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_index(), target);
  }

  // string Count = 3;
  if (!this->count().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_count().data(), static_cast<int>(this->_internal_count().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gamepb.YangzhunongchangAddTaskRequest.Count");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddTaskRequest)
  return target;
}

size_t YangzhunongchangAddTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddTaskRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string Count = 3;
  if (!this->count().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_count());
  }

  // int32 Index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddTaskRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddTaskRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddTaskRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddTaskRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddTaskRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddTaskRequest::MergeFrom(const YangzhunongchangAddTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from.count().empty()) {
    _internal_set_count(from._internal_count());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void YangzhunongchangAddTaskRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddTaskRequest::CopyFrom(const YangzhunongchangAddTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddTaskRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangAddTaskRequest::InternalSwap(YangzhunongchangAddTaskRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &count_, GetArenaForAllocation(),
      &other->count_, other->GetArenaForAllocation()
  );
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddTaskRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[210]);
}

// ===================================================================

class YangzhunongchangAddTaskResponse::_Internal {
 public:
};

YangzhunongchangAddTaskResponse::YangzhunongchangAddTaskResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAddTaskResponse)
}
YangzhunongchangAddTaskResponse::YangzhunongchangAddTaskResponse(const YangzhunongchangAddTaskResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAddTaskResponse)
}

void YangzhunongchangAddTaskResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangAddTaskResponse::~YangzhunongchangAddTaskResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAddTaskResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAddTaskResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAddTaskResponse::ArenaDtor(void* object) {
  YangzhunongchangAddTaskResponse* _this = reinterpret_cast< YangzhunongchangAddTaskResponse* >(object);
  (void)_this;
}
void YangzhunongchangAddTaskResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAddTaskResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAddTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAddTaskResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAddTaskResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAddTaskResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAddTaskResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAddTaskResponse)
  return target;
}

size_t YangzhunongchangAddTaskResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAddTaskResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAddTaskResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAddTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAddTaskResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAddTaskResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAddTaskResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAddTaskResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangAddTaskResponse::MergeFrom(const YangzhunongchangAddTaskResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAddTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangAddTaskResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAddTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAddTaskResponse::CopyFrom(const YangzhunongchangAddTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAddTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAddTaskResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangAddTaskResponse::InternalSwap(YangzhunongchangAddTaskResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAddTaskResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[211]);
}

// ===================================================================

class YangzhunongchangAwardRequest::_Internal {
 public:
};

YangzhunongchangAwardRequest::YangzhunongchangAwardRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAwardRequest)
}
YangzhunongchangAwardRequest::YangzhunongchangAwardRequest(const YangzhunongchangAwardRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAwardRequest)
}

void YangzhunongchangAwardRequest::SharedCtor() {
}

YangzhunongchangAwardRequest::~YangzhunongchangAwardRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAwardRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAwardRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAwardRequest::ArenaDtor(void* object) {
  YangzhunongchangAwardRequest* _this = reinterpret_cast< YangzhunongchangAwardRequest* >(object);
  (void)_this;
}
void YangzhunongchangAwardRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAwardRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAwardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAwardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAwardRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAwardRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAwardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAwardRequest)
  return target;
}

size_t YangzhunongchangAwardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAwardRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAwardRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAwardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAwardRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAwardRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAwardRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAwardRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangAwardRequest::MergeFrom(const YangzhunongchangAwardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAwardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void YangzhunongchangAwardRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAwardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAwardRequest::CopyFrom(const YangzhunongchangAwardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAwardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAwardRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangAwardRequest::InternalSwap(YangzhunongchangAwardRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAwardRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[212]);
}

// ===================================================================

class YangzhunongchangAwardResponse::_Internal {
 public:
};

YangzhunongchangAwardResponse::YangzhunongchangAwardResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangAwardResponse)
}
YangzhunongchangAwardResponse::YangzhunongchangAwardResponse(const YangzhunongchangAwardResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangAwardResponse)
}

void YangzhunongchangAwardResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangAwardResponse::~YangzhunongchangAwardResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangAwardResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangAwardResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangAwardResponse::ArenaDtor(void* object) {
  YangzhunongchangAwardResponse* _this = reinterpret_cast< YangzhunongchangAwardResponse* >(object);
  (void)_this;
}
void YangzhunongchangAwardResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangAwardResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangAwardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangAwardResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangAwardResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangAwardResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangAwardResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangAwardResponse)
  return target;
}

size_t YangzhunongchangAwardResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangAwardResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangAwardResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangAwardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangAwardResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangAwardResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangAwardResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangAwardResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangAwardResponse::MergeFrom(const YangzhunongchangAwardResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangAwardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangAwardResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangAwardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangAwardResponse::CopyFrom(const YangzhunongchangAwardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangAwardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangAwardResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangAwardResponse::InternalSwap(YangzhunongchangAwardResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangAwardResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[213]);
}

// ===================================================================

class YangzhunongchangStartRequest::_Internal {
 public:
};

YangzhunongchangStartRequest::YangzhunongchangStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangStartRequest)
}
YangzhunongchangStartRequest::YangzhunongchangStartRequest(const YangzhunongchangStartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangStartRequest)
}

void YangzhunongchangStartRequest::SharedCtor() {
}

YangzhunongchangStartRequest::~YangzhunongchangStartRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangStartRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangStartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangStartRequest::ArenaDtor(void* object) {
  YangzhunongchangStartRequest* _this = reinterpret_cast< YangzhunongchangStartRequest* >(object);
  (void)_this;
}
void YangzhunongchangStartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangStartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangStartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangStartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangStartRequest)
  return target;
}

size_t YangzhunongchangStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangStartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangStartRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangStartRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangStartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangStartRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangStartRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangStartRequest::MergeFrom(const YangzhunongchangStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void YangzhunongchangStartRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangStartRequest::CopyFrom(const YangzhunongchangStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangStartRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangStartRequest::InternalSwap(YangzhunongchangStartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangStartRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[214]);
}

// ===================================================================

class YangzhunongchangStartResponse::_Internal {
 public:
};

YangzhunongchangStartResponse::YangzhunongchangStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangStartResponse)
}
YangzhunongchangStartResponse::YangzhunongchangStartResponse(const YangzhunongchangStartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangStartResponse)
}

void YangzhunongchangStartResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangStartResponse::~YangzhunongchangStartResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangStartResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangStartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangStartResponse::ArenaDtor(void* object) {
  YangzhunongchangStartResponse* _this = reinterpret_cast< YangzhunongchangStartResponse* >(object);
  (void)_this;
}
void YangzhunongchangStartResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangStartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangStartResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangStartResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangStartResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangStartResponse)
  return target;
}

size_t YangzhunongchangStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangStartResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangStartResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangStartResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangStartResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangStartResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangStartResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangStartResponse::MergeFrom(const YangzhunongchangStartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangStartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangStartResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangStartResponse::CopyFrom(const YangzhunongchangStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangStartResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangStartResponse::InternalSwap(YangzhunongchangStartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangStartResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[215]);
}

// ===================================================================

class YangzhunongchangResultRequest::_Internal {
 public:
};

YangzhunongchangResultRequest::YangzhunongchangResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangResultRequest)
}
YangzhunongchangResultRequest::YangzhunongchangResultRequest(const YangzhunongchangResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangResultRequest)
}

void YangzhunongchangResultRequest::SharedCtor() {
result_ = 0;
}

YangzhunongchangResultRequest::~YangzhunongchangResultRequest() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangResultRequest::ArenaDtor(void* object) {
  YangzhunongchangResultRequest* _this = reinterpret_cast< YangzhunongchangResultRequest* >(object);
  (void)_this;
}
void YangzhunongchangResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangResultRequest)
  return target;
}

size_t YangzhunongchangResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangResultRequest)
    MergeFrom(*source);
  }
}

void YangzhunongchangResultRequest::MergeFrom(const YangzhunongchangResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void YangzhunongchangResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangResultRequest::CopyFrom(const YangzhunongchangResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangResultRequest::IsInitialized() const {
  return true;
}

void YangzhunongchangResultRequest::InternalSwap(YangzhunongchangResultRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangResultRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[216]);
}

// ===================================================================

class YangzhunongchangResultResponse::_Internal {
 public:
};

YangzhunongchangResultResponse::YangzhunongchangResultResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gamepb.YangzhunongchangResultResponse)
}
YangzhunongchangResultResponse::YangzhunongchangResultResponse(const YangzhunongchangResultResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gamepb.YangzhunongchangResultResponse)
}

void YangzhunongchangResultResponse::SharedCtor() {
code_ = 0;
}

YangzhunongchangResultResponse::~YangzhunongchangResultResponse() {
  // @@protoc_insertion_point(destructor:gamepb.YangzhunongchangResultResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void YangzhunongchangResultResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void YangzhunongchangResultResponse::ArenaDtor(void* object) {
  YangzhunongchangResultResponse* _this = reinterpret_cast< YangzhunongchangResultResponse* >(object);
  (void)_this;
}
void YangzhunongchangResultResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void YangzhunongchangResultResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void YangzhunongchangResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gamepb.YangzhunongchangResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* YangzhunongchangResultResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YangzhunongchangResultResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gamepb.YangzhunongchangResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gamepb.YangzhunongchangResultResponse)
  return target;
}

size_t YangzhunongchangResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gamepb.YangzhunongchangResultResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YangzhunongchangResultResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gamepb.YangzhunongchangResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const YangzhunongchangResultResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YangzhunongchangResultResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gamepb.YangzhunongchangResultResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gamepb.YangzhunongchangResultResponse)
    MergeFrom(*source);
  }
}

void YangzhunongchangResultResponse::MergeFrom(const YangzhunongchangResultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gamepb.YangzhunongchangResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void YangzhunongchangResultResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gamepb.YangzhunongchangResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YangzhunongchangResultResponse::CopyFrom(const YangzhunongchangResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gamepb.YangzhunongchangResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YangzhunongchangResultResponse::IsInitialized() const {
  return true;
}

void YangzhunongchangResultResponse::InternalSwap(YangzhunongchangResultResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata YangzhunongchangResultResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gamepb_2fgamepb_2eproto_getter, &descriptor_table_gamepb_2fgamepb_2eproto_once,
      file_level_metadata_gamepb_2fgamepb_2eproto[217]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace gamepb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::gamepb::KickPush* Arena::CreateMaybeMessage< ::gamepb::KickPush >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::KickPush >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::LoginRequest* Arena::CreateMaybeMessage< ::gamepb::LoginRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::LoginRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::LoginResponse* Arena::CreateMaybeMessage< ::gamepb::LoginResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::LoginResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::RoundShareRequest* Arena::CreateMaybeMessage< ::gamepb::RoundShareRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::RoundShareRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::RoundShareResponse* Arena::CreateMaybeMessage< ::gamepb::RoundShareResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::RoundShareResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::RoundStartRequest* Arena::CreateMaybeMessage< ::gamepb::RoundStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::RoundStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::RoundStartResponse* Arena::CreateMaybeMessage< ::gamepb::RoundStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::RoundStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::RoundResultRequest* Arena::CreateMaybeMessage< ::gamepb::RoundResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::RoundResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::RoundResultResponse* Arena::CreateMaybeMessage< ::gamepb::RoundResultResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::RoundResultResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::RankUser* Arena::CreateMaybeMessage< ::gamepb::RankUser >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::RankUser >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GetLevelRankRequest* Arena::CreateMaybeMessage< ::gamepb::GetLevelRankRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GetLevelRankRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GetLevelRankResponse* Arena::CreateMaybeMessage< ::gamepb::GetLevelRankResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GetLevelRankResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GetScoreRankRequest* Arena::CreateMaybeMessage< ::gamepb::GetScoreRankRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GetScoreRankRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GetScoreRankResponse* Arena::CreateMaybeMessage< ::gamepb::GetScoreRankResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GetScoreRankResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GetMedalRankRequest* Arena::CreateMaybeMessage< ::gamepb::GetMedalRankRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GetMedalRankRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GetMedalRankResponse* Arena::CreateMaybeMessage< ::gamepb::GetMedalRankResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GetMedalRankResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::DaxiguaGetDataRequest* Arena::CreateMaybeMessage< ::gamepb::DaxiguaGetDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::DaxiguaGetDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::DaxiguaGetDataResponse* Arena::CreateMaybeMessage< ::gamepb::DaxiguaGetDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::DaxiguaGetDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::DaxiguaStartRequest* Arena::CreateMaybeMessage< ::gamepb::DaxiguaStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::DaxiguaStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::DaxiguaStartResponse* Arena::CreateMaybeMessage< ::gamepb::DaxiguaStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::DaxiguaStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::DaxiguaResultRequest* Arena::CreateMaybeMessage< ::gamepb::DaxiguaResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::DaxiguaResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::DaxiguaResultResponse* Arena::CreateMaybeMessage< ::gamepb::DaxiguaResultResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::DaxiguaResultResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqGetDataRequest* Arena::CreateMaybeMessage< ::gamepb::BpbxqGetDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqGetDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqGetDataResponse* Arena::CreateMaybeMessage< ::gamepb::BpbxqGetDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqGetDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqDaySignRequest* Arena::CreateMaybeMessage< ::gamepb::BpbxqDaySignRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqDaySignRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqDaySignResponse* Arena::CreateMaybeMessage< ::gamepb::BpbxqDaySignResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqDaySignResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqBuySkinRequest* Arena::CreateMaybeMessage< ::gamepb::BpbxqBuySkinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqBuySkinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqBuySkinResponse* Arena::CreateMaybeMessage< ::gamepb::BpbxqBuySkinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqBuySkinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqUseSkinRequest* Arena::CreateMaybeMessage< ::gamepb::BpbxqUseSkinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqUseSkinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqUseSkinResponse* Arena::CreateMaybeMessage< ::gamepb::BpbxqUseSkinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqUseSkinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqPickCoinRequest* Arena::CreateMaybeMessage< ::gamepb::BpbxqPickCoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqPickCoinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqPickCoinResponse* Arena::CreateMaybeMessage< ::gamepb::BpbxqPickCoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqPickCoinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqReviveRequest* Arena::CreateMaybeMessage< ::gamepb::BpbxqReviveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqReviveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqReviveResponse* Arena::CreateMaybeMessage< ::gamepb::BpbxqReviveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqReviveResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqDieflyRequest* Arena::CreateMaybeMessage< ::gamepb::BpbxqDieflyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqDieflyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqDieflyResponse* Arena::CreateMaybeMessage< ::gamepb::BpbxqDieflyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqDieflyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqRewardRequest* Arena::CreateMaybeMessage< ::gamepb::BpbxqRewardRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqRewardRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqRewardResponse* Arena::CreateMaybeMessage< ::gamepb::BpbxqRewardResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqRewardResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqStartRequest* Arena::CreateMaybeMessage< ::gamepb::BpbxqStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqStartResponse* Arena::CreateMaybeMessage< ::gamepb::BpbxqStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqResultRequest* Arena::CreateMaybeMessage< ::gamepb::BpbxqResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::BpbxqResultResponse* Arena::CreateMaybeMessage< ::gamepb::BpbxqResultResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::BpbxqResultResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuGetDataRequest* Arena::CreateMaybeMessage< ::gamepb::CaichengyuGetDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuGetDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuGetDataResponse* Arena::CreateMaybeMessage< ::gamepb::CaichengyuGetDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuGetDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuStartRequest* Arena::CreateMaybeMessage< ::gamepb::CaichengyuStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuStartResponse* Arena::CreateMaybeMessage< ::gamepb::CaichengyuStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuResultRequest* Arena::CreateMaybeMessage< ::gamepb::CaichengyuResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuResultResponse* Arena::CreateMaybeMessage< ::gamepb::CaichengyuResultResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuResultResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuResetHpRequest* Arena::CreateMaybeMessage< ::gamepb::CaichengyuResetHpRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuResetHpRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuResetHpResponse* Arena::CreateMaybeMessage< ::gamepb::CaichengyuResetHpResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuResetHpResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuUpgradeRoleRequest* Arena::CreateMaybeMessage< ::gamepb::CaichengyuUpgradeRoleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuUpgradeRoleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuUpgradeRoleResponse* Arena::CreateMaybeMessage< ::gamepb::CaichengyuUpgradeRoleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuUpgradeRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuUpgradeBuildRequest* Arena::CreateMaybeMessage< ::gamepb::CaichengyuUpgradeBuildRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuUpgradeBuildRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuUpgradeBuildResponse* Arena::CreateMaybeMessage< ::gamepb::CaichengyuUpgradeBuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuUpgradeBuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuGetHpRequest* Arena::CreateMaybeMessage< ::gamepb::CaichengyuGetHpRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuGetHpRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuGetHpResponse* Arena::CreateMaybeMessage< ::gamepb::CaichengyuGetHpResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuGetHpResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuTipRequest* Arena::CreateMaybeMessage< ::gamepb::CaichengyuTipRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuTipRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuTipResponse* Arena::CreateMaybeMessage< ::gamepb::CaichengyuTipResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuTipResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuGetTipRequest* Arena::CreateMaybeMessage< ::gamepb::CaichengyuGetTipRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuGetTipRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::CaichengyuGetTipResponse* Arena::CreateMaybeMessage< ::gamepb::CaichengyuGetTipResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::CaichengyuGetTipResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoGetDataRequest* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoGetDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoGetDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoGetDataResponse* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoGetDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoGetDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoBuySkinRequest* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoBuySkinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoBuySkinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoBuySkinResponse* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoBuySkinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoBuySkinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoUseSkinRequest* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoUseSkinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoUseSkinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoUseSkinResponse* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoUseSkinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoUseSkinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoDaySignRequest* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoDaySignRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoDaySignRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoDaySignResponse* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoDaySignResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoDaySignResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoGetCoinRequest* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoGetCoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoGetCoinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoGetCoinResponse* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoGetCoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoGetCoinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoGetInvincibleCoinRequest* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoGetInvincibleCoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoGetInvincibleCoinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoGetInvincibleCoinResponse* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoGetInvincibleCoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoGetInvincibleCoinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoGetLevelCoinRequest* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoGetLevelCoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoGetLevelCoinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoGetLevelCoinResponse* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoGetLevelCoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoGetLevelCoinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoStartRequest* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoStartResponse* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoResultRequest* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::FangkuainiaoResultResponse* Arena::CreateMaybeMessage< ::gamepb::FangkuainiaoResultResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::FangkuainiaoResultResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuGetDataRequest* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuGetDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuGetDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuGetDataResponse* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuGetDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuGetDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuAwardCoinRequest* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuAwardCoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuAwardCoinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuAwardCoinResponse* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuAwardCoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuAwardCoinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuUnlockSkinRequest* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuUnlockSkinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuUnlockSkinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuUnlockSkinResponse* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuUnlockSkinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuUnlockSkinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuUseSkinRequest* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuUseSkinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuUseSkinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuUseSkinResponse* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuUseSkinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuUseSkinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuStartRequest* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuStartResponse* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuResultRequest* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuResultResponse* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuResultResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuResultResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuLevelStartRequest* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuLevelStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuLevelStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuLevelStartResponse* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuLevelStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuLevelStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuLevelResultRequest* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuLevelResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuLevelResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuLevelResultResponse* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuLevelResultResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuLevelResultResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuLevelPassRequest* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuLevelPassRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuLevelPassRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::GongjianchuanshuLevelPassResponse* Arena::CreateMaybeMessage< ::gamepb::GongjianchuanshuLevelPassResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::GongjianchuanshuLevelPassResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongGetDataRequest* Arena::CreateMaybeMessage< ::gamepb::PaopaolongGetDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongGetDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongLevel* Arena::CreateMaybeMessage< ::gamepb::PaopaolongLevel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongLevel >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongGetDataResponse* Arena::CreateMaybeMessage< ::gamepb::PaopaolongGetDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongGetDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongUseItemRequest* Arena::CreateMaybeMessage< ::gamepb::PaopaolongUseItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongUseItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongUseItemResponse* Arena::CreateMaybeMessage< ::gamepb::PaopaolongUseItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongUseItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongStartRequest* Arena::CreateMaybeMessage< ::gamepb::PaopaolongStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongStartResponse* Arena::CreateMaybeMessage< ::gamepb::PaopaolongStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongResultRequest* Arena::CreateMaybeMessage< ::gamepb::PaopaolongResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongResultResponse* Arena::CreateMaybeMessage< ::gamepb::PaopaolongResultResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongResultResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongFreeDrawRequest* Arena::CreateMaybeMessage< ::gamepb::PaopaolongFreeDrawRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongFreeDrawRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongFreeDrawResponse* Arena::CreateMaybeMessage< ::gamepb::PaopaolongFreeDrawResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongFreeDrawResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongCostDrawRequest* Arena::CreateMaybeMessage< ::gamepb::PaopaolongCostDrawRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongCostDrawRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongCostDrawResponse* Arena::CreateMaybeMessage< ::gamepb::PaopaolongCostDrawResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongCostDrawResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongSignRequest* Arena::CreateMaybeMessage< ::gamepb::PaopaolongSignRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongSignRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongSignResponse* Arena::CreateMaybeMessage< ::gamepb::PaopaolongSignResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongSignResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongShopFreeCoinRequest* Arena::CreateMaybeMessage< ::gamepb::PaopaolongShopFreeCoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongShopFreeCoinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongShopFreeCoinResponse* Arena::CreateMaybeMessage< ::gamepb::PaopaolongShopFreeCoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongShopFreeCoinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongShopFreeCoin2Request* Arena::CreateMaybeMessage< ::gamepb::PaopaolongShopFreeCoin2Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongShopFreeCoin2Request >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongShopFreeCoin2Response* Arena::CreateMaybeMessage< ::gamepb::PaopaolongShopFreeCoin2Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongShopFreeCoin2Response >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongShopBuyRequest* Arena::CreateMaybeMessage< ::gamepb::PaopaolongShopBuyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongShopBuyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongShopBuyResponse* Arena::CreateMaybeMessage< ::gamepb::PaopaolongShopBuyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongShopBuyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongNewPackRequest* Arena::CreateMaybeMessage< ::gamepb::PaopaolongNewPackRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongNewPackRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::PaopaolongNewPackResponse* Arena::CreateMaybeMessage< ::gamepb::PaopaolongNewPackResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::PaopaolongNewPackResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TanchishedazuozhanGetDataRequest* Arena::CreateMaybeMessage< ::gamepb::TanchishedazuozhanGetDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TanchishedazuozhanGetDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TanchishedazuozhanGetDataResponse* Arena::CreateMaybeMessage< ::gamepb::TanchishedazuozhanGetDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TanchishedazuozhanGetDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TanchishedazuozhanStartRequest* Arena::CreateMaybeMessage< ::gamepb::TanchishedazuozhanStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TanchishedazuozhanStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TanchishedazuozhanStartResponse* Arena::CreateMaybeMessage< ::gamepb::TanchishedazuozhanStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TanchishedazuozhanStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TanchishedazuozhanResultRequest* Arena::CreateMaybeMessage< ::gamepb::TanchishedazuozhanResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TanchishedazuozhanResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TanchishedazuozhanResultResponse* Arena::CreateMaybeMessage< ::gamepb::TanchishedazuozhanResultResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TanchishedazuozhanResultResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TanchishedazuozhanBuySkinRequest* Arena::CreateMaybeMessage< ::gamepb::TanchishedazuozhanBuySkinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TanchishedazuozhanBuySkinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TanchishedazuozhanBuySkinResponse* Arena::CreateMaybeMessage< ::gamepb::TanchishedazuozhanBuySkinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TanchishedazuozhanBuySkinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TanchishedazuozhanUseSkinRequest* Arena::CreateMaybeMessage< ::gamepb::TanchishedazuozhanUseSkinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TanchishedazuozhanUseSkinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TanchishedazuozhanUseSkinResponse* Arena::CreateMaybeMessage< ::gamepb::TanchishedazuozhanUseSkinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TanchishedazuozhanUseSkinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TanchishedazuozhanGetCoinRequest* Arena::CreateMaybeMessage< ::gamepb::TanchishedazuozhanGetCoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TanchishedazuozhanGetCoinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TanchishedazuozhanGetCoinResponse* Arena::CreateMaybeMessage< ::gamepb::TanchishedazuozhanGetCoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TanchishedazuozhanGetCoinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TiantianpaokuGetDataRequest* Arena::CreateMaybeMessage< ::gamepb::TiantianpaokuGetDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TiantianpaokuGetDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TiantianpaokuGetDataResponse* Arena::CreateMaybeMessage< ::gamepb::TiantianpaokuGetDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TiantianpaokuGetDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TiantianpaokuGetCoinRequest* Arena::CreateMaybeMessage< ::gamepb::TiantianpaokuGetCoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TiantianpaokuGetCoinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TiantianpaokuGetCoinResponse* Arena::CreateMaybeMessage< ::gamepb::TiantianpaokuGetCoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TiantianpaokuGetCoinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TiantianpaokuBuySkinRequest* Arena::CreateMaybeMessage< ::gamepb::TiantianpaokuBuySkinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TiantianpaokuBuySkinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TiantianpaokuBuySkinResponse* Arena::CreateMaybeMessage< ::gamepb::TiantianpaokuBuySkinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TiantianpaokuBuySkinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TiantianpaokuUseSkinRequest* Arena::CreateMaybeMessage< ::gamepb::TiantianpaokuUseSkinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TiantianpaokuUseSkinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TiantianpaokuUseSkinResponse* Arena::CreateMaybeMessage< ::gamepb::TiantianpaokuUseSkinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TiantianpaokuUseSkinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TiantianpaokuStartRequest* Arena::CreateMaybeMessage< ::gamepb::TiantianpaokuStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TiantianpaokuStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TiantianpaokuStartResponse* Arena::CreateMaybeMessage< ::gamepb::TiantianpaokuStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TiantianpaokuStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TiantianpaokuResultRequest* Arena::CreateMaybeMessage< ::gamepb::TiantianpaokuResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TiantianpaokuResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::TiantianpaokuResultResponse* Arena::CreateMaybeMessage< ::gamepb::TiantianpaokuResultResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::TiantianpaokuResultResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiGetDataRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiGetDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiGetDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiLevel* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiLevel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiLevel >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiGetDataResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiGetDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiGetDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiSignQueryRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiSignQueryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiSignQueryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiSignQueryResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiSignQueryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiSignQueryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiSignRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiSignRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiSignRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiSignResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiSignResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiSignResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiFreeDrawQueryRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiFreeDrawQueryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiFreeDrawQueryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiFreeDrawQueryResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiFreeDrawQueryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiFreeDrawQueryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiFreeDrawRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiFreeDrawRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiFreeDrawRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiFreeDrawResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiFreeDrawResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiFreeDrawResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiFlyQueryRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiFlyQueryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiFlyQueryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiFlyQueryResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiFlyQueryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiFlyQueryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiFlyRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiFlyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiFlyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiFlyResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiFlyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiFlyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiOfflineCoinRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiOfflineCoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiOfflineCoinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiOfflineCoinResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiOfflineCoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiOfflineCoinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiBuySkinRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiBuySkinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiBuySkinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiBuySkinResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiBuySkinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiBuySkinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiUseSkinRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiUseSkinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiUseSkinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiUseSkinResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiUseSkinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiUseSkinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiStartRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiStartResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiResultRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiResultResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiResultResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiResultResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiLevelCoinRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiLevelCoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiLevelCoinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiLevelCoinResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiLevelCoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiLevelCoinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiLevelUnlockRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiLevelUnlockRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiLevelUnlockRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiLevelUnlockResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiLevelUnlockResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiLevelUnlockResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiAddHpRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiAddHpRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiAddHpRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiAddHpResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiAddHpResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiAddHpResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiLevelStartRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiLevelStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiLevelStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiLevelStartResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiLevelStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiLevelStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiLevelResultRequest* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiLevelResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiLevelResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::HuanlemaomibeiLevelResultResponse* Arena::CreateMaybeMessage< ::gamepb::HuanlemaomibeiLevelResultResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::HuanlemaomibeiLevelResultResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangItem* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangItem >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangPig* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangPig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangPig >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangBreedPig* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangBreedPig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangBreedPig >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangUsu* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangUsu >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangUsu >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangFood* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangFood >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangFood >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangTask* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangTask >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangTask >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangGetDataRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangGetDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangGetDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangGetDataResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangGetDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangGetDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddExpRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddExpRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddExpRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddExpResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddExpResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddExpResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddLevelRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddLevelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddLevelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddLevelResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddLevelResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddLevelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddCoinRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddCoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddCoinRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddCoinResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddCoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddCoinResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddDiamondRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddDiamondRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddDiamondRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddDiamondResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddDiamondResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddDiamondResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddItemRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddItemResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddPigRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddPigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddPigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddPigResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddPigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddPigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangDelPigRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangDelPigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangDelPigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangDelPigResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangDelPigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangDelPigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddBreedPigRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddBreedPigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddBreedPigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddBreedPigResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddBreedPigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddBreedPigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangDelBreedPigRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangDelBreedPigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangDelBreedPigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangDelBreedPigResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangDelBreedPigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangDelBreedPigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddUsuRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddUsuRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddUsuRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddUsuResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddUsuResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddUsuResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddFoodRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddFoodRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddFoodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddFoodResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddFoodResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddFoodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangDelFoodRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangDelFoodRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangDelFoodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangDelFoodResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangDelFoodResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangDelFoodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddTaskRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddTaskRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddTaskRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAddTaskResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAddTaskResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAddTaskResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAwardRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAwardRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAwardRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangAwardResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangAwardResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangAwardResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangStartRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangStartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangStartResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangStartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangStartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangResultRequest* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::gamepb::YangzhunongchangResultResponse* Arena::CreateMaybeMessage< ::gamepb::YangzhunongchangResultResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gamepb::YangzhunongchangResultResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
